State 4 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: gvariable_list function_list

    2 gvariable_list: %empty
    3               | gvariable_list variable

    4 function_list: function
    5              | function_list function

    6 $@1: %empty

    7 $@2: %empty

    8 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN body

    9 parameter: %empty
   10          | _TYPE _ID
   11          | parameter _COMMA _TYPE _ID

   12 $@3: %empty

   13 $@4: %empty

   14 $@5: %empty

   15 body: _LBRACKET $@3 variable_list $@4 statement_list $@5 _RBRACKET

   16 variable_list: %empty
   17              | variable_list variable

   18 $@6: %empty

   19 variable: _TYPE $@6 var_poss _SEMICOLON

   20 var_poss: _ID
   21         | _ID _ASSIGN num_exp
   22         | var_poss _COMMA _ID
   23         | var_poss _COMMA _ID _ASSIGN num_exp

   24 statement_list: %empty
   25               | statement_list statement

   26 statement: compound_statement
   27          | assignment_statement
   28          | if_statement
   29          | return_statement
   30          | select_statement
   31          | inc_statement
   32          | para_statement
   33          | void_func
   34          | check_exp

   35 $@7: %empty

   36 $@8: %empty

   37 check_exp: _CHECK _LSBRAC _ID $@7 _RSBRAC _LBRACKET $@8 whenPart otherwise _RBRACKET

   38 otherwise: %empty
   39          | _OTHERWISE _ARROW statement

   40 whenPart: when finish_par
   41         | whenPart when finish_par

   42 finish_par: %empty
   43           | _FINISH _SEMICOLON

   44 when: _WHEN literal _ARROW statement

   45 void_func: function_call _SEMICOLON

   46 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

   47 inc_statement: _ID _INC_OP _SEMICOLON

   48 compound_statement: _LBRACKET statement_list _RBRACKET

   49 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   50 num_exp: exp
   51        | num_exp _AROP exp

   52 exp: literal
   53    | _ID
   54    | function_call
   55    | _LPAREN num_exp _RPAREN
   56    | _ID _INC_OP

   57 literal: _INT_NUMBER
   58        | _UINT_NUMBER

   59 $@9: %empty

   60 $@10: %empty

   61 function_call: _ID $@9 _LPAREN $@10 argument _RPAREN

   62 argument: %empty
   63         | num_exp
   64         | argument _COMMA num_exp

   65 if_statement: if_part
   66             | if_part _ELSE statement

   67 @11: %empty

   68 $@12: %empty

   69 if_part: _IF _LPAREN @11 rel_exp $@12 _RPAREN statement

   70 rel_exp: num_exp _RELOP num_exp

   71 return_statement: _RETURN num_exp _SEMICOLON
   72                 | _RETURN _SEMICOLON

   73 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   74 arg_select: _ID
   75           | arg_select _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 8 10 11 19
_IF (259) 69
_ELSE (260) 66
_RETURN (261) 71 72
_ID (262) 8 10 11 20 21 22 23 37 46 47 49 53 56 61 73 74 75
_INT_NUMBER (263) 57
_UINT_NUMBER (264) 58
_LPAREN (265) 8 46 55 61 69 73
_RPAREN (266) 8 46 55 61 69 73
_LBRACKET (267) 15 37 48
_RBRACKET (268) 15 37 48
_ASSIGN (269) 21 23 46 49
_SEMICOLON (270) 19 43 45 47 49 71 72 73
_AROP (271) 51
_RELOP (272) 70
_SELECT (273) 73
_FROM (274) 73
_WHERE (275) 73
_COMMA (276) 11 22 23 64 75
_INC_OP (277) 47 56
_PARA (278) 46
_PASO (279) 46
_COLON (280) 46
_CHECK (281) 37
_WHEN (282) 44
_FINISH (283) 43
_LSBRAC (284) 37
_RSBRAC (285) 37
_ARROW (286) 39 44
_OTHERWISE (287) 39
ONLY_IF (288)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
gvariable_list (36)
    on left: 2 3, on right: 1 3
function_list (37)
    on left: 4 5, on right: 1 5
function (38)
    on left: 8, on right: 4 5
$@1 (39)
    on left: 6, on right: 8
$@2 (40)
    on left: 7, on right: 8
parameter (41)
    on left: 9 10 11, on right: 8 11
body (42)
    on left: 15, on right: 8
$@3 (43)
    on left: 12, on right: 15
$@4 (44)
    on left: 13, on right: 15
$@5 (45)
    on left: 14, on right: 15
variable_list (46)
    on left: 16 17, on right: 15 17
variable (47)
    on left: 19, on right: 3 17
$@6 (48)
    on left: 18, on right: 19
var_poss (49)
    on left: 20 21 22 23, on right: 19 22 23
statement_list (50)
    on left: 24 25, on right: 15 25 48
statement (51)
    on left: 26 27 28 29 30 31 32 33 34, on right: 25 39 44 46 66 69
check_exp (52)
    on left: 37, on right: 34
$@7 (53)
    on left: 35, on right: 37
$@8 (54)
    on left: 36, on right: 37
otherwise (55)
    on left: 38 39, on right: 37
whenPart (56)
    on left: 40 41, on right: 37 41
finish_par (57)
    on left: 42 43, on right: 40 41
when (58)
    on left: 44, on right: 40 41
void_func (59)
    on left: 45, on right: 33
para_statement (60)
    on left: 46, on right: 32
inc_statement (61)
    on left: 47, on right: 31
compound_statement (62)
    on left: 48, on right: 26
assignment_statement (63)
    on left: 49, on right: 27
num_exp (64)
    on left: 50 51, on right: 21 23 49 51 55 63 64 70 71
exp (65)
    on left: 52 53 54 55 56, on right: 50 51
literal (66)
    on left: 57 58, on right: 44 46 52
function_call (67)
    on left: 61, on right: 45 54
$@9 (68)
    on left: 59, on right: 61
$@10 (69)
    on left: 60, on right: 61
argument (70)
    on left: 62 63 64, on right: 61 64
if_statement (71)
    on left: 65 66, on right: 28
if_part (72)
    on left: 69, on right: 65 66
@11 (73)
    on left: 67, on right: 69
$@12 (74)
    on left: 68, on right: 69
rel_exp (75)
    on left: 70, on right: 69 73
return_statement (76)
    on left: 71 72, on right: 29
select_statement (77)
    on left: 73, on right: 30
arg_select (78)
    on left: 74 75, on right: 73 75


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (gvariable_list)

    program         go to state 1
    gvariable_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: gvariable_list . function_list
    3 gvariable_list: gvariable_list . variable

    _TYPE  shift, and go to state 4

    function_list  go to state 5
    function       go to state 6
    variable       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    8 function: _TYPE . _ID $@1 _LPAREN $@2 parameter _RPAREN body
   19 variable: _TYPE . $@6 var_poss _SEMICOLON

    _ID  shift, and go to state 8

    _ID  [reduce using rule 18 ($@6)]

    $@6  go to state 9


State 5

    1 program: gvariable_list function_list .
    5 function_list: function_list . function

    _TYPE  shift, and go to state 10

    $default  reduce using rule 1 (program)

    function  go to state 11


State 6

    4 function_list: function .

    $default  reduce using rule 4 (function_list)


State 7

    3 gvariable_list: gvariable_list variable .

    $default  reduce using rule 3 (gvariable_list)


State 8

    8 function: _TYPE _ID . $@1 _LPAREN $@2 parameter _RPAREN body

    $default  reduce using rule 6 ($@1)

    $@1  go to state 12


State 9

   19 variable: _TYPE $@6 . var_poss _SEMICOLON

    _ID  shift, and go to state 13

    var_poss  go to state 14


State 10

    8 function: _TYPE . _ID $@1 _LPAREN $@2 parameter _RPAREN body

    _ID  shift, and go to state 8


State 11

    5 function_list: function_list function .

    $default  reduce using rule 5 (function_list)


State 12

    8 function: _TYPE _ID $@1 . _LPAREN $@2 parameter _RPAREN body

    _LPAREN  shift, and go to state 15


State 13

   20 var_poss: _ID .
   21         | _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 16

    $default  reduce using rule 20 (var_poss)


State 14

   19 variable: _TYPE $@6 var_poss . _SEMICOLON
   22 var_poss: var_poss . _COMMA _ID
   23         | var_poss . _COMMA _ID _ASSIGN num_exp

    _SEMICOLON  shift, and go to state 17
    _COMMA      shift, and go to state 18


State 15

    8 function: _TYPE _ID $@1 _LPAREN . $@2 parameter _RPAREN body

    $default  reduce using rule 7 ($@2)

    $@2  go to state 19


State 16

   21 var_poss: _ID _ASSIGN . num_exp

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 23

    num_exp        go to state 24
    exp            go to state 25
    literal        go to state 26
    function_call  go to state 27


State 17

   19 variable: _TYPE $@6 var_poss _SEMICOLON .

    $default  reduce using rule 19 (variable)


State 18

   22 var_poss: var_poss _COMMA . _ID
   23         | var_poss _COMMA . _ID _ASSIGN num_exp

    _ID  shift, and go to state 28


State 19

    8 function: _TYPE _ID $@1 _LPAREN $@2 . parameter _RPAREN body

    _TYPE  shift, and go to state 29

    $default  reduce using rule 9 (parameter)

    parameter  go to state 30


State 20

   53 exp: _ID .
   56    | _ID . _INC_OP
   61 function_call: _ID . $@9 _LPAREN $@10 argument _RPAREN

    _INC_OP  shift, and go to state 31

    _LPAREN   reduce using rule 59 ($@9)
    $default  reduce using rule 53 (exp)

    $@9  go to state 32


State 21

   57 literal: _INT_NUMBER .

    $default  reduce using rule 57 (literal)


State 22

   58 literal: _UINT_NUMBER .

    $default  reduce using rule 58 (literal)


State 23

   55 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 23

    num_exp        go to state 33
    exp            go to state 25
    literal        go to state 26
    function_call  go to state 27


State 24

   21 var_poss: _ID _ASSIGN num_exp .
   51 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 34

    $default  reduce using rule 21 (var_poss)


State 25

   50 num_exp: exp .

    $default  reduce using rule 50 (num_exp)


State 26

   52 exp: literal .

    $default  reduce using rule 52 (exp)


State 27

   54 exp: function_call .

    $default  reduce using rule 54 (exp)


State 28

   22 var_poss: var_poss _COMMA _ID .
   23         | var_poss _COMMA _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 35

    $default  reduce using rule 22 (var_poss)


State 29

   10 parameter: _TYPE . _ID

    _ID  shift, and go to state 36


State 30

    8 function: _TYPE _ID $@1 _LPAREN $@2 parameter . _RPAREN body
   11 parameter: parameter . _COMMA _TYPE _ID

    _RPAREN  shift, and go to state 37
    _COMMA   shift, and go to state 38


State 31

   56 exp: _ID _INC_OP .

    $default  reduce using rule 56 (exp)


State 32

   61 function_call: _ID $@9 . _LPAREN $@10 argument _RPAREN

    _LPAREN  shift, and go to state 39


State 33

   51 num_exp: num_exp . _AROP exp
   55 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 40
    _AROP    shift, and go to state 34


State 34

   51 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 23

    exp            go to state 41
    literal        go to state 26
    function_call  go to state 27


State 35

   23 var_poss: var_poss _COMMA _ID _ASSIGN . num_exp

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 23

    num_exp        go to state 42
    exp            go to state 25
    literal        go to state 26
    function_call  go to state 27


State 36

   10 parameter: _TYPE _ID .

    $default  reduce using rule 10 (parameter)


State 37

    8 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN . body

    _LBRACKET  shift, and go to state 43

    body  go to state 44


State 38

   11 parameter: parameter _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 45


State 39

   61 function_call: _ID $@9 _LPAREN . $@10 argument _RPAREN

    $default  reduce using rule 60 ($@10)

    $@10  go to state 46


State 40

   55 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 55 (exp)


State 41

   51 num_exp: num_exp _AROP exp .

    $default  reduce using rule 51 (num_exp)


State 42

   23 var_poss: var_poss _COMMA _ID _ASSIGN num_exp .
   51 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 34

    $default  reduce using rule 23 (var_poss)


State 43

   15 body: _LBRACKET . $@3 variable_list $@4 statement_list $@5 _RBRACKET

    $default  reduce using rule 12 ($@3)

    $@3  go to state 47


State 44

    8 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN body .

    $default  reduce using rule 8 (function)


State 45

   11 parameter: parameter _COMMA _TYPE . _ID

    _ID  shift, and go to state 48


State 46

   61 function_call: _ID $@9 _LPAREN $@10 . argument _RPAREN

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 23

    $default  reduce using rule 62 (argument)

    num_exp        go to state 49
    exp            go to state 25
    literal        go to state 26
    function_call  go to state 27
    argument       go to state 50


State 47

   15 body: _LBRACKET $@3 . variable_list $@4 statement_list $@5 _RBRACKET

    $default  reduce using rule 16 (variable_list)

    variable_list  go to state 51


State 48

   11 parameter: parameter _COMMA _TYPE _ID .

    $default  reduce using rule 11 (parameter)


State 49

   51 num_exp: num_exp . _AROP exp
   63 argument: num_exp .

    _AROP  shift, and go to state 34

    $default  reduce using rule 63 (argument)


State 50

   61 function_call: _ID $@9 _LPAREN $@10 argument . _RPAREN
   64 argument: argument . _COMMA num_exp

    _RPAREN  shift, and go to state 52
    _COMMA   shift, and go to state 53


State 51

   15 body: _LBRACKET $@3 variable_list . $@4 statement_list $@5 _RBRACKET
   17 variable_list: variable_list . variable

    _TYPE  shift, and go to state 54

    $default  reduce using rule 13 ($@4)

    $@4       go to state 55
    variable  go to state 56


State 52

   61 function_call: _ID $@9 _LPAREN $@10 argument _RPAREN .

    $default  reduce using rule 61 (function_call)


State 53

   64 argument: argument _COMMA . num_exp

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 23

    num_exp        go to state 57
    exp            go to state 25
    literal        go to state 26
    function_call  go to state 27


State 54

   19 variable: _TYPE . $@6 var_poss _SEMICOLON

    $default  reduce using rule 18 ($@6)

    $@6  go to state 9


State 55

   15 body: _LBRACKET $@3 variable_list $@4 . statement_list $@5 _RBRACKET

    $default  reduce using rule 24 (statement_list)

    statement_list  go to state 58


State 56

   17 variable_list: variable_list variable .

    $default  reduce using rule 17 (variable_list)


State 57

   51 num_exp: num_exp . _AROP exp
   64 argument: argument _COMMA num_exp .

    _AROP  shift, and go to state 34

    $default  reduce using rule 64 (argument)


State 58

   15 body: _LBRACKET $@3 variable_list $@4 statement_list . $@5 _RBRACKET
   25 statement_list: statement_list . statement

    _IF        shift, and go to state 59
    _RETURN    shift, and go to state 60
    _ID        shift, and go to state 61
    _LBRACKET  shift, and go to state 62
    _SELECT    shift, and go to state 63
    _PARA      shift, and go to state 64
    _CHECK     shift, and go to state 65

    $default  reduce using rule 14 ($@5)

    $@5                   go to state 66
    statement             go to state 67
    check_exp             go to state 68
    void_func             go to state 69
    para_statement        go to state 70
    inc_statement         go to state 71
    compound_statement    go to state 72
    assignment_statement  go to state 73
    function_call         go to state 74
    if_statement          go to state 75
    if_part               go to state 76
    return_statement      go to state 77
    select_statement      go to state 78


State 59

   69 if_part: _IF . _LPAREN @11 rel_exp $@12 _RPAREN statement

    _LPAREN  shift, and go to state 79


State 60

   71 return_statement: _RETURN . num_exp _SEMICOLON
   72                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 23
    _SEMICOLON    shift, and go to state 80

    num_exp        go to state 81
    exp            go to state 25
    literal        go to state 26
    function_call  go to state 27


State 61

   47 inc_statement: _ID . _INC_OP _SEMICOLON
   49 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   61 function_call: _ID . $@9 _LPAREN $@10 argument _RPAREN

    _ASSIGN  shift, and go to state 82
    _INC_OP  shift, and go to state 83

    $default  reduce using rule 59 ($@9)

    $@9  go to state 32


State 62

   48 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 24 (statement_list)

    statement_list  go to state 84


State 63

   73 select_statement: _SELECT . arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 85

    arg_select  go to state 86


State 64

   46 para_statement: _PARA . _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

    _LPAREN  shift, and go to state 87


State 65

   37 check_exp: _CHECK . _LSBRAC _ID $@7 _RSBRAC _LBRACKET $@8 whenPart otherwise _RBRACKET

    _LSBRAC  shift, and go to state 88


State 66

   15 body: _LBRACKET $@3 variable_list $@4 statement_list $@5 . _RBRACKET

    _RBRACKET  shift, and go to state 89


State 67

   25 statement_list: statement_list statement .

    $default  reduce using rule 25 (statement_list)


State 68

   34 statement: check_exp .

    $default  reduce using rule 34 (statement)


State 69

   33 statement: void_func .

    $default  reduce using rule 33 (statement)


State 70

   32 statement: para_statement .

    $default  reduce using rule 32 (statement)


State 71

   31 statement: inc_statement .

    $default  reduce using rule 31 (statement)


State 72

   26 statement: compound_statement .

    $default  reduce using rule 26 (statement)


State 73

   27 statement: assignment_statement .

    $default  reduce using rule 27 (statement)


State 74

   45 void_func: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 90


State 75

   28 statement: if_statement .

    $default  reduce using rule 28 (statement)


State 76

   65 if_statement: if_part .
   66             | if_part . _ELSE statement

    _ELSE  shift, and go to state 91

    $default  reduce using rule 65 (if_statement)


State 77

   29 statement: return_statement .

    $default  reduce using rule 29 (statement)


State 78

   30 statement: select_statement .

    $default  reduce using rule 30 (statement)


State 79

   69 if_part: _IF _LPAREN . @11 rel_exp $@12 _RPAREN statement

    $default  reduce using rule 67 (@11)

    @11  go to state 92


State 80

   72 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 72 (return_statement)


State 81

   51 num_exp: num_exp . _AROP exp
   71 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 93
    _AROP       shift, and go to state 34


State 82

   49 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 23

    num_exp        go to state 94
    exp            go to state 25
    literal        go to state 26
    function_call  go to state 27


State 83

   47 inc_statement: _ID _INC_OP . _SEMICOLON

    _SEMICOLON  shift, and go to state 95


State 84

   25 statement_list: statement_list . statement
   48 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 59
    _RETURN    shift, and go to state 60
    _ID        shift, and go to state 61
    _LBRACKET  shift, and go to state 62
    _RBRACKET  shift, and go to state 96
    _SELECT    shift, and go to state 63
    _PARA      shift, and go to state 64
    _CHECK     shift, and go to state 65

    statement             go to state 67
    check_exp             go to state 68
    void_func             go to state 69
    para_statement        go to state 70
    inc_statement         go to state 71
    compound_statement    go to state 72
    assignment_statement  go to state 73
    function_call         go to state 74
    if_statement          go to state 75
    if_part               go to state 76
    return_statement      go to state 77
    select_statement      go to state 78


State 85

   74 arg_select: _ID .

    $default  reduce using rule 74 (arg_select)


State 86

   73 select_statement: _SELECT arg_select . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON
   75 arg_select: arg_select . _COMMA _ID

    _FROM   shift, and go to state 97
    _COMMA  shift, and go to state 98


State 87

   46 para_statement: _PARA _LPAREN . _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

    _ID  shift, and go to state 99


State 88

   37 check_exp: _CHECK _LSBRAC . _ID $@7 _RSBRAC _LBRACKET $@8 whenPart otherwise _RBRACKET

    _ID  shift, and go to state 100


State 89

   15 body: _LBRACKET $@3 variable_list $@4 statement_list $@5 _RBRACKET .

    $default  reduce using rule 15 (body)


State 90

   45 void_func: function_call _SEMICOLON .

    $default  reduce using rule 45 (void_func)


State 91

   66 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 59
    _RETURN    shift, and go to state 60
    _ID        shift, and go to state 61
    _LBRACKET  shift, and go to state 62
    _SELECT    shift, and go to state 63
    _PARA      shift, and go to state 64
    _CHECK     shift, and go to state 65

    statement             go to state 101
    check_exp             go to state 68
    void_func             go to state 69
    para_statement        go to state 70
    inc_statement         go to state 71
    compound_statement    go to state 72
    assignment_statement  go to state 73
    function_call         go to state 74
    if_statement          go to state 75
    if_part               go to state 76
    return_statement      go to state 77
    select_statement      go to state 78


State 92

   69 if_part: _IF _LPAREN @11 . rel_exp $@12 _RPAREN statement

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 23

    num_exp        go to state 102
    exp            go to state 25
    literal        go to state 26
    function_call  go to state 27
    rel_exp        go to state 103


State 93

   71 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 71 (return_statement)


State 94

   49 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   51 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 104
    _AROP       shift, and go to state 34


State 95

   47 inc_statement: _ID _INC_OP _SEMICOLON .

    $default  reduce using rule 47 (inc_statement)


State 96

   48 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 48 (compound_statement)


State 97

   73 select_statement: _SELECT arg_select _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 105


State 98

   75 arg_select: arg_select _COMMA . _ID

    _ID  shift, and go to state 106


State 99

   46 para_statement: _PARA _LPAREN _ID . _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

    _ASSIGN  shift, and go to state 107


State 100

   37 check_exp: _CHECK _LSBRAC _ID . $@7 _RSBRAC _LBRACKET $@8 whenPart otherwise _RBRACKET

    $default  reduce using rule 35 ($@7)

    $@7  go to state 108


State 101

   66 if_statement: if_part _ELSE statement .

    $default  reduce using rule 66 (if_statement)


State 102

   51 num_exp: num_exp . _AROP exp
   70 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 34
    _RELOP  shift, and go to state 109


State 103

   69 if_part: _IF _LPAREN @11 rel_exp . $@12 _RPAREN statement

    $default  reduce using rule 68 ($@12)

    $@12  go to state 110


State 104

   49 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 49 (assignment_statement)


State 105

   73 select_statement: _SELECT arg_select _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 111


State 106

   75 arg_select: arg_select _COMMA _ID .

    $default  reduce using rule 75 (arg_select)


State 107

   46 para_statement: _PARA _LPAREN _ID _ASSIGN . literal _COLON literal _COLON _PASO literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22

    literal  go to state 112


State 108

   37 check_exp: _CHECK _LSBRAC _ID $@7 . _RSBRAC _LBRACKET $@8 whenPart otherwise _RBRACKET

    _RSBRAC  shift, and go to state 113


State 109

   70 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 23

    num_exp        go to state 114
    exp            go to state 25
    literal        go to state 26
    function_call  go to state 27


State 110

   69 if_part: _IF _LPAREN @11 rel_exp $@12 . _RPAREN statement

    _RPAREN  shift, and go to state 115


State 111

   73 select_statement: _SELECT arg_select _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 116


State 112

   46 para_statement: _PARA _LPAREN _ID _ASSIGN literal . _COLON literal _COLON _PASO literal _RPAREN statement

    _COLON  shift, and go to state 117


State 113

   37 check_exp: _CHECK _LSBRAC _ID $@7 _RSBRAC . _LBRACKET $@8 whenPart otherwise _RBRACKET

    _LBRACKET  shift, and go to state 118


State 114

   51 num_exp: num_exp . _AROP exp
   70 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 34

    $default  reduce using rule 70 (rel_exp)


State 115

   69 if_part: _IF _LPAREN @11 rel_exp $@12 _RPAREN . statement

    _IF        shift, and go to state 59
    _RETURN    shift, and go to state 60
    _ID        shift, and go to state 61
    _LBRACKET  shift, and go to state 62
    _SELECT    shift, and go to state 63
    _PARA      shift, and go to state 64
    _CHECK     shift, and go to state 65

    statement             go to state 119
    check_exp             go to state 68
    void_func             go to state 69
    para_statement        go to state 70
    inc_statement         go to state 71
    compound_statement    go to state 72
    assignment_statement  go to state 73
    function_call         go to state 74
    if_statement          go to state 75
    if_part               go to state 76
    return_statement      go to state 77
    select_statement      go to state 78


State 116

   73 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 20
    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22
    _LPAREN       shift, and go to state 23

    num_exp        go to state 102
    exp            go to state 25
    literal        go to state 26
    function_call  go to state 27
    rel_exp        go to state 120


State 117

   46 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON . literal _COLON _PASO literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22

    literal  go to state 121


State 118

   37 check_exp: _CHECK _LSBRAC _ID $@7 _RSBRAC _LBRACKET . $@8 whenPart otherwise _RBRACKET

    $default  reduce using rule 36 ($@8)

    $@8  go to state 122


State 119

   69 if_part: _IF _LPAREN @11 rel_exp $@12 _RPAREN statement .

    $default  reduce using rule 69 (if_part)


State 120

   73 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 123


State 121

   46 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal . _COLON _PASO literal _RPAREN statement

    _COLON  shift, and go to state 124


State 122

   37 check_exp: _CHECK _LSBRAC _ID $@7 _RSBRAC _LBRACKET $@8 . whenPart otherwise _RBRACKET

    _WHEN  shift, and go to state 125

    whenPart  go to state 126
    when      go to state 127


State 123

   73 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 128


State 124

   46 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON . _PASO literal _RPAREN statement

    _PASO  shift, and go to state 129


State 125

   44 when: _WHEN . literal _ARROW statement

    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22

    literal  go to state 130


State 126

   37 check_exp: _CHECK _LSBRAC _ID $@7 _RSBRAC _LBRACKET $@8 whenPart . otherwise _RBRACKET
   41 whenPart: whenPart . when finish_par

    _WHEN       shift, and go to state 125
    _OTHERWISE  shift, and go to state 131

    $default  reduce using rule 38 (otherwise)

    otherwise  go to state 132
    when       go to state 133


State 127

   40 whenPart: when . finish_par

    _FINISH  shift, and go to state 134

    $default  reduce using rule 42 (finish_par)

    finish_par  go to state 135


State 128

   73 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 73 (select_statement)


State 129

   46 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO . literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 21
    _UINT_NUMBER  shift, and go to state 22

    literal  go to state 136


State 130

   44 when: _WHEN literal . _ARROW statement

    _ARROW  shift, and go to state 137


State 131

   39 otherwise: _OTHERWISE . _ARROW statement

    _ARROW  shift, and go to state 138


State 132

   37 check_exp: _CHECK _LSBRAC _ID $@7 _RSBRAC _LBRACKET $@8 whenPart otherwise . _RBRACKET

    _RBRACKET  shift, and go to state 139


State 133

   41 whenPart: whenPart when . finish_par

    _FINISH  shift, and go to state 134

    $default  reduce using rule 42 (finish_par)

    finish_par  go to state 140


State 134

   43 finish_par: _FINISH . _SEMICOLON

    _SEMICOLON  shift, and go to state 141


State 135

   40 whenPart: when finish_par .

    $default  reduce using rule 40 (whenPart)


State 136

   46 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal . _RPAREN statement

    _RPAREN  shift, and go to state 142


State 137

   44 when: _WHEN literal _ARROW . statement

    _IF        shift, and go to state 59
    _RETURN    shift, and go to state 60
    _ID        shift, and go to state 61
    _LBRACKET  shift, and go to state 62
    _SELECT    shift, and go to state 63
    _PARA      shift, and go to state 64
    _CHECK     shift, and go to state 65

    statement             go to state 143
    check_exp             go to state 68
    void_func             go to state 69
    para_statement        go to state 70
    inc_statement         go to state 71
    compound_statement    go to state 72
    assignment_statement  go to state 73
    function_call         go to state 74
    if_statement          go to state 75
    if_part               go to state 76
    return_statement      go to state 77
    select_statement      go to state 78


State 138

   39 otherwise: _OTHERWISE _ARROW . statement

    _IF        shift, and go to state 59
    _RETURN    shift, and go to state 60
    _ID        shift, and go to state 61
    _LBRACKET  shift, and go to state 62
    _SELECT    shift, and go to state 63
    _PARA      shift, and go to state 64
    _CHECK     shift, and go to state 65

    statement             go to state 144
    check_exp             go to state 68
    void_func             go to state 69
    para_statement        go to state 70
    inc_statement         go to state 71
    compound_statement    go to state 72
    assignment_statement  go to state 73
    function_call         go to state 74
    if_statement          go to state 75
    if_part               go to state 76
    return_statement      go to state 77
    select_statement      go to state 78


State 139

   37 check_exp: _CHECK _LSBRAC _ID $@7 _RSBRAC _LBRACKET $@8 whenPart otherwise _RBRACKET .

    $default  reduce using rule 37 (check_exp)


State 140

   41 whenPart: whenPart when finish_par .

    $default  reduce using rule 41 (whenPart)


State 141

   43 finish_par: _FINISH _SEMICOLON .

    $default  reduce using rule 43 (finish_par)


State 142

   46 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN . statement

    _IF        shift, and go to state 59
    _RETURN    shift, and go to state 60
    _ID        shift, and go to state 61
    _LBRACKET  shift, and go to state 62
    _SELECT    shift, and go to state 63
    _PARA      shift, and go to state 64
    _CHECK     shift, and go to state 65

    statement             go to state 145
    check_exp             go to state 68
    void_func             go to state 69
    para_statement        go to state 70
    inc_statement         go to state 71
    compound_statement    go to state 72
    assignment_statement  go to state 73
    function_call         go to state 74
    if_statement          go to state 75
    if_part               go to state 76
    return_statement      go to state 77
    select_statement      go to state 78


State 143

   44 when: _WHEN literal _ARROW statement .

    $default  reduce using rule 44 (when)


State 144

   39 otherwise: _OTHERWISE _ARROW statement .

    $default  reduce using rule 39 (otherwise)


State 145

   46 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement .

    $default  reduce using rule 46 (para_statement)
