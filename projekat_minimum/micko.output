Grammar

    0 $accept: program $end

    1 program: glob_vars function_list

    2 glob_vars: %empty
    3          | glob_vars g_variable

    4 g_variable: _TYPE g_var_poss _SEMICOLON

    5 g_var_poss: _ID
    6           | g_var_poss _COMMA _ID

    7 function_list: function
    8              | function_list function

    9 $@1: %empty

   10 $@2: %empty

   11 $@3: %empty

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN body

   13 parameter: %empty
   14          | func_with_par

   15 func_with_par: _TYPE _ID
   16              | func_with_par _COMMA _TYPE _ID

   17 $@4: %empty

   18 $@5: %empty

   19 $@6: %empty

   20 body: _LBRACKET $@4 variable_list $@5 statement_list $@6 _RBRACKET

   21 variable_list: %empty
   22              | variable_list variable

   23 $@7: %empty

   24 variable: _TYPE $@7 var_poss _SEMICOLON

   25 var_poss: _ID
   26         | _ID _ASSIGN num_exp
   27         | var_poss _COMMA _ID
   28         | var_poss _COMMA _ID _ASSIGN num_exp

   29 statement_list: %empty
   30               | statement_list statement

   31 statement: compound_statement
   32          | assignment_statement
   33          | if_statement
   34          | return_statement
   35          | select_statement
   36          | inc_statement
   37          | para_statement
   38          | void_func
   39          | check_exp

   40 $@8: %empty

   41 $@9: %empty

   42 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC _LBRACKET $@9 whenPart otherwise _RBRACKET

   43 otherwise: %empty

   44 $@10: %empty

   45 otherwise: _OTHERWISE $@10 _ARROW statement

   46 whenPart: when finish_par
   47         | whenPart when finish_par

   48 finish_par: %empty
   49           | _FINISH _SEMICOLON

   50 $@11: %empty

   51 when: _WHEN literal $@11 _ARROW statement

   52 void_func: function_call _SEMICOLON

   53 @12: %empty

   54 $@13: %empty

   55 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement

   56 inc_statement: _ID _INC_OP _SEMICOLON

   57 compound_statement: _LBRACKET statement_list _RBRACKET

   58 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   59 num_exp: exp

   60 $@14: %empty

   61 num_exp: num_exp $@14 _AROP exp

   62 exp: literal
   63    | _ID
   64    | function_call
   65    | _LPAREN num_exp _RPAREN
   66    | _ID _INC_OP
   67    | _LPAREN exp _RELOP exp _RPAREN _QMARK exp _COLON exp

   68 literal: _INT_NUMBER
   69        | _UINT_NUMBER

   70 $@15: %empty

   71 $@16: %empty

   72 function_call: _ID $@15 _LPAREN $@16 argument _RPAREN

   73 argument: %empty
   74         | has_args

   75 has_args: num_exp
   76         | has_args _COMMA num_exp

   77 if_statement: if_part
   78             | if_part _ELSE statement

   79 @17: %empty

   80 $@18: %empty

   81 if_part: _IF _LPAREN @17 rel_exp $@18 _RPAREN statement

   82 rel_exp: num_exp _RELOP num_exp

   83 return_statement: _RETURN num_exp _SEMICOLON
   84                 | _RETURN _SEMICOLON

   85 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   86 arg_select: _ID
   87           | arg_select _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 4 12 15 16 24
_IF (259) 81
_ELSE (260) 78
_RETURN (261) 83 84
_ID (262) 5 6 12 15 16 25 26 27 28 42 55 56 58 63 66 72 85 86 87
_INT_NUMBER (263) 68
_UINT_NUMBER (264) 69
_LPAREN (265) 12 55 65 67 72 81 85
_RPAREN (266) 12 55 65 67 72 81 85
_LBRACKET (267) 20 42 57
_RBRACKET (268) 20 42 57
_ASSIGN (269) 26 28 55 58
_SEMICOLON (270) 4 24 49 52 56 58 83 84 85
_AROP (271) 61
_RELOP (272) 67 82
_SELECT (273) 85
_FROM (274) 85
_WHERE (275) 85
_COMMA (276) 6 16 27 28 76 87
_INC_OP (277) 56 66
_PARA (278) 55
_PASO (279) 55
_COLON (280) 55 67
_CHECK (281) 42
_WHEN (282) 51
_FINISH (283) 49
_LSBRAC (284) 42
_RSBRAC (285) 42
_ARROW (286) 45 51
_OTHERWISE (287) 45
_QMARK (288) 67
ONLY_IF (289)


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1, on right: 0
glob_vars (37)
    on left: 2 3, on right: 1 3
g_variable (38)
    on left: 4, on right: 3
g_var_poss (39)
    on left: 5 6, on right: 4 6
function_list (40)
    on left: 7 8, on right: 1 8
function (41)
    on left: 12, on right: 7 8
$@1 (42)
    on left: 9, on right: 12
$@2 (43)
    on left: 10, on right: 12
$@3 (44)
    on left: 11, on right: 12
parameter (45)
    on left: 13 14, on right: 12
func_with_par (46)
    on left: 15 16, on right: 14 16
body (47)
    on left: 20, on right: 12
$@4 (48)
    on left: 17, on right: 20
$@5 (49)
    on left: 18, on right: 20
$@6 (50)
    on left: 19, on right: 20
variable_list (51)
    on left: 21 22, on right: 20 22
variable (52)
    on left: 24, on right: 22
$@7 (53)
    on left: 23, on right: 24
var_poss (54)
    on left: 25 26 27 28, on right: 24 27 28
statement_list (55)
    on left: 29 30, on right: 20 30 57
statement (56)
    on left: 31 32 33 34 35 36 37 38 39, on right: 30 45 51 55 78 81
check_exp (57)
    on left: 42, on right: 39
$@8 (58)
    on left: 40, on right: 42
$@9 (59)
    on left: 41, on right: 42
otherwise (60)
    on left: 43 45, on right: 42
$@10 (61)
    on left: 44, on right: 45
whenPart (62)
    on left: 46 47, on right: 42 47
finish_par (63)
    on left: 48 49, on right: 46 47
when (64)
    on left: 51, on right: 46 47
$@11 (65)
    on left: 50, on right: 51
void_func (66)
    on left: 52, on right: 38
para_statement (67)
    on left: 55, on right: 37
@12 (68)
    on left: 53, on right: 55
$@13 (69)
    on left: 54, on right: 55
inc_statement (70)
    on left: 56, on right: 36
compound_statement (71)
    on left: 57, on right: 31
assignment_statement (72)
    on left: 58, on right: 32
num_exp (73)
    on left: 59 61, on right: 26 28 58 61 65 75 76 82 83
$@14 (74)
    on left: 60, on right: 61
exp (75)
    on left: 62 63 64 65 66 67, on right: 59 61 67
literal (76)
    on left: 68 69, on right: 51 55 62
function_call (77)
    on left: 72, on right: 52 64
$@15 (78)
    on left: 70, on right: 72
$@16 (79)
    on left: 71, on right: 72
argument (80)
    on left: 73 74, on right: 72
has_args (81)
    on left: 75 76, on right: 74 76
if_statement (82)
    on left: 77 78, on right: 33
if_part (83)
    on left: 81, on right: 77 78
@17 (84)
    on left: 79, on right: 81
$@18 (85)
    on left: 80, on right: 81
rel_exp (86)
    on left: 82, on right: 81 85
return_statement (87)
    on left: 83 84, on right: 34
select_statement (88)
    on left: 85, on right: 35
arg_select (89)
    on left: 86 87, on right: 85 87


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (glob_vars)

    program    go to state 1
    glob_vars  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: glob_vars . function_list
    3 glob_vars: glob_vars . g_variable

    _TYPE  shift, and go to state 4

    g_variable     go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 g_variable: _TYPE . g_var_poss _SEMICOLON
   12 function: _TYPE . _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN body

    _ID  shift, and go to state 8

    g_var_poss  go to state 9


State 5

    3 glob_vars: glob_vars g_variable .

    $default  reduce using rule 3 (glob_vars)


State 6

    1 program: glob_vars function_list .
    8 function_list: function_list . function

    _TYPE  shift, and go to state 10

    $default  reduce using rule 1 (program)

    function  go to state 11


State 7

    7 function_list: function .

    $default  reduce using rule 7 (function_list)


State 8

    5 g_var_poss: _ID .
   12 function: _TYPE _ID . $@1 _LPAREN $@2 parameter $@3 _RPAREN body

    _LPAREN   reduce using rule 9 ($@1)
    $default  reduce using rule 5 (g_var_poss)

    $@1  go to state 12


State 9

    4 g_variable: _TYPE g_var_poss . _SEMICOLON
    6 g_var_poss: g_var_poss . _COMMA _ID

    _SEMICOLON  shift, and go to state 13
    _COMMA      shift, and go to state 14


State 10

   12 function: _TYPE . _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN body

    _ID  shift, and go to state 15


State 11

    8 function_list: function_list function .

    $default  reduce using rule 8 (function_list)


State 12

   12 function: _TYPE _ID $@1 . _LPAREN $@2 parameter $@3 _RPAREN body

    _LPAREN  shift, and go to state 16


State 13

    4 g_variable: _TYPE g_var_poss _SEMICOLON .

    $default  reduce using rule 4 (g_variable)


State 14

    6 g_var_poss: g_var_poss _COMMA . _ID

    _ID  shift, and go to state 17


State 15

   12 function: _TYPE _ID . $@1 _LPAREN $@2 parameter $@3 _RPAREN body

    $default  reduce using rule 9 ($@1)

    $@1  go to state 12


State 16

   12 function: _TYPE _ID $@1 _LPAREN . $@2 parameter $@3 _RPAREN body

    $default  reduce using rule 10 ($@2)

    $@2  go to state 18


State 17

    6 g_var_poss: g_var_poss _COMMA _ID .

    $default  reduce using rule 6 (g_var_poss)


State 18

   12 function: _TYPE _ID $@1 _LPAREN $@2 . parameter $@3 _RPAREN body

    _TYPE  shift, and go to state 19

    $default  reduce using rule 13 (parameter)

    parameter      go to state 20
    func_with_par  go to state 21


State 19

   15 func_with_par: _TYPE . _ID

    _ID  shift, and go to state 22


State 20

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter . $@3 _RPAREN body

    $default  reduce using rule 11 ($@3)

    $@3  go to state 23


State 21

   14 parameter: func_with_par .
   16 func_with_par: func_with_par . _COMMA _TYPE _ID

    _COMMA  shift, and go to state 24

    $default  reduce using rule 14 (parameter)


State 22

   15 func_with_par: _TYPE _ID .

    $default  reduce using rule 15 (func_with_par)


State 23

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter $@3 . _RPAREN body

    _RPAREN  shift, and go to state 25


State 24

   16 func_with_par: func_with_par _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 26


State 25

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN . body

    _LBRACKET  shift, and go to state 27

    body  go to state 28


State 26

   16 func_with_par: func_with_par _COMMA _TYPE . _ID

    _ID  shift, and go to state 29


State 27

   20 body: _LBRACKET . $@4 variable_list $@5 statement_list $@6 _RBRACKET

    $default  reduce using rule 17 ($@4)

    $@4  go to state 30


State 28

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN body .

    $default  reduce using rule 12 (function)


State 29

   16 func_with_par: func_with_par _COMMA _TYPE _ID .

    $default  reduce using rule 16 (func_with_par)


State 30

   20 body: _LBRACKET $@4 . variable_list $@5 statement_list $@6 _RBRACKET

    $default  reduce using rule 21 (variable_list)

    variable_list  go to state 31


State 31

   20 body: _LBRACKET $@4 variable_list . $@5 statement_list $@6 _RBRACKET
   22 variable_list: variable_list . variable

    _TYPE  shift, and go to state 32

    $default  reduce using rule 18 ($@5)

    $@5       go to state 33
    variable  go to state 34


State 32

   24 variable: _TYPE . $@7 var_poss _SEMICOLON

    $default  reduce using rule 23 ($@7)

    $@7  go to state 35


State 33

   20 body: _LBRACKET $@4 variable_list $@5 . statement_list $@6 _RBRACKET

    $default  reduce using rule 29 (statement_list)

    statement_list  go to state 36


State 34

   22 variable_list: variable_list variable .

    $default  reduce using rule 22 (variable_list)


State 35

   24 variable: _TYPE $@7 . var_poss _SEMICOLON

    _ID  shift, and go to state 37

    var_poss  go to state 38


State 36

   20 body: _LBRACKET $@4 variable_list $@5 statement_list . $@6 _RBRACKET
   30 statement_list: statement_list . statement

    _IF        shift, and go to state 39
    _RETURN    shift, and go to state 40
    _ID        shift, and go to state 41
    _LBRACKET  shift, and go to state 42
    _SELECT    shift, and go to state 43
    _PARA      shift, and go to state 44
    _CHECK     shift, and go to state 45

    $default  reduce using rule 19 ($@6)

    $@6                   go to state 46
    statement             go to state 47
    check_exp             go to state 48
    void_func             go to state 49
    para_statement        go to state 50
    inc_statement         go to state 51
    compound_statement    go to state 52
    assignment_statement  go to state 53
    function_call         go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57
    select_statement      go to state 58


State 37

   25 var_poss: _ID .
   26         | _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 59

    $default  reduce using rule 25 (var_poss)


State 38

   24 variable: _TYPE $@7 var_poss . _SEMICOLON
   27 var_poss: var_poss . _COMMA _ID
   28         | var_poss . _COMMA _ID _ASSIGN num_exp

    _SEMICOLON  shift, and go to state 60
    _COMMA      shift, and go to state 61


State 39

   81 if_part: _IF . _LPAREN @17 rel_exp $@18 _RPAREN statement

    _LPAREN  shift, and go to state 62


State 40

   83 return_statement: _RETURN . num_exp _SEMICOLON
   84                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66
    _SEMICOLON    shift, and go to state 67

    num_exp        go to state 68
    exp            go to state 69
    literal        go to state 70
    function_call  go to state 71


State 41

   56 inc_statement: _ID . _INC_OP _SEMICOLON
   58 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   72 function_call: _ID . $@15 _LPAREN $@16 argument _RPAREN

    _ASSIGN  shift, and go to state 72
    _INC_OP  shift, and go to state 73

    $default  reduce using rule 70 ($@15)

    $@15  go to state 74


State 42

   57 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 29 (statement_list)

    statement_list  go to state 75


State 43

   85 select_statement: _SELECT . arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 76

    arg_select  go to state 77


State 44

   55 para_statement: _PARA . _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement

    _LPAREN  shift, and go to state 78


State 45

   42 check_exp: _CHECK . _LSBRAC _ID $@8 _RSBRAC _LBRACKET $@9 whenPart otherwise _RBRACKET

    _LSBRAC  shift, and go to state 79


State 46

   20 body: _LBRACKET $@4 variable_list $@5 statement_list $@6 . _RBRACKET

    _RBRACKET  shift, and go to state 80


State 47

   30 statement_list: statement_list statement .

    $default  reduce using rule 30 (statement_list)


State 48

   39 statement: check_exp .

    $default  reduce using rule 39 (statement)


State 49

   38 statement: void_func .

    $default  reduce using rule 38 (statement)


State 50

   37 statement: para_statement .

    $default  reduce using rule 37 (statement)


State 51

   36 statement: inc_statement .

    $default  reduce using rule 36 (statement)


State 52

   31 statement: compound_statement .

    $default  reduce using rule 31 (statement)


State 53

   32 statement: assignment_statement .

    $default  reduce using rule 32 (statement)


State 54

   52 void_func: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 81


State 55

   33 statement: if_statement .

    $default  reduce using rule 33 (statement)


State 56

   77 if_statement: if_part .
   78             | if_part . _ELSE statement

    _ELSE  shift, and go to state 82

    $default  reduce using rule 77 (if_statement)


State 57

   34 statement: return_statement .

    $default  reduce using rule 34 (statement)


State 58

   35 statement: select_statement .

    $default  reduce using rule 35 (statement)


State 59

   26 var_poss: _ID _ASSIGN . num_exp

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66

    num_exp        go to state 83
    exp            go to state 69
    literal        go to state 70
    function_call  go to state 71


State 60

   24 variable: _TYPE $@7 var_poss _SEMICOLON .

    $default  reduce using rule 24 (variable)


State 61

   27 var_poss: var_poss _COMMA . _ID
   28         | var_poss _COMMA . _ID _ASSIGN num_exp

    _ID  shift, and go to state 84


State 62

   81 if_part: _IF _LPAREN . @17 rel_exp $@18 _RPAREN statement

    $default  reduce using rule 79 (@17)

    @17  go to state 85


State 63

   63 exp: _ID .
   66    | _ID . _INC_OP
   72 function_call: _ID . $@15 _LPAREN $@16 argument _RPAREN

    _INC_OP  shift, and go to state 86

    _LPAREN   reduce using rule 70 ($@15)
    $default  reduce using rule 63 (exp)

    $@15  go to state 74


State 64

   68 literal: _INT_NUMBER .

    $default  reduce using rule 68 (literal)


State 65

   69 literal: _UINT_NUMBER .

    $default  reduce using rule 69 (literal)


State 66

   65 exp: _LPAREN . num_exp _RPAREN
   67    | _LPAREN . exp _RELOP exp _RPAREN _QMARK exp _COLON exp

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66

    num_exp        go to state 87
    exp            go to state 88
    literal        go to state 70
    function_call  go to state 71


State 67

   84 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 84 (return_statement)


State 68

   61 num_exp: num_exp . $@14 _AROP exp
   83 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 89

    $default  reduce using rule 60 ($@14)

    $@14  go to state 90


State 69

   59 num_exp: exp .

    $default  reduce using rule 59 (num_exp)


State 70

   62 exp: literal .

    $default  reduce using rule 62 (exp)


State 71

   64 exp: function_call .

    $default  reduce using rule 64 (exp)


State 72

   58 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66

    num_exp        go to state 91
    exp            go to state 69
    literal        go to state 70
    function_call  go to state 71


State 73

   56 inc_statement: _ID _INC_OP . _SEMICOLON

    _SEMICOLON  shift, and go to state 92


State 74

   72 function_call: _ID $@15 . _LPAREN $@16 argument _RPAREN

    _LPAREN  shift, and go to state 93


State 75

   30 statement_list: statement_list . statement
   57 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 39
    _RETURN    shift, and go to state 40
    _ID        shift, and go to state 41
    _LBRACKET  shift, and go to state 42
    _RBRACKET  shift, and go to state 94
    _SELECT    shift, and go to state 43
    _PARA      shift, and go to state 44
    _CHECK     shift, and go to state 45

    statement             go to state 47
    check_exp             go to state 48
    void_func             go to state 49
    para_statement        go to state 50
    inc_statement         go to state 51
    compound_statement    go to state 52
    assignment_statement  go to state 53
    function_call         go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57
    select_statement      go to state 58


State 76

   86 arg_select: _ID .

    $default  reduce using rule 86 (arg_select)


State 77

   85 select_statement: _SELECT arg_select . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON
   87 arg_select: arg_select . _COMMA _ID

    _FROM   shift, and go to state 95
    _COMMA  shift, and go to state 96


State 78

   55 para_statement: _PARA _LPAREN . @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement

    $default  reduce using rule 53 (@12)

    @12  go to state 97


State 79

   42 check_exp: _CHECK _LSBRAC . _ID $@8 _RSBRAC _LBRACKET $@9 whenPart otherwise _RBRACKET

    _ID  shift, and go to state 98


State 80

   20 body: _LBRACKET $@4 variable_list $@5 statement_list $@6 _RBRACKET .

    $default  reduce using rule 20 (body)


State 81

   52 void_func: function_call _SEMICOLON .

    $default  reduce using rule 52 (void_func)


State 82

   78 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 39
    _RETURN    shift, and go to state 40
    _ID        shift, and go to state 41
    _LBRACKET  shift, and go to state 42
    _SELECT    shift, and go to state 43
    _PARA      shift, and go to state 44
    _CHECK     shift, and go to state 45

    statement             go to state 99
    check_exp             go to state 48
    void_func             go to state 49
    para_statement        go to state 50
    inc_statement         go to state 51
    compound_statement    go to state 52
    assignment_statement  go to state 53
    function_call         go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57
    select_statement      go to state 58


State 83

   26 var_poss: _ID _ASSIGN num_exp .
   61 num_exp: num_exp . $@14 _AROP exp

    _AROP     reduce using rule 60 ($@14)
    $default  reduce using rule 26 (var_poss)

    $@14  go to state 90


State 84

   27 var_poss: var_poss _COMMA _ID .
   28         | var_poss _COMMA _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 100

    $default  reduce using rule 27 (var_poss)


State 85

   81 if_part: _IF _LPAREN @17 . rel_exp $@18 _RPAREN statement

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66

    num_exp        go to state 101
    exp            go to state 69
    literal        go to state 70
    function_call  go to state 71
    rel_exp        go to state 102


State 86

   66 exp: _ID _INC_OP .

    $default  reduce using rule 66 (exp)


State 87

   61 num_exp: num_exp . $@14 _AROP exp
   65 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 103

    $default  reduce using rule 60 ($@14)

    $@14  go to state 90


State 88

   59 num_exp: exp .
   67 exp: _LPAREN exp . _RELOP exp _RPAREN _QMARK exp _COLON exp

    _RELOP  shift, and go to state 104

    $default  reduce using rule 59 (num_exp)


State 89

   83 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 83 (return_statement)


State 90

   61 num_exp: num_exp $@14 . _AROP exp

    _AROP  shift, and go to state 105


State 91

   58 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   61 num_exp: num_exp . $@14 _AROP exp

    _SEMICOLON  shift, and go to state 106

    $default  reduce using rule 60 ($@14)

    $@14  go to state 90


State 92

   56 inc_statement: _ID _INC_OP _SEMICOLON .

    $default  reduce using rule 56 (inc_statement)


State 93

   72 function_call: _ID $@15 _LPAREN . $@16 argument _RPAREN

    $default  reduce using rule 71 ($@16)

    $@16  go to state 107


State 94

   57 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 57 (compound_statement)


State 95

   85 select_statement: _SELECT arg_select _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 108


State 96

   87 arg_select: arg_select _COMMA . _ID

    _ID  shift, and go to state 109


State 97

   55 para_statement: _PARA _LPAREN @12 . _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement

    _ID  shift, and go to state 110


State 98

   42 check_exp: _CHECK _LSBRAC _ID . $@8 _RSBRAC _LBRACKET $@9 whenPart otherwise _RBRACKET

    $default  reduce using rule 40 ($@8)

    $@8  go to state 111


State 99

   78 if_statement: if_part _ELSE statement .

    $default  reduce using rule 78 (if_statement)


State 100

   28 var_poss: var_poss _COMMA _ID _ASSIGN . num_exp

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66

    num_exp        go to state 112
    exp            go to state 69
    literal        go to state 70
    function_call  go to state 71


State 101

   61 num_exp: num_exp . $@14 _AROP exp
   82 rel_exp: num_exp . _RELOP num_exp

    _RELOP  shift, and go to state 113

    $default  reduce using rule 60 ($@14)

    $@14  go to state 90


State 102

   81 if_part: _IF _LPAREN @17 rel_exp . $@18 _RPAREN statement

    $default  reduce using rule 80 ($@18)

    $@18  go to state 114


State 103

   65 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 65 (exp)


State 104

   67 exp: _LPAREN exp _RELOP . exp _RPAREN _QMARK exp _COLON exp

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66

    exp            go to state 115
    literal        go to state 70
    function_call  go to state 71


State 105

   61 num_exp: num_exp $@14 _AROP . exp

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66

    exp            go to state 116
    literal        go to state 70
    function_call  go to state 71


State 106

   58 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 58 (assignment_statement)


State 107

   72 function_call: _ID $@15 _LPAREN $@16 . argument _RPAREN

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66

    $default  reduce using rule 73 (argument)

    num_exp        go to state 117
    exp            go to state 69
    literal        go to state 70
    function_call  go to state 71
    argument       go to state 118
    has_args       go to state 119


State 108

   85 select_statement: _SELECT arg_select _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 120


State 109

   87 arg_select: arg_select _COMMA _ID .

    $default  reduce using rule 87 (arg_select)


State 110

   55 para_statement: _PARA _LPAREN @12 _ID . _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement

    _ASSIGN  shift, and go to state 121


State 111

   42 check_exp: _CHECK _LSBRAC _ID $@8 . _RSBRAC _LBRACKET $@9 whenPart otherwise _RBRACKET

    _RSBRAC  shift, and go to state 122


State 112

   28 var_poss: var_poss _COMMA _ID _ASSIGN num_exp .
   61 num_exp: num_exp . $@14 _AROP exp

    _AROP     reduce using rule 60 ($@14)
    $default  reduce using rule 28 (var_poss)

    $@14  go to state 90


State 113

   82 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66

    num_exp        go to state 123
    exp            go to state 69
    literal        go to state 70
    function_call  go to state 71


State 114

   81 if_part: _IF _LPAREN @17 rel_exp $@18 . _RPAREN statement

    _RPAREN  shift, and go to state 124


State 115

   67 exp: _LPAREN exp _RELOP exp . _RPAREN _QMARK exp _COLON exp

    _RPAREN  shift, and go to state 125


State 116

   61 num_exp: num_exp $@14 _AROP exp .

    $default  reduce using rule 61 (num_exp)


State 117

   61 num_exp: num_exp . $@14 _AROP exp
   75 has_args: num_exp .

    _AROP     reduce using rule 60 ($@14)
    $default  reduce using rule 75 (has_args)

    $@14  go to state 90


State 118

   72 function_call: _ID $@15 _LPAREN $@16 argument . _RPAREN

    _RPAREN  shift, and go to state 126


State 119

   74 argument: has_args .
   76 has_args: has_args . _COMMA num_exp

    _COMMA  shift, and go to state 127

    $default  reduce using rule 74 (argument)


State 120

   85 select_statement: _SELECT arg_select _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 128


State 121

   55 para_statement: _PARA _LPAREN @12 _ID _ASSIGN . literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement

    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65

    literal  go to state 129


State 122

   42 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC . _LBRACKET $@9 whenPart otherwise _RBRACKET

    _LBRACKET  shift, and go to state 130


State 123

   61 num_exp: num_exp . $@14 _AROP exp
   82 rel_exp: num_exp _RELOP num_exp .

    _RPAREN   reduce using rule 82 (rel_exp)
    $default  reduce using rule 60 ($@14)

    $@14  go to state 90


State 124

   81 if_part: _IF _LPAREN @17 rel_exp $@18 _RPAREN . statement

    _IF        shift, and go to state 39
    _RETURN    shift, and go to state 40
    _ID        shift, and go to state 41
    _LBRACKET  shift, and go to state 42
    _SELECT    shift, and go to state 43
    _PARA      shift, and go to state 44
    _CHECK     shift, and go to state 45

    statement             go to state 131
    check_exp             go to state 48
    void_func             go to state 49
    para_statement        go to state 50
    inc_statement         go to state 51
    compound_statement    go to state 52
    assignment_statement  go to state 53
    function_call         go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57
    select_statement      go to state 58


State 125

   67 exp: _LPAREN exp _RELOP exp _RPAREN . _QMARK exp _COLON exp

    _QMARK  shift, and go to state 132


State 126

   72 function_call: _ID $@15 _LPAREN $@16 argument _RPAREN .

    $default  reduce using rule 72 (function_call)


State 127

   76 has_args: has_args _COMMA . num_exp

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66

    num_exp        go to state 133
    exp            go to state 69
    literal        go to state 70
    function_call  go to state 71


State 128

   85 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66

    num_exp        go to state 101
    exp            go to state 69
    literal        go to state 70
    function_call  go to state 71
    rel_exp        go to state 134


State 129

   55 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal . _COLON literal _COLON _PASO literal _RPAREN $@13 statement

    _COLON  shift, and go to state 135


State 130

   42 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC _LBRACKET . $@9 whenPart otherwise _RBRACKET

    $default  reduce using rule 41 ($@9)

    $@9  go to state 136


State 131

   81 if_part: _IF _LPAREN @17 rel_exp $@18 _RPAREN statement .

    $default  reduce using rule 81 (if_part)


State 132

   67 exp: _LPAREN exp _RELOP exp _RPAREN _QMARK . exp _COLON exp

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66

    exp            go to state 137
    literal        go to state 70
    function_call  go to state 71


State 133

   61 num_exp: num_exp . $@14 _AROP exp
   76 has_args: has_args _COMMA num_exp .

    _AROP     reduce using rule 60 ($@14)
    $default  reduce using rule 76 (has_args)

    $@14  go to state 90


State 134

   85 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 138


State 135

   55 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON . literal _COLON _PASO literal _RPAREN $@13 statement

    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65

    literal  go to state 139


State 136

   42 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC _LBRACKET $@9 . whenPart otherwise _RBRACKET

    _WHEN  shift, and go to state 140

    whenPart  go to state 141
    when      go to state 142


State 137

   67 exp: _LPAREN exp _RELOP exp _RPAREN _QMARK exp . _COLON exp

    _COLON  shift, and go to state 143


State 138

   85 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 144


State 139

   55 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal . _COLON _PASO literal _RPAREN $@13 statement

    _COLON  shift, and go to state 145


State 140

   51 when: _WHEN . literal $@11 _ARROW statement

    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65

    literal  go to state 146


State 141

   42 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC _LBRACKET $@9 whenPart . otherwise _RBRACKET
   47 whenPart: whenPart . when finish_par

    _WHEN       shift, and go to state 140
    _OTHERWISE  shift, and go to state 147

    $default  reduce using rule 43 (otherwise)

    otherwise  go to state 148
    when       go to state 149


State 142

   46 whenPart: when . finish_par

    _FINISH  shift, and go to state 150

    $default  reduce using rule 48 (finish_par)

    finish_par  go to state 151


State 143

   67 exp: _LPAREN exp _RELOP exp _RPAREN _QMARK exp _COLON . exp

    _ID           shift, and go to state 63
    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65
    _LPAREN       shift, and go to state 66

    exp            go to state 152
    literal        go to state 70
    function_call  go to state 71


State 144

   85 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 85 (select_statement)


State 145

   55 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON . _PASO literal _RPAREN $@13 statement

    _PASO  shift, and go to state 153


State 146

   51 when: _WHEN literal . $@11 _ARROW statement

    $default  reduce using rule 50 ($@11)

    $@11  go to state 154


State 147

   45 otherwise: _OTHERWISE . $@10 _ARROW statement

    $default  reduce using rule 44 ($@10)

    $@10  go to state 155


State 148

   42 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC _LBRACKET $@9 whenPart otherwise . _RBRACKET

    _RBRACKET  shift, and go to state 156


State 149

   47 whenPart: whenPart when . finish_par

    _FINISH  shift, and go to state 150

    $default  reduce using rule 48 (finish_par)

    finish_par  go to state 157


State 150

   49 finish_par: _FINISH . _SEMICOLON

    _SEMICOLON  shift, and go to state 158


State 151

   46 whenPart: when finish_par .

    $default  reduce using rule 46 (whenPart)


State 152

   67 exp: _LPAREN exp _RELOP exp _RPAREN _QMARK exp _COLON exp .

    $default  reduce using rule 67 (exp)


State 153

   55 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO . literal _RPAREN $@13 statement

    _INT_NUMBER   shift, and go to state 64
    _UINT_NUMBER  shift, and go to state 65

    literal  go to state 159


State 154

   51 when: _WHEN literal $@11 . _ARROW statement

    _ARROW  shift, and go to state 160


State 155

   45 otherwise: _OTHERWISE $@10 . _ARROW statement

    _ARROW  shift, and go to state 161


State 156

   42 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC _LBRACKET $@9 whenPart otherwise _RBRACKET .

    $default  reduce using rule 42 (check_exp)


State 157

   47 whenPart: whenPart when finish_par .

    $default  reduce using rule 47 (whenPart)


State 158

   49 finish_par: _FINISH _SEMICOLON .

    $default  reduce using rule 49 (finish_par)


State 159

   55 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal . _RPAREN $@13 statement

    _RPAREN  shift, and go to state 162


State 160

   51 when: _WHEN literal $@11 _ARROW . statement

    _IF        shift, and go to state 39
    _RETURN    shift, and go to state 40
    _ID        shift, and go to state 41
    _LBRACKET  shift, and go to state 42
    _SELECT    shift, and go to state 43
    _PARA      shift, and go to state 44
    _CHECK     shift, and go to state 45

    statement             go to state 163
    check_exp             go to state 48
    void_func             go to state 49
    para_statement        go to state 50
    inc_statement         go to state 51
    compound_statement    go to state 52
    assignment_statement  go to state 53
    function_call         go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57
    select_statement      go to state 58


State 161

   45 otherwise: _OTHERWISE $@10 _ARROW . statement

    _IF        shift, and go to state 39
    _RETURN    shift, and go to state 40
    _ID        shift, and go to state 41
    _LBRACKET  shift, and go to state 42
    _SELECT    shift, and go to state 43
    _PARA      shift, and go to state 44
    _CHECK     shift, and go to state 45

    statement             go to state 164
    check_exp             go to state 48
    void_func             go to state 49
    para_statement        go to state 50
    inc_statement         go to state 51
    compound_statement    go to state 52
    assignment_statement  go to state 53
    function_call         go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57
    select_statement      go to state 58


State 162

   55 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN . $@13 statement

    $default  reduce using rule 54 ($@13)

    $@13  go to state 165


State 163

   51 when: _WHEN literal $@11 _ARROW statement .

    $default  reduce using rule 51 (when)


State 164

   45 otherwise: _OTHERWISE $@10 _ARROW statement .

    $default  reduce using rule 45 (otherwise)


State 165

   55 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 . statement

    _IF        shift, and go to state 39
    _RETURN    shift, and go to state 40
    _ID        shift, and go to state 41
    _LBRACKET  shift, and go to state 42
    _SELECT    shift, and go to state 43
    _PARA      shift, and go to state 44
    _CHECK     shift, and go to state 45

    statement             go to state 166
    check_exp             go to state 48
    void_func             go to state 49
    para_statement        go to state 50
    inc_statement         go to state 51
    compound_statement    go to state 52
    assignment_statement  go to state 53
    function_call         go to state 54
    if_statement          go to state 55
    if_part               go to state 56
    return_statement      go to state 57
    select_statement      go to state 58


State 166

   55 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement .

    $default  reduce using rule 55 (para_statement)
