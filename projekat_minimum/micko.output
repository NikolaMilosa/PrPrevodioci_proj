Grammar

    0 $accept: program $end

    1 program: glob_vars function_list

    2 glob_vars: %empty
    3          | glob_vars g_variable

    4 g_variable: _TYPE g_var_poss _SEMICOLON

    5 g_var_poss: _ID
    6           | g_var_poss _COMMA _ID

    7 function_list: function
    8              | function_list function

    9 $@1: %empty

   10 $@2: %empty

   11 $@3: %empty

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN body

   13 parameter: %empty
   14          | _TYPE _ID
   15          | parameter _COMMA _TYPE _ID

   16 $@4: %empty

   17 $@5: %empty

   18 $@6: %empty

   19 body: _LBRACKET $@4 variable_list $@5 statement_list $@6 _RBRACKET

   20 variable_list: %empty
   21              | variable_list variable

   22 $@7: %empty

   23 variable: _TYPE $@7 var_poss _SEMICOLON

   24 var_poss: _ID
   25         | _ID _ASSIGN num_exp
   26         | var_poss _COMMA _ID
   27         | var_poss _COMMA _ID _ASSIGN num_exp

   28 statement_list: %empty
   29               | statement_list statement

   30 statement: compound_statement
   31          | assignment_statement
   32          | if_statement
   33          | return_statement
   34          | select_statement
   35          | inc_statement
   36          | para_statement
   37          | void_func
   38          | check_exp

   39 $@8: %empty

   40 $@9: %empty

   41 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC _LBRACKET $@9 whenPart otherwise _RBRACKET

   42 otherwise: %empty

   43 $@10: %empty

   44 otherwise: _OTHERWISE $@10 _ARROW statement

   45 whenPart: when finish_par
   46         | whenPart when finish_par

   47 finish_par: %empty
   48           | _FINISH _SEMICOLON

   49 $@11: %empty

   50 when: _WHEN literal $@11 _ARROW statement

   51 void_func: function_call _SEMICOLON

   52 @12: %empty

   53 $@13: %empty

   54 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement

   55 inc_statement: _ID _INC_OP _SEMICOLON

   56 compound_statement: _LBRACKET statement_list _RBRACKET

   57 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   58 num_exp: exp
   59        | num_exp _AROP exp

   60 exp: literal
   61    | _ID
   62    | function_call
   63    | _LPAREN num_exp _RPAREN
   64    | _ID _INC_OP

   65 literal: _INT_NUMBER
   66        | _UINT_NUMBER

   67 $@14: %empty

   68 $@15: %empty

   69 function_call: _ID $@14 _LPAREN $@15 argument _RPAREN

   70 argument: %empty
   71         | num_exp
   72         | argument _COMMA num_exp

   73 if_statement: if_part
   74             | if_part _ELSE statement

   75 @16: %empty

   76 $@17: %empty

   77 if_part: _IF _LPAREN @16 rel_exp $@17 _RPAREN statement

   78 rel_exp: num_exp _RELOP num_exp

   79 return_statement: _RETURN num_exp _SEMICOLON
   80                 | _RETURN _SEMICOLON

   81 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   82 arg_select: _ID
   83           | arg_select _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 4 12 14 15 23
_IF (259) 77
_ELSE (260) 74
_RETURN (261) 79 80
_ID (262) 5 6 12 14 15 24 25 26 27 41 54 55 57 61 64 69 81 82 83
_INT_NUMBER (263) 65
_UINT_NUMBER (264) 66
_LPAREN (265) 12 54 63 69 77 81
_RPAREN (266) 12 54 63 69 77 81
_LBRACKET (267) 19 41 56
_RBRACKET (268) 19 41 56
_ASSIGN (269) 25 27 54 57
_SEMICOLON (270) 4 23 48 51 55 57 79 80 81
_AROP (271) 59
_RELOP (272) 78
_SELECT (273) 81
_FROM (274) 81
_WHERE (275) 81
_COMMA (276) 6 15 26 27 72 83
_INC_OP (277) 55 64
_PARA (278) 54
_PASO (279) 54
_COLON (280) 54
_CHECK (281) 41
_WHEN (282) 50
_FINISH (283) 48
_LSBRAC (284) 41
_RSBRAC (285) 41
_ARROW (286) 44 50
_OTHERWISE (287) 44
ONLY_IF (288)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
glob_vars (36)
    on left: 2 3, on right: 1 3
g_variable (37)
    on left: 4, on right: 3
g_var_poss (38)
    on left: 5 6, on right: 4 6
function_list (39)
    on left: 7 8, on right: 1 8
function (40)
    on left: 12, on right: 7 8
$@1 (41)
    on left: 9, on right: 12
$@2 (42)
    on left: 10, on right: 12
$@3 (43)
    on left: 11, on right: 12
parameter (44)
    on left: 13 14 15, on right: 12 15
body (45)
    on left: 19, on right: 12
$@4 (46)
    on left: 16, on right: 19
$@5 (47)
    on left: 17, on right: 19
$@6 (48)
    on left: 18, on right: 19
variable_list (49)
    on left: 20 21, on right: 19 21
variable (50)
    on left: 23, on right: 21
$@7 (51)
    on left: 22, on right: 23
var_poss (52)
    on left: 24 25 26 27, on right: 23 26 27
statement_list (53)
    on left: 28 29, on right: 19 29 56
statement (54)
    on left: 30 31 32 33 34 35 36 37 38, on right: 29 44 50 54 74 77
check_exp (55)
    on left: 41, on right: 38
$@8 (56)
    on left: 39, on right: 41
$@9 (57)
    on left: 40, on right: 41
otherwise (58)
    on left: 42 44, on right: 41
$@10 (59)
    on left: 43, on right: 44
whenPart (60)
    on left: 45 46, on right: 41 46
finish_par (61)
    on left: 47 48, on right: 45 46
when (62)
    on left: 50, on right: 45 46
$@11 (63)
    on left: 49, on right: 50
void_func (64)
    on left: 51, on right: 37
para_statement (65)
    on left: 54, on right: 36
@12 (66)
    on left: 52, on right: 54
$@13 (67)
    on left: 53, on right: 54
inc_statement (68)
    on left: 55, on right: 35
compound_statement (69)
    on left: 56, on right: 30
assignment_statement (70)
    on left: 57, on right: 31
num_exp (71)
    on left: 58 59, on right: 25 27 57 59 63 71 72 78 79
exp (72)
    on left: 60 61 62 63 64, on right: 58 59
literal (73)
    on left: 65 66, on right: 50 54 60
function_call (74)
    on left: 69, on right: 51 62
$@14 (75)
    on left: 67, on right: 69
$@15 (76)
    on left: 68, on right: 69
argument (77)
    on left: 70 71 72, on right: 69 72
if_statement (78)
    on left: 73 74, on right: 32
if_part (79)
    on left: 77, on right: 73 74
@16 (80)
    on left: 75, on right: 77
$@17 (81)
    on left: 76, on right: 77
rel_exp (82)
    on left: 78, on right: 77 81
return_statement (83)
    on left: 79 80, on right: 33
select_statement (84)
    on left: 81, on right: 34
arg_select (85)
    on left: 82 83, on right: 81 83


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (glob_vars)

    program    go to state 1
    glob_vars  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: glob_vars . function_list
    3 glob_vars: glob_vars . g_variable

    _TYPE  shift, and go to state 4

    g_variable     go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 g_variable: _TYPE . g_var_poss _SEMICOLON
   12 function: _TYPE . _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN body

    _ID  shift, and go to state 8

    g_var_poss  go to state 9


State 5

    3 glob_vars: glob_vars g_variable .

    $default  reduce using rule 3 (glob_vars)


State 6

    1 program: glob_vars function_list .
    8 function_list: function_list . function

    _TYPE  shift, and go to state 10

    $default  reduce using rule 1 (program)

    function  go to state 11


State 7

    7 function_list: function .

    $default  reduce using rule 7 (function_list)


State 8

    5 g_var_poss: _ID .
   12 function: _TYPE _ID . $@1 _LPAREN $@2 parameter $@3 _RPAREN body

    _LPAREN   reduce using rule 9 ($@1)
    $default  reduce using rule 5 (g_var_poss)

    $@1  go to state 12


State 9

    4 g_variable: _TYPE g_var_poss . _SEMICOLON
    6 g_var_poss: g_var_poss . _COMMA _ID

    _SEMICOLON  shift, and go to state 13
    _COMMA      shift, and go to state 14


State 10

   12 function: _TYPE . _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN body

    _ID  shift, and go to state 15


State 11

    8 function_list: function_list function .

    $default  reduce using rule 8 (function_list)


State 12

   12 function: _TYPE _ID $@1 . _LPAREN $@2 parameter $@3 _RPAREN body

    _LPAREN  shift, and go to state 16


State 13

    4 g_variable: _TYPE g_var_poss _SEMICOLON .

    $default  reduce using rule 4 (g_variable)


State 14

    6 g_var_poss: g_var_poss _COMMA . _ID

    _ID  shift, and go to state 17


State 15

   12 function: _TYPE _ID . $@1 _LPAREN $@2 parameter $@3 _RPAREN body

    $default  reduce using rule 9 ($@1)

    $@1  go to state 12


State 16

   12 function: _TYPE _ID $@1 _LPAREN . $@2 parameter $@3 _RPAREN body

    $default  reduce using rule 10 ($@2)

    $@2  go to state 18


State 17

    6 g_var_poss: g_var_poss _COMMA _ID .

    $default  reduce using rule 6 (g_var_poss)


State 18

   12 function: _TYPE _ID $@1 _LPAREN $@2 . parameter $@3 _RPAREN body

    _TYPE  shift, and go to state 19

    $default  reduce using rule 13 (parameter)

    parameter  go to state 20


State 19

   14 parameter: _TYPE . _ID

    _ID  shift, and go to state 21


State 20

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter . $@3 _RPAREN body
   15 parameter: parameter . _COMMA _TYPE _ID

    _COMMA  shift, and go to state 22

    $default  reduce using rule 11 ($@3)

    $@3  go to state 23


State 21

   14 parameter: _TYPE _ID .

    $default  reduce using rule 14 (parameter)


State 22

   15 parameter: parameter _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 24


State 23

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter $@3 . _RPAREN body

    _RPAREN  shift, and go to state 25


State 24

   15 parameter: parameter _COMMA _TYPE . _ID

    _ID  shift, and go to state 26


State 25

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN . body

    _LBRACKET  shift, and go to state 27

    body  go to state 28


State 26

   15 parameter: parameter _COMMA _TYPE _ID .

    $default  reduce using rule 15 (parameter)


State 27

   19 body: _LBRACKET . $@4 variable_list $@5 statement_list $@6 _RBRACKET

    $default  reduce using rule 16 ($@4)

    $@4  go to state 29


State 28

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN body .

    $default  reduce using rule 12 (function)


State 29

   19 body: _LBRACKET $@4 . variable_list $@5 statement_list $@6 _RBRACKET

    $default  reduce using rule 20 (variable_list)

    variable_list  go to state 30


State 30

   19 body: _LBRACKET $@4 variable_list . $@5 statement_list $@6 _RBRACKET
   21 variable_list: variable_list . variable

    _TYPE  shift, and go to state 31

    $default  reduce using rule 17 ($@5)

    $@5       go to state 32
    variable  go to state 33


State 31

   23 variable: _TYPE . $@7 var_poss _SEMICOLON

    $default  reduce using rule 22 ($@7)

    $@7  go to state 34


State 32

   19 body: _LBRACKET $@4 variable_list $@5 . statement_list $@6 _RBRACKET

    $default  reduce using rule 28 (statement_list)

    statement_list  go to state 35


State 33

   21 variable_list: variable_list variable .

    $default  reduce using rule 21 (variable_list)


State 34

   23 variable: _TYPE $@7 . var_poss _SEMICOLON

    _ID  shift, and go to state 36

    var_poss  go to state 37


State 35

   19 body: _LBRACKET $@4 variable_list $@5 statement_list . $@6 _RBRACKET
   29 statement_list: statement_list . statement

    _IF        shift, and go to state 38
    _RETURN    shift, and go to state 39
    _ID        shift, and go to state 40
    _LBRACKET  shift, and go to state 41
    _SELECT    shift, and go to state 42
    _PARA      shift, and go to state 43
    _CHECK     shift, and go to state 44

    $default  reduce using rule 18 ($@6)

    $@6                   go to state 45
    statement             go to state 46
    check_exp             go to state 47
    void_func             go to state 48
    para_statement        go to state 49
    inc_statement         go to state 50
    compound_statement    go to state 51
    assignment_statement  go to state 52
    function_call         go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56
    select_statement      go to state 57


State 36

   24 var_poss: _ID .
   25         | _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 58

    $default  reduce using rule 24 (var_poss)


State 37

   23 variable: _TYPE $@7 var_poss . _SEMICOLON
   26 var_poss: var_poss . _COMMA _ID
   27         | var_poss . _COMMA _ID _ASSIGN num_exp

    _SEMICOLON  shift, and go to state 59
    _COMMA      shift, and go to state 60


State 38

   77 if_part: _IF . _LPAREN @16 rel_exp $@17 _RPAREN statement

    _LPAREN  shift, and go to state 61


State 39

   79 return_statement: _RETURN . num_exp _SEMICOLON
   80                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 62
    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64
    _LPAREN       shift, and go to state 65
    _SEMICOLON    shift, and go to state 66

    num_exp        go to state 67
    exp            go to state 68
    literal        go to state 69
    function_call  go to state 70


State 40

   55 inc_statement: _ID . _INC_OP _SEMICOLON
   57 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   69 function_call: _ID . $@14 _LPAREN $@15 argument _RPAREN

    _ASSIGN  shift, and go to state 71
    _INC_OP  shift, and go to state 72

    $default  reduce using rule 67 ($@14)

    $@14  go to state 73


State 41

   56 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 28 (statement_list)

    statement_list  go to state 74


State 42

   81 select_statement: _SELECT . arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 75

    arg_select  go to state 76


State 43

   54 para_statement: _PARA . _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement

    _LPAREN  shift, and go to state 77


State 44

   41 check_exp: _CHECK . _LSBRAC _ID $@8 _RSBRAC _LBRACKET $@9 whenPart otherwise _RBRACKET

    _LSBRAC  shift, and go to state 78


State 45

   19 body: _LBRACKET $@4 variable_list $@5 statement_list $@6 . _RBRACKET

    _RBRACKET  shift, and go to state 79


State 46

   29 statement_list: statement_list statement .

    $default  reduce using rule 29 (statement_list)


State 47

   38 statement: check_exp .

    $default  reduce using rule 38 (statement)


State 48

   37 statement: void_func .

    $default  reduce using rule 37 (statement)


State 49

   36 statement: para_statement .

    $default  reduce using rule 36 (statement)


State 50

   35 statement: inc_statement .

    $default  reduce using rule 35 (statement)


State 51

   30 statement: compound_statement .

    $default  reduce using rule 30 (statement)


State 52

   31 statement: assignment_statement .

    $default  reduce using rule 31 (statement)


State 53

   51 void_func: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 80


State 54

   32 statement: if_statement .

    $default  reduce using rule 32 (statement)


State 55

   73 if_statement: if_part .
   74             | if_part . _ELSE statement

    _ELSE  shift, and go to state 81

    $default  reduce using rule 73 (if_statement)


State 56

   33 statement: return_statement .

    $default  reduce using rule 33 (statement)


State 57

   34 statement: select_statement .

    $default  reduce using rule 34 (statement)


State 58

   25 var_poss: _ID _ASSIGN . num_exp

    _ID           shift, and go to state 62
    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64
    _LPAREN       shift, and go to state 65

    num_exp        go to state 82
    exp            go to state 68
    literal        go to state 69
    function_call  go to state 70


State 59

   23 variable: _TYPE $@7 var_poss _SEMICOLON .

    $default  reduce using rule 23 (variable)


State 60

   26 var_poss: var_poss _COMMA . _ID
   27         | var_poss _COMMA . _ID _ASSIGN num_exp

    _ID  shift, and go to state 83


State 61

   77 if_part: _IF _LPAREN . @16 rel_exp $@17 _RPAREN statement

    $default  reduce using rule 75 (@16)

    @16  go to state 84


State 62

   61 exp: _ID .
   64    | _ID . _INC_OP
   69 function_call: _ID . $@14 _LPAREN $@15 argument _RPAREN

    _INC_OP  shift, and go to state 85

    _LPAREN   reduce using rule 67 ($@14)
    $default  reduce using rule 61 (exp)

    $@14  go to state 73


State 63

   65 literal: _INT_NUMBER .

    $default  reduce using rule 65 (literal)


State 64

   66 literal: _UINT_NUMBER .

    $default  reduce using rule 66 (literal)


State 65

   63 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 62
    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64
    _LPAREN       shift, and go to state 65

    num_exp        go to state 86
    exp            go to state 68
    literal        go to state 69
    function_call  go to state 70


State 66

   80 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 80 (return_statement)


State 67

   59 num_exp: num_exp . _AROP exp
   79 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 87
    _AROP       shift, and go to state 88


State 68

   58 num_exp: exp .

    $default  reduce using rule 58 (num_exp)


State 69

   60 exp: literal .

    $default  reduce using rule 60 (exp)


State 70

   62 exp: function_call .

    $default  reduce using rule 62 (exp)


State 71

   57 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 62
    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64
    _LPAREN       shift, and go to state 65

    num_exp        go to state 89
    exp            go to state 68
    literal        go to state 69
    function_call  go to state 70


State 72

   55 inc_statement: _ID _INC_OP . _SEMICOLON

    _SEMICOLON  shift, and go to state 90


State 73

   69 function_call: _ID $@14 . _LPAREN $@15 argument _RPAREN

    _LPAREN  shift, and go to state 91


State 74

   29 statement_list: statement_list . statement
   56 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 38
    _RETURN    shift, and go to state 39
    _ID        shift, and go to state 40
    _LBRACKET  shift, and go to state 41
    _RBRACKET  shift, and go to state 92
    _SELECT    shift, and go to state 42
    _PARA      shift, and go to state 43
    _CHECK     shift, and go to state 44

    statement             go to state 46
    check_exp             go to state 47
    void_func             go to state 48
    para_statement        go to state 49
    inc_statement         go to state 50
    compound_statement    go to state 51
    assignment_statement  go to state 52
    function_call         go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56
    select_statement      go to state 57


State 75

   82 arg_select: _ID .

    $default  reduce using rule 82 (arg_select)


State 76

   81 select_statement: _SELECT arg_select . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON
   83 arg_select: arg_select . _COMMA _ID

    _FROM   shift, and go to state 93
    _COMMA  shift, and go to state 94


State 77

   54 para_statement: _PARA _LPAREN . @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement

    $default  reduce using rule 52 (@12)

    @12  go to state 95


State 78

   41 check_exp: _CHECK _LSBRAC . _ID $@8 _RSBRAC _LBRACKET $@9 whenPart otherwise _RBRACKET

    _ID  shift, and go to state 96


State 79

   19 body: _LBRACKET $@4 variable_list $@5 statement_list $@6 _RBRACKET .

    $default  reduce using rule 19 (body)


State 80

   51 void_func: function_call _SEMICOLON .

    $default  reduce using rule 51 (void_func)


State 81

   74 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 38
    _RETURN    shift, and go to state 39
    _ID        shift, and go to state 40
    _LBRACKET  shift, and go to state 41
    _SELECT    shift, and go to state 42
    _PARA      shift, and go to state 43
    _CHECK     shift, and go to state 44

    statement             go to state 97
    check_exp             go to state 47
    void_func             go to state 48
    para_statement        go to state 49
    inc_statement         go to state 50
    compound_statement    go to state 51
    assignment_statement  go to state 52
    function_call         go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56
    select_statement      go to state 57


State 82

   25 var_poss: _ID _ASSIGN num_exp .
   59 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 88

    $default  reduce using rule 25 (var_poss)


State 83

   26 var_poss: var_poss _COMMA _ID .
   27         | var_poss _COMMA _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 98

    $default  reduce using rule 26 (var_poss)


State 84

   77 if_part: _IF _LPAREN @16 . rel_exp $@17 _RPAREN statement

    _ID           shift, and go to state 62
    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64
    _LPAREN       shift, and go to state 65

    num_exp        go to state 99
    exp            go to state 68
    literal        go to state 69
    function_call  go to state 70
    rel_exp        go to state 100


State 85

   64 exp: _ID _INC_OP .

    $default  reduce using rule 64 (exp)


State 86

   59 num_exp: num_exp . _AROP exp
   63 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 101
    _AROP    shift, and go to state 88


State 87

   79 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 79 (return_statement)


State 88

   59 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 62
    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64
    _LPAREN       shift, and go to state 65

    exp            go to state 102
    literal        go to state 69
    function_call  go to state 70


State 89

   57 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   59 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 103
    _AROP       shift, and go to state 88


State 90

   55 inc_statement: _ID _INC_OP _SEMICOLON .

    $default  reduce using rule 55 (inc_statement)


State 91

   69 function_call: _ID $@14 _LPAREN . $@15 argument _RPAREN

    $default  reduce using rule 68 ($@15)

    $@15  go to state 104


State 92

   56 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 56 (compound_statement)


State 93

   81 select_statement: _SELECT arg_select _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 105


State 94

   83 arg_select: arg_select _COMMA . _ID

    _ID  shift, and go to state 106


State 95

   54 para_statement: _PARA _LPAREN @12 . _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement

    _ID  shift, and go to state 107


State 96

   41 check_exp: _CHECK _LSBRAC _ID . $@8 _RSBRAC _LBRACKET $@9 whenPart otherwise _RBRACKET

    $default  reduce using rule 39 ($@8)

    $@8  go to state 108


State 97

   74 if_statement: if_part _ELSE statement .

    $default  reduce using rule 74 (if_statement)


State 98

   27 var_poss: var_poss _COMMA _ID _ASSIGN . num_exp

    _ID           shift, and go to state 62
    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64
    _LPAREN       shift, and go to state 65

    num_exp        go to state 109
    exp            go to state 68
    literal        go to state 69
    function_call  go to state 70


State 99

   59 num_exp: num_exp . _AROP exp
   78 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 88
    _RELOP  shift, and go to state 110


State 100

   77 if_part: _IF _LPAREN @16 rel_exp . $@17 _RPAREN statement

    $default  reduce using rule 76 ($@17)

    $@17  go to state 111


State 101

   63 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 63 (exp)


State 102

   59 num_exp: num_exp _AROP exp .

    $default  reduce using rule 59 (num_exp)


State 103

   57 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 57 (assignment_statement)


State 104

   69 function_call: _ID $@14 _LPAREN $@15 . argument _RPAREN

    _ID           shift, and go to state 62
    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64
    _LPAREN       shift, and go to state 65

    $default  reduce using rule 70 (argument)

    num_exp        go to state 112
    exp            go to state 68
    literal        go to state 69
    function_call  go to state 70
    argument       go to state 113


State 105

   81 select_statement: _SELECT arg_select _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 114


State 106

   83 arg_select: arg_select _COMMA _ID .

    $default  reduce using rule 83 (arg_select)


State 107

   54 para_statement: _PARA _LPAREN @12 _ID . _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement

    _ASSIGN  shift, and go to state 115


State 108

   41 check_exp: _CHECK _LSBRAC _ID $@8 . _RSBRAC _LBRACKET $@9 whenPart otherwise _RBRACKET

    _RSBRAC  shift, and go to state 116


State 109

   27 var_poss: var_poss _COMMA _ID _ASSIGN num_exp .
   59 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 88

    $default  reduce using rule 27 (var_poss)


State 110

   78 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 62
    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64
    _LPAREN       shift, and go to state 65

    num_exp        go to state 117
    exp            go to state 68
    literal        go to state 69
    function_call  go to state 70


State 111

   77 if_part: _IF _LPAREN @16 rel_exp $@17 . _RPAREN statement

    _RPAREN  shift, and go to state 118


State 112

   59 num_exp: num_exp . _AROP exp
   71 argument: num_exp .

    _AROP  shift, and go to state 88

    $default  reduce using rule 71 (argument)


State 113

   69 function_call: _ID $@14 _LPAREN $@15 argument . _RPAREN
   72 argument: argument . _COMMA num_exp

    _RPAREN  shift, and go to state 119
    _COMMA   shift, and go to state 120


State 114

   81 select_statement: _SELECT arg_select _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 121


State 115

   54 para_statement: _PARA _LPAREN @12 _ID _ASSIGN . literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement

    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64

    literal  go to state 122


State 116

   41 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC . _LBRACKET $@9 whenPart otherwise _RBRACKET

    _LBRACKET  shift, and go to state 123


State 117

   59 num_exp: num_exp . _AROP exp
   78 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 88

    $default  reduce using rule 78 (rel_exp)


State 118

   77 if_part: _IF _LPAREN @16 rel_exp $@17 _RPAREN . statement

    _IF        shift, and go to state 38
    _RETURN    shift, and go to state 39
    _ID        shift, and go to state 40
    _LBRACKET  shift, and go to state 41
    _SELECT    shift, and go to state 42
    _PARA      shift, and go to state 43
    _CHECK     shift, and go to state 44

    statement             go to state 124
    check_exp             go to state 47
    void_func             go to state 48
    para_statement        go to state 49
    inc_statement         go to state 50
    compound_statement    go to state 51
    assignment_statement  go to state 52
    function_call         go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56
    select_statement      go to state 57


State 119

   69 function_call: _ID $@14 _LPAREN $@15 argument _RPAREN .

    $default  reduce using rule 69 (function_call)


State 120

   72 argument: argument _COMMA . num_exp

    _ID           shift, and go to state 62
    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64
    _LPAREN       shift, and go to state 65

    num_exp        go to state 125
    exp            go to state 68
    literal        go to state 69
    function_call  go to state 70


State 121

   81 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 62
    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64
    _LPAREN       shift, and go to state 65

    num_exp        go to state 99
    exp            go to state 68
    literal        go to state 69
    function_call  go to state 70
    rel_exp        go to state 126


State 122

   54 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal . _COLON literal _COLON _PASO literal _RPAREN $@13 statement

    _COLON  shift, and go to state 127


State 123

   41 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC _LBRACKET . $@9 whenPart otherwise _RBRACKET

    $default  reduce using rule 40 ($@9)

    $@9  go to state 128


State 124

   77 if_part: _IF _LPAREN @16 rel_exp $@17 _RPAREN statement .

    $default  reduce using rule 77 (if_part)


State 125

   59 num_exp: num_exp . _AROP exp
   72 argument: argument _COMMA num_exp .

    _AROP  shift, and go to state 88

    $default  reduce using rule 72 (argument)


State 126

   81 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 129


State 127

   54 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON . literal _COLON _PASO literal _RPAREN $@13 statement

    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64

    literal  go to state 130


State 128

   41 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC _LBRACKET $@9 . whenPart otherwise _RBRACKET

    _WHEN  shift, and go to state 131

    whenPart  go to state 132
    when      go to state 133


State 129

   81 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 134


State 130

   54 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal . _COLON _PASO literal _RPAREN $@13 statement

    _COLON  shift, and go to state 135


State 131

   50 when: _WHEN . literal $@11 _ARROW statement

    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64

    literal  go to state 136


State 132

   41 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC _LBRACKET $@9 whenPart . otherwise _RBRACKET
   46 whenPart: whenPart . when finish_par

    _WHEN       shift, and go to state 131
    _OTHERWISE  shift, and go to state 137

    $default  reduce using rule 42 (otherwise)

    otherwise  go to state 138
    when       go to state 139


State 133

   45 whenPart: when . finish_par

    _FINISH  shift, and go to state 140

    $default  reduce using rule 47 (finish_par)

    finish_par  go to state 141


State 134

   81 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 81 (select_statement)


State 135

   54 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON . _PASO literal _RPAREN $@13 statement

    _PASO  shift, and go to state 142


State 136

   50 when: _WHEN literal . $@11 _ARROW statement

    $default  reduce using rule 49 ($@11)

    $@11  go to state 143


State 137

   44 otherwise: _OTHERWISE . $@10 _ARROW statement

    $default  reduce using rule 43 ($@10)

    $@10  go to state 144


State 138

   41 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC _LBRACKET $@9 whenPart otherwise . _RBRACKET

    _RBRACKET  shift, and go to state 145


State 139

   46 whenPart: whenPart when . finish_par

    _FINISH  shift, and go to state 140

    $default  reduce using rule 47 (finish_par)

    finish_par  go to state 146


State 140

   48 finish_par: _FINISH . _SEMICOLON

    _SEMICOLON  shift, and go to state 147


State 141

   45 whenPart: when finish_par .

    $default  reduce using rule 45 (whenPart)


State 142

   54 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO . literal _RPAREN $@13 statement

    _INT_NUMBER   shift, and go to state 63
    _UINT_NUMBER  shift, and go to state 64

    literal  go to state 148


State 143

   50 when: _WHEN literal $@11 . _ARROW statement

    _ARROW  shift, and go to state 149


State 144

   44 otherwise: _OTHERWISE $@10 . _ARROW statement

    _ARROW  shift, and go to state 150


State 145

   41 check_exp: _CHECK _LSBRAC _ID $@8 _RSBRAC _LBRACKET $@9 whenPart otherwise _RBRACKET .

    $default  reduce using rule 41 (check_exp)


State 146

   46 whenPart: whenPart when finish_par .

    $default  reduce using rule 46 (whenPart)


State 147

   48 finish_par: _FINISH _SEMICOLON .

    $default  reduce using rule 48 (finish_par)


State 148

   54 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal . _RPAREN $@13 statement

    _RPAREN  shift, and go to state 151


State 149

   50 when: _WHEN literal $@11 _ARROW . statement

    _IF        shift, and go to state 38
    _RETURN    shift, and go to state 39
    _ID        shift, and go to state 40
    _LBRACKET  shift, and go to state 41
    _SELECT    shift, and go to state 42
    _PARA      shift, and go to state 43
    _CHECK     shift, and go to state 44

    statement             go to state 152
    check_exp             go to state 47
    void_func             go to state 48
    para_statement        go to state 49
    inc_statement         go to state 50
    compound_statement    go to state 51
    assignment_statement  go to state 52
    function_call         go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56
    select_statement      go to state 57


State 150

   44 otherwise: _OTHERWISE $@10 _ARROW . statement

    _IF        shift, and go to state 38
    _RETURN    shift, and go to state 39
    _ID        shift, and go to state 40
    _LBRACKET  shift, and go to state 41
    _SELECT    shift, and go to state 42
    _PARA      shift, and go to state 43
    _CHECK     shift, and go to state 44

    statement             go to state 153
    check_exp             go to state 47
    void_func             go to state 48
    para_statement        go to state 49
    inc_statement         go to state 50
    compound_statement    go to state 51
    assignment_statement  go to state 52
    function_call         go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56
    select_statement      go to state 57


State 151

   54 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN . $@13 statement

    $default  reduce using rule 53 ($@13)

    $@13  go to state 154


State 152

   50 when: _WHEN literal $@11 _ARROW statement .

    $default  reduce using rule 50 (when)


State 153

   44 otherwise: _OTHERWISE $@10 _ARROW statement .

    $default  reduce using rule 44 (otherwise)


State 154

   54 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 . statement

    _IF        shift, and go to state 38
    _RETURN    shift, and go to state 39
    _ID        shift, and go to state 40
    _LBRACKET  shift, and go to state 41
    _SELECT    shift, and go to state 42
    _PARA      shift, and go to state 43
    _CHECK     shift, and go to state 44

    statement             go to state 155
    check_exp             go to state 47
    void_func             go to state 48
    para_statement        go to state 49
    inc_statement         go to state 50
    compound_statement    go to state 51
    assignment_statement  go to state 52
    function_call         go to state 53
    if_statement          go to state 54
    if_part               go to state 55
    return_statement      go to state 56
    select_statement      go to state 57


State 155

   54 para_statement: _PARA _LPAREN @12 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@13 statement .

    $default  reduce using rule 54 (para_statement)
