Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 $@2: %empty

    9 $@3: %empty

   10 body: _LBRACKET $@2 variable_list statement_list $@3 _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 $@4: %empty

   14 variable: _TYPE $@4 var_poss _SEMICOLON

   15 var_poss: _ID
   16         | _ID _ASSIGN literal
   17         | var_poss _COMMA _ID
   18         | var_poss _COMMA _ID _ASSIGN literal

   19 statement_list: %empty
   20               | statement_list statement

   21 statement: compound_statement
   22          | assignment_statement
   23          | if_statement
   24          | return_statement
   25          | select_statement
   26          | inc_statement

   27 inc_statement: _ID _INC_OP _SEMICOLON

   28 compound_statement: _LBRACKET statement_list _RBRACKET

   29 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   30 num_exp: exp
   31        | num_exp _AROP exp

   32 exp: literal
   33    | _ID
   34    | function_call
   35    | _LPAREN num_exp _RPAREN
   36    | _ID _INC_OP

   37 literal: _INT_NUMBER
   38        | _UINT_NUMBER

   39 $@5: %empty

   40 function_call: _ID $@5 _LPAREN argument _RPAREN

   41 argument: %empty
   42         | num_exp

   43 if_statement: if_part
   44             | if_part _ELSE statement

   45 if_part: _IF _LPAREN rel_exp _RPAREN statement

   46 rel_exp: num_exp _RELOP num_exp

   47 return_statement: _RETURN num_exp _SEMICOLON
   48                 | _RETURN _SEMICOLON

   49 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   50 arg_select: _ID
   51           | arg_select _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 14
_IF (259) 45
_ELSE (260) 44
_RETURN (261) 47 48
_ID (262) 5 7 15 16 17 18 27 29 33 36 40 49 50 51
_INT_NUMBER (263) 37
_UINT_NUMBER (264) 38
_LPAREN (265) 5 35 40 45 49
_RPAREN (266) 5 35 40 45 49
_LBRACKET (267) 10 28
_RBRACKET (268) 10 28
_ASSIGN (269) 16 18 29
_SEMICOLON (270) 14 27 29 47 48 49
_AROP (271) 31
_RELOP (272) 46
_SELECT (273) 49
_FROM (274) 49
_WHERE (275) 49
_COMMA (276) 17 18 51
_INC_OP (277) 27 36
ONLY_IF (278)


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
program (25)
    on left: 1, on right: 0
function_list (26)
    on left: 2 3, on right: 1 3
function (27)
    on left: 5, on right: 2 3
$@1 (28)
    on left: 4, on right: 5
parameter (29)
    on left: 6 7, on right: 5
body (30)
    on left: 10, on right: 5
$@2 (31)
    on left: 8, on right: 10
$@3 (32)
    on left: 9, on right: 10
variable_list (33)
    on left: 11 12, on right: 10 12
variable (34)
    on left: 14, on right: 12
$@4 (35)
    on left: 13, on right: 14
var_poss (36)
    on left: 15 16 17 18, on right: 14 17 18
statement_list (37)
    on left: 19 20, on right: 10 20 28
statement (38)
    on left: 21 22 23 24 25 26, on right: 20 44 45
inc_statement (39)
    on left: 27, on right: 26
compound_statement (40)
    on left: 28, on right: 21
assignment_statement (41)
    on left: 29, on right: 22
num_exp (42)
    on left: 30 31, on right: 29 31 35 42 46 47
exp (43)
    on left: 32 33 34 35 36, on right: 30 31
literal (44)
    on left: 37 38, on right: 16 18 32
function_call (45)
    on left: 40, on right: 34
$@5 (46)
    on left: 39, on right: 40
argument (47)
    on left: 41 42, on right: 40
if_statement (48)
    on left: 43 44, on right: 23
if_part (49)
    on left: 45, on right: 43 44
rel_exp (50)
    on left: 46, on right: 45 49
return_statement (51)
    on left: 47 48, on right: 24
select_statement (52)
    on left: 49, on right: 25
arg_select (53)
    on left: 50 51, on right: 49 51


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

   10 body: _LBRACKET . $@2 variable_list statement_list $@3 _RBRACKET

    $default  reduce using rule 8 ($@2)

    $@2  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

   10 body: _LBRACKET $@2 . variable_list statement_list $@3 _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 17


State 17

   10 body: _LBRACKET $@2 variable_list . statement_list $@3 _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 18

    $default  reduce using rule 19 (statement_list)

    variable        go to state 19
    statement_list  go to state 20


State 18

   14 variable: _TYPE . $@4 var_poss _SEMICOLON

    $default  reduce using rule 13 ($@4)

    $@4  go to state 21


State 19

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 20

   10 body: _LBRACKET $@2 variable_list statement_list . $@3 _RBRACKET
   20 statement_list: statement_list . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _SELECT    shift, and go to state 26

    $default  reduce using rule 9 ($@3)

    $@3                   go to state 27
    statement             go to state 28
    inc_statement         go to state 29
    compound_statement    go to state 30
    assignment_statement  go to state 31
    if_statement          go to state 32
    if_part               go to state 33
    return_statement      go to state 34
    select_statement      go to state 35


State 21

   14 variable: _TYPE $@4 . var_poss _SEMICOLON

    _ID  shift, and go to state 36

    var_poss  go to state 37


State 22

   45 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 38


State 23

   47 return_statement: _RETURN . num_exp _SEMICOLON
   48                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42
    _SEMICOLON    shift, and go to state 43

    num_exp        go to state 44
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 24

   27 inc_statement: _ID . _INC_OP _SEMICOLON
   29 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 48
    _INC_OP  shift, and go to state 49


State 25

   28 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 19 (statement_list)

    statement_list  go to state 50


State 26

   49 select_statement: _SELECT . arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 51

    arg_select  go to state 52


State 27

   10 body: _LBRACKET $@2 variable_list statement_list $@3 . _RBRACKET

    _RBRACKET  shift, and go to state 53


State 28

   20 statement_list: statement_list statement .

    $default  reduce using rule 20 (statement_list)


State 29

   26 statement: inc_statement .

    $default  reduce using rule 26 (statement)


State 30

   21 statement: compound_statement .

    $default  reduce using rule 21 (statement)


State 31

   22 statement: assignment_statement .

    $default  reduce using rule 22 (statement)


State 32

   23 statement: if_statement .

    $default  reduce using rule 23 (statement)


State 33

   43 if_statement: if_part .
   44             | if_part . _ELSE statement

    _ELSE  shift, and go to state 54

    $default  reduce using rule 43 (if_statement)


State 34

   24 statement: return_statement .

    $default  reduce using rule 24 (statement)


State 35

   25 statement: select_statement .

    $default  reduce using rule 25 (statement)


State 36

   15 var_poss: _ID .
   16         | _ID . _ASSIGN literal

    _ASSIGN  shift, and go to state 55

    $default  reduce using rule 15 (var_poss)


State 37

   14 variable: _TYPE $@4 var_poss . _SEMICOLON
   17 var_poss: var_poss . _COMMA _ID
   18         | var_poss . _COMMA _ID _ASSIGN literal

    _SEMICOLON  shift, and go to state 56
    _COMMA      shift, and go to state 57


State 38

   45 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 58
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47
    rel_exp        go to state 59


State 39

   33 exp: _ID .
   36    | _ID . _INC_OP
   40 function_call: _ID . $@5 _LPAREN argument _RPAREN

    _INC_OP  shift, and go to state 60

    _LPAREN   reduce using rule 39 ($@5)
    $default  reduce using rule 33 (exp)

    $@5  go to state 61


State 40

   37 literal: _INT_NUMBER .

    $default  reduce using rule 37 (literal)


State 41

   38 literal: _UINT_NUMBER .

    $default  reduce using rule 38 (literal)


State 42

   35 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 62
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 43

   48 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 48 (return_statement)


State 44

   31 num_exp: num_exp . _AROP exp
   47 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 63
    _AROP       shift, and go to state 64


State 45

   30 num_exp: exp .

    $default  reduce using rule 30 (num_exp)


State 46

   32 exp: literal .

    $default  reduce using rule 32 (exp)


State 47

   34 exp: function_call .

    $default  reduce using rule 34 (exp)


State 48

   29 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 65
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 49

   27 inc_statement: _ID _INC_OP . _SEMICOLON

    _SEMICOLON  shift, and go to state 66


State 50

   20 statement_list: statement_list . statement
   28 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _RBRACKET  shift, and go to state 67
    _SELECT    shift, and go to state 26

    statement             go to state 28
    inc_statement         go to state 29
    compound_statement    go to state 30
    assignment_statement  go to state 31
    if_statement          go to state 32
    if_part               go to state 33
    return_statement      go to state 34
    select_statement      go to state 35


State 51

   50 arg_select: _ID .

    $default  reduce using rule 50 (arg_select)


State 52

   49 select_statement: _SELECT arg_select . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON
   51 arg_select: arg_select . _COMMA _ID

    _FROM   shift, and go to state 68
    _COMMA  shift, and go to state 69


State 53

   10 body: _LBRACKET $@2 variable_list statement_list $@3 _RBRACKET .

    $default  reduce using rule 10 (body)


State 54

   44 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _SELECT    shift, and go to state 26

    statement             go to state 70
    inc_statement         go to state 29
    compound_statement    go to state 30
    assignment_statement  go to state 31
    if_statement          go to state 32
    if_part               go to state 33
    return_statement      go to state 34
    select_statement      go to state 35


State 55

   16 var_poss: _ID _ASSIGN . literal

    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41

    literal  go to state 71


State 56

   14 variable: _TYPE $@4 var_poss _SEMICOLON .

    $default  reduce using rule 14 (variable)


State 57

   17 var_poss: var_poss _COMMA . _ID
   18         | var_poss _COMMA . _ID _ASSIGN literal

    _ID  shift, and go to state 72


State 58

   31 num_exp: num_exp . _AROP exp
   46 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 64
    _RELOP  shift, and go to state 73


State 59

   45 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 74


State 60

   36 exp: _ID _INC_OP .

    $default  reduce using rule 36 (exp)


State 61

   40 function_call: _ID $@5 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 75


State 62

   31 num_exp: num_exp . _AROP exp
   35 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 76
    _AROP    shift, and go to state 64


State 63

   47 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 47 (return_statement)


State 64

   31 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    exp            go to state 77
    literal        go to state 46
    function_call  go to state 47


State 65

   29 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   31 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 78
    _AROP       shift, and go to state 64


State 66

   27 inc_statement: _ID _INC_OP _SEMICOLON .

    $default  reduce using rule 27 (inc_statement)


State 67

   28 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 28 (compound_statement)


State 68

   49 select_statement: _SELECT arg_select _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 79


State 69

   51 arg_select: arg_select _COMMA . _ID

    _ID  shift, and go to state 80


State 70

   44 if_statement: if_part _ELSE statement .

    $default  reduce using rule 44 (if_statement)


State 71

   16 var_poss: _ID _ASSIGN literal .

    $default  reduce using rule 16 (var_poss)


State 72

   17 var_poss: var_poss _COMMA _ID .
   18         | var_poss _COMMA _ID . _ASSIGN literal

    _ASSIGN  shift, and go to state 81

    $default  reduce using rule 17 (var_poss)


State 73

   46 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 82
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 74

   45 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _SELECT    shift, and go to state 26

    statement             go to state 83
    inc_statement         go to state 29
    compound_statement    go to state 30
    assignment_statement  go to state 31
    if_statement          go to state 32
    if_part               go to state 33
    return_statement      go to state 34
    select_statement      go to state 35


State 75

   40 function_call: _ID $@5 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    $default  reduce using rule 41 (argument)

    num_exp        go to state 84
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47
    argument       go to state 85


State 76

   35 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 35 (exp)


State 77

   31 num_exp: num_exp _AROP exp .

    $default  reduce using rule 31 (num_exp)


State 78

   29 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 29 (assignment_statement)


State 79

   49 select_statement: _SELECT arg_select _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 86


State 80

   51 arg_select: arg_select _COMMA _ID .

    $default  reduce using rule 51 (arg_select)


State 81

   18 var_poss: var_poss _COMMA _ID _ASSIGN . literal

    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41

    literal  go to state 87


State 82

   31 num_exp: num_exp . _AROP exp
   46 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 64

    $default  reduce using rule 46 (rel_exp)


State 83

   45 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 45 (if_part)


State 84

   31 num_exp: num_exp . _AROP exp
   42 argument: num_exp .

    _AROP  shift, and go to state 64

    $default  reduce using rule 42 (argument)


State 85

   40 function_call: _ID $@5 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 88


State 86

   49 select_statement: _SELECT arg_select _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 89


State 87

   18 var_poss: var_poss _COMMA _ID _ASSIGN literal .

    $default  reduce using rule 18 (var_poss)


State 88

   40 function_call: _ID $@5 _LPAREN argument _RPAREN .

    $default  reduce using rule 40 (function_call)


State 89

   49 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 58
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47
    rel_exp        go to state 90


State 90

   49 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 91


State 91

   49 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 92


State 92

   49 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 49 (select_statement)
