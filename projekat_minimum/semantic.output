Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN body

    7 parameter: %empty
    8          | _TYPE _ID
    9          | parameter _COMMA _TYPE _ID

   10 $@3: %empty

   11 $@4: %empty

   12 body: _LBRACKET $@3 variable_list statement_list $@4 _RBRACKET

   13 variable_list: %empty
   14              | variable_list variable

   15 $@5: %empty

   16 variable: _TYPE $@5 var_poss _SEMICOLON

   17 var_poss: _ID
   18         | _ID _ASSIGN num_exp
   19         | var_poss _COMMA _ID
   20         | var_poss _COMMA _ID _ASSIGN num_exp

   21 statement_list: %empty
   22               | statement_list statement

   23 statement: compound_statement
   24          | assignment_statement
   25          | if_statement
   26          | return_statement
   27          | select_statement
   28          | inc_statement
   29          | para_statement
   30          | void_func
   31          | check_exp

   32 $@6: %empty

   33 $@7: %empty

   34 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC _LBRACKET $@7 whenPart otherwise _RBRACKET

   35 otherwise: %empty
   36          | _OTHERWISE _ARROW statement

   37 whenPart: when finish_par
   38         | whenPart when finish_par

   39 finish_par: %empty
   40           | _FINISH _SEMICOLON

   41 when: _WHEN literal _ARROW statement

   42 void_func: function_call _SEMICOLON

   43 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

   44 inc_statement: _ID _INC_OP _SEMICOLON

   45 compound_statement: _LBRACKET statement_list _RBRACKET

   46 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   47 num_exp: exp
   48        | num_exp _AROP exp

   49 exp: literal
   50    | _ID
   51    | function_call
   52    | _LPAREN num_exp _RPAREN
   53    | _ID _INC_OP

   54 literal: _INT_NUMBER
   55        | _UINT_NUMBER

   56 $@8: %empty

   57 $@9: %empty

   58 function_call: _ID $@8 _LPAREN $@9 argument _RPAREN

   59 argument: %empty
   60         | num_exp
   61         | argument _COMMA num_exp

   62 if_statement: if_part
   63             | if_part _ELSE statement

   64 if_part: _IF _LPAREN rel_exp _RPAREN statement

   65 rel_exp: num_exp _RELOP num_exp

   66 return_statement: _RETURN num_exp _SEMICOLON
   67                 | _RETURN _SEMICOLON

   68 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   69 arg_select: _ID
   70           | arg_select _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 6 8 9 16
_IF (259) 64
_ELSE (260) 63
_RETURN (261) 66 67
_ID (262) 6 8 9 17 18 19 20 34 43 44 46 50 53 58 68 69 70
_INT_NUMBER (263) 54
_UINT_NUMBER (264) 55
_LPAREN (265) 6 43 52 58 64 68
_RPAREN (266) 6 43 52 58 64 68
_LBRACKET (267) 12 34 45
_RBRACKET (268) 12 34 45
_ASSIGN (269) 18 20 43 46
_SEMICOLON (270) 16 40 42 44 46 66 67 68
_AROP (271) 48
_RELOP (272) 65
_SELECT (273) 68
_FROM (274) 68
_WHERE (275) 68
_COMMA (276) 9 19 20 61 70
_INC_OP (277) 44 53
_PARA (278) 43
_PASO (279) 43
_COLON (280) 43
_CHECK (281) 34
_WHEN (282) 41
_FINISH (283) 40
_LSBRAC (284) 34
_RSBRAC (285) 34
_ARROW (286) 36 41
_OTHERWISE (287) 36
ONLY_IF (288)


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
function_list (36)
    on left: 2 3, on right: 1 3
function (37)
    on left: 6, on right: 2 3
$@1 (38)
    on left: 4, on right: 6
$@2 (39)
    on left: 5, on right: 6
parameter (40)
    on left: 7 8 9, on right: 6 9
body (41)
    on left: 12, on right: 6
$@3 (42)
    on left: 10, on right: 12
$@4 (43)
    on left: 11, on right: 12
variable_list (44)
    on left: 13 14, on right: 12 14
variable (45)
    on left: 16, on right: 14
$@5 (46)
    on left: 15, on right: 16
var_poss (47)
    on left: 17 18 19 20, on right: 16 19 20
statement_list (48)
    on left: 21 22, on right: 12 22 45
statement (49)
    on left: 23 24 25 26 27 28 29 30 31, on right: 22 36 41 43 63 64
check_exp (50)
    on left: 34, on right: 31
$@6 (51)
    on left: 32, on right: 34
$@7 (52)
    on left: 33, on right: 34
otherwise (53)
    on left: 35 36, on right: 34
whenPart (54)
    on left: 37 38, on right: 34 38
finish_par (55)
    on left: 39 40, on right: 37 38
when (56)
    on left: 41, on right: 37 38
void_func (57)
    on left: 42, on right: 30
para_statement (58)
    on left: 43, on right: 29
inc_statement (59)
    on left: 44, on right: 28
compound_statement (60)
    on left: 45, on right: 23
assignment_statement (61)
    on left: 46, on right: 24
num_exp (62)
    on left: 47 48, on right: 18 20 46 48 52 60 61 65 66
exp (63)
    on left: 49 50 51 52 53, on right: 47 48
literal (64)
    on left: 54 55, on right: 41 43 49
function_call (65)
    on left: 58, on right: 42 51
$@8 (66)
    on left: 56, on right: 58
$@9 (67)
    on left: 57, on right: 58
argument (68)
    on left: 59 60 61, on right: 58 61
if_statement (69)
    on left: 62 63, on right: 25
if_part (70)
    on left: 64, on right: 62 63
rel_exp (71)
    on left: 65, on right: 64 68
return_statement (72)
    on left: 66 67, on right: 26
select_statement (73)
    on left: 68, on right: 27
arg_select (74)
    on left: 69 70, on right: 68 70


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    6 function: _TYPE . _ID $@1 _LPAREN $@2 parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: _TYPE _ID . $@1 _LPAREN $@2 parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: _TYPE _ID $@1 . _LPAREN $@2 parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    6 function: _TYPE _ID $@1 _LPAREN . $@2 parameter _RPAREN body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 10


State 10

    6 function: _TYPE _ID $@1 _LPAREN $@2 . parameter _RPAREN body

    _TYPE  shift, and go to state 11

    $default  reduce using rule 7 (parameter)

    parameter  go to state 12


State 11

    8 parameter: _TYPE . _ID

    _ID  shift, and go to state 13


State 12

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter . _RPAREN body
    9 parameter: parameter . _COMMA _TYPE _ID

    _RPAREN  shift, and go to state 14
    _COMMA   shift, and go to state 15


State 13

    8 parameter: _TYPE _ID .

    $default  reduce using rule 8 (parameter)


State 14

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 15

    9 parameter: parameter _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 18


State 16

   12 body: _LBRACKET . $@3 variable_list statement_list $@4 _RBRACKET

    $default  reduce using rule 10 ($@3)

    $@3  go to state 19


State 17

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN body .

    $default  reduce using rule 6 (function)


State 18

    9 parameter: parameter _COMMA _TYPE . _ID

    _ID  shift, and go to state 20


State 19

   12 body: _LBRACKET $@3 . variable_list statement_list $@4 _RBRACKET

    $default  reduce using rule 13 (variable_list)

    variable_list  go to state 21


State 20

    9 parameter: parameter _COMMA _TYPE _ID .

    $default  reduce using rule 9 (parameter)


State 21

   12 body: _LBRACKET $@3 variable_list . statement_list $@4 _RBRACKET
   14 variable_list: variable_list . variable

    _TYPE  shift, and go to state 22

    $default  reduce using rule 21 (statement_list)

    variable        go to state 23
    statement_list  go to state 24


State 22

   16 variable: _TYPE . $@5 var_poss _SEMICOLON

    $default  reduce using rule 15 ($@5)

    $@5  go to state 25


State 23

   14 variable_list: variable_list variable .

    $default  reduce using rule 14 (variable_list)


State 24

   12 body: _LBRACKET $@3 variable_list statement_list . $@4 _RBRACKET
   22 statement_list: statement_list . statement

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _SELECT    shift, and go to state 30
    _PARA      shift, and go to state 31
    _CHECK     shift, and go to state 32

    $default  reduce using rule 11 ($@4)

    $@4                   go to state 33
    statement             go to state 34
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    compound_statement    go to state 39
    assignment_statement  go to state 40
    function_call         go to state 41
    if_statement          go to state 42
    if_part               go to state 43
    return_statement      go to state 44
    select_statement      go to state 45


State 25

   16 variable: _TYPE $@5 . var_poss _SEMICOLON

    _ID  shift, and go to state 46

    var_poss  go to state 47


State 26

   64 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 48


State 27

   66 return_statement: _RETURN . num_exp _SEMICOLON
   67                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52
    _SEMICOLON    shift, and go to state 53

    num_exp        go to state 54
    exp            go to state 55
    literal        go to state 56
    function_call  go to state 57


State 28

   44 inc_statement: _ID . _INC_OP _SEMICOLON
   46 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   58 function_call: _ID . $@8 _LPAREN $@9 argument _RPAREN

    _ASSIGN  shift, and go to state 58
    _INC_OP  shift, and go to state 59

    $default  reduce using rule 56 ($@8)

    $@8  go to state 60


State 29

   45 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 61


State 30

   68 select_statement: _SELECT . arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 62

    arg_select  go to state 63


State 31

   43 para_statement: _PARA . _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

    _LPAREN  shift, and go to state 64


State 32

   34 check_exp: _CHECK . _LSBRAC _ID $@6 _RSBRAC _LBRACKET $@7 whenPart otherwise _RBRACKET

    _LSBRAC  shift, and go to state 65


State 33

   12 body: _LBRACKET $@3 variable_list statement_list $@4 . _RBRACKET

    _RBRACKET  shift, and go to state 66


State 34

   22 statement_list: statement_list statement .

    $default  reduce using rule 22 (statement_list)


State 35

   31 statement: check_exp .

    $default  reduce using rule 31 (statement)


State 36

   30 statement: void_func .

    $default  reduce using rule 30 (statement)


State 37

   29 statement: para_statement .

    $default  reduce using rule 29 (statement)


State 38

   28 statement: inc_statement .

    $default  reduce using rule 28 (statement)


State 39

   23 statement: compound_statement .

    $default  reduce using rule 23 (statement)


State 40

   24 statement: assignment_statement .

    $default  reduce using rule 24 (statement)


State 41

   42 void_func: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 67


State 42

   25 statement: if_statement .

    $default  reduce using rule 25 (statement)


State 43

   62 if_statement: if_part .
   63             | if_part . _ELSE statement

    _ELSE  shift, and go to state 68

    $default  reduce using rule 62 (if_statement)


State 44

   26 statement: return_statement .

    $default  reduce using rule 26 (statement)


State 45

   27 statement: select_statement .

    $default  reduce using rule 27 (statement)


State 46

   17 var_poss: _ID .
   18         | _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 69

    $default  reduce using rule 17 (var_poss)


State 47

   16 variable: _TYPE $@5 var_poss . _SEMICOLON
   19 var_poss: var_poss . _COMMA _ID
   20         | var_poss . _COMMA _ID _ASSIGN num_exp

    _SEMICOLON  shift, and go to state 70
    _COMMA      shift, and go to state 71


State 48

   64 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52

    num_exp        go to state 72
    exp            go to state 55
    literal        go to state 56
    function_call  go to state 57
    rel_exp        go to state 73


State 49

   50 exp: _ID .
   53    | _ID . _INC_OP
   58 function_call: _ID . $@8 _LPAREN $@9 argument _RPAREN

    _INC_OP  shift, and go to state 74

    _LPAREN   reduce using rule 56 ($@8)
    $default  reduce using rule 50 (exp)

    $@8  go to state 60


State 50

   54 literal: _INT_NUMBER .

    $default  reduce using rule 54 (literal)


State 51

   55 literal: _UINT_NUMBER .

    $default  reduce using rule 55 (literal)


State 52

   52 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52

    num_exp        go to state 75
    exp            go to state 55
    literal        go to state 56
    function_call  go to state 57


State 53

   67 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 67 (return_statement)


State 54

   48 num_exp: num_exp . _AROP exp
   66 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 76
    _AROP       shift, and go to state 77


State 55

   47 num_exp: exp .

    $default  reduce using rule 47 (num_exp)


State 56

   49 exp: literal .

    $default  reduce using rule 49 (exp)


State 57

   51 exp: function_call .

    $default  reduce using rule 51 (exp)


State 58

   46 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52

    num_exp        go to state 78
    exp            go to state 55
    literal        go to state 56
    function_call  go to state 57


State 59

   44 inc_statement: _ID _INC_OP . _SEMICOLON

    _SEMICOLON  shift, and go to state 79


State 60

   58 function_call: _ID $@8 . _LPAREN $@9 argument _RPAREN

    _LPAREN  shift, and go to state 80


State 61

   22 statement_list: statement_list . statement
   45 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _RBRACKET  shift, and go to state 81
    _SELECT    shift, and go to state 30
    _PARA      shift, and go to state 31
    _CHECK     shift, and go to state 32

    statement             go to state 34
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    compound_statement    go to state 39
    assignment_statement  go to state 40
    function_call         go to state 41
    if_statement          go to state 42
    if_part               go to state 43
    return_statement      go to state 44
    select_statement      go to state 45


State 62

   69 arg_select: _ID .

    $default  reduce using rule 69 (arg_select)


State 63

   68 select_statement: _SELECT arg_select . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON
   70 arg_select: arg_select . _COMMA _ID

    _FROM   shift, and go to state 82
    _COMMA  shift, and go to state 83


State 64

   43 para_statement: _PARA _LPAREN . _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

    _ID  shift, and go to state 84


State 65

   34 check_exp: _CHECK _LSBRAC . _ID $@6 _RSBRAC _LBRACKET $@7 whenPart otherwise _RBRACKET

    _ID  shift, and go to state 85


State 66

   12 body: _LBRACKET $@3 variable_list statement_list $@4 _RBRACKET .

    $default  reduce using rule 12 (body)


State 67

   42 void_func: function_call _SEMICOLON .

    $default  reduce using rule 42 (void_func)


State 68

   63 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _SELECT    shift, and go to state 30
    _PARA      shift, and go to state 31
    _CHECK     shift, and go to state 32

    statement             go to state 86
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    compound_statement    go to state 39
    assignment_statement  go to state 40
    function_call         go to state 41
    if_statement          go to state 42
    if_part               go to state 43
    return_statement      go to state 44
    select_statement      go to state 45


State 69

   18 var_poss: _ID _ASSIGN . num_exp

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52

    num_exp        go to state 87
    exp            go to state 55
    literal        go to state 56
    function_call  go to state 57


State 70

   16 variable: _TYPE $@5 var_poss _SEMICOLON .

    $default  reduce using rule 16 (variable)


State 71

   19 var_poss: var_poss _COMMA . _ID
   20         | var_poss _COMMA . _ID _ASSIGN num_exp

    _ID  shift, and go to state 88


State 72

   48 num_exp: num_exp . _AROP exp
   65 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 77
    _RELOP  shift, and go to state 89


State 73

   64 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 90


State 74

   53 exp: _ID _INC_OP .

    $default  reduce using rule 53 (exp)


State 75

   48 num_exp: num_exp . _AROP exp
   52 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 91
    _AROP    shift, and go to state 77


State 76

   66 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 66 (return_statement)


State 77

   48 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52

    exp            go to state 92
    literal        go to state 56
    function_call  go to state 57


State 78

   46 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   48 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 93
    _AROP       shift, and go to state 77


State 79

   44 inc_statement: _ID _INC_OP _SEMICOLON .

    $default  reduce using rule 44 (inc_statement)


State 80

   58 function_call: _ID $@8 _LPAREN . $@9 argument _RPAREN

    $default  reduce using rule 57 ($@9)

    $@9  go to state 94


State 81

   45 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 45 (compound_statement)


State 82

   68 select_statement: _SELECT arg_select _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 95


State 83

   70 arg_select: arg_select _COMMA . _ID

    _ID  shift, and go to state 96


State 84

   43 para_statement: _PARA _LPAREN _ID . _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

    _ASSIGN  shift, and go to state 97


State 85

   34 check_exp: _CHECK _LSBRAC _ID . $@6 _RSBRAC _LBRACKET $@7 whenPart otherwise _RBRACKET

    $default  reduce using rule 32 ($@6)

    $@6  go to state 98


State 86

   63 if_statement: if_part _ELSE statement .

    $default  reduce using rule 63 (if_statement)


State 87

   18 var_poss: _ID _ASSIGN num_exp .
   48 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 77

    $default  reduce using rule 18 (var_poss)


State 88

   19 var_poss: var_poss _COMMA _ID .
   20         | var_poss _COMMA _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 99

    $default  reduce using rule 19 (var_poss)


State 89

   65 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52

    num_exp        go to state 100
    exp            go to state 55
    literal        go to state 56
    function_call  go to state 57


State 90

   64 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _SELECT    shift, and go to state 30
    _PARA      shift, and go to state 31
    _CHECK     shift, and go to state 32

    statement             go to state 101
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    compound_statement    go to state 39
    assignment_statement  go to state 40
    function_call         go to state 41
    if_statement          go to state 42
    if_part               go to state 43
    return_statement      go to state 44
    select_statement      go to state 45


State 91

   52 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 52 (exp)


State 92

   48 num_exp: num_exp _AROP exp .

    $default  reduce using rule 48 (num_exp)


State 93

   46 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 46 (assignment_statement)


State 94

   58 function_call: _ID $@8 _LPAREN $@9 . argument _RPAREN

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52

    $default  reduce using rule 59 (argument)

    num_exp        go to state 102
    exp            go to state 55
    literal        go to state 56
    function_call  go to state 57
    argument       go to state 103


State 95

   68 select_statement: _SELECT arg_select _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 104


State 96

   70 arg_select: arg_select _COMMA _ID .

    $default  reduce using rule 70 (arg_select)


State 97

   43 para_statement: _PARA _LPAREN _ID _ASSIGN . literal _COLON literal _COLON _PASO literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51

    literal  go to state 105


State 98

   34 check_exp: _CHECK _LSBRAC _ID $@6 . _RSBRAC _LBRACKET $@7 whenPart otherwise _RBRACKET

    _RSBRAC  shift, and go to state 106


State 99

   20 var_poss: var_poss _COMMA _ID _ASSIGN . num_exp

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52

    num_exp        go to state 107
    exp            go to state 55
    literal        go to state 56
    function_call  go to state 57


State 100

   48 num_exp: num_exp . _AROP exp
   65 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 77

    $default  reduce using rule 65 (rel_exp)


State 101

   64 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 64 (if_part)


State 102

   48 num_exp: num_exp . _AROP exp
   60 argument: num_exp .

    _AROP  shift, and go to state 77

    $default  reduce using rule 60 (argument)


State 103

   58 function_call: _ID $@8 _LPAREN $@9 argument . _RPAREN
   61 argument: argument . _COMMA num_exp

    _RPAREN  shift, and go to state 108
    _COMMA   shift, and go to state 109


State 104

   68 select_statement: _SELECT arg_select _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 110


State 105

   43 para_statement: _PARA _LPAREN _ID _ASSIGN literal . _COLON literal _COLON _PASO literal _RPAREN statement

    _COLON  shift, and go to state 111


State 106

   34 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC . _LBRACKET $@7 whenPart otherwise _RBRACKET

    _LBRACKET  shift, and go to state 112


State 107

   20 var_poss: var_poss _COMMA _ID _ASSIGN num_exp .
   48 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 77

    $default  reduce using rule 20 (var_poss)


State 108

   58 function_call: _ID $@8 _LPAREN $@9 argument _RPAREN .

    $default  reduce using rule 58 (function_call)


State 109

   61 argument: argument _COMMA . num_exp

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52

    num_exp        go to state 113
    exp            go to state 55
    literal        go to state 56
    function_call  go to state 57


State 110

   68 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52

    num_exp        go to state 72
    exp            go to state 55
    literal        go to state 56
    function_call  go to state 57
    rel_exp        go to state 114


State 111

   43 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON . literal _COLON _PASO literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51

    literal  go to state 115


State 112

   34 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC _LBRACKET . $@7 whenPart otherwise _RBRACKET

    $default  reduce using rule 33 ($@7)

    $@7  go to state 116


State 113

   48 num_exp: num_exp . _AROP exp
   61 argument: argument _COMMA num_exp .

    _AROP  shift, and go to state 77

    $default  reduce using rule 61 (argument)


State 114

   68 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 117


State 115

   43 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal . _COLON _PASO literal _RPAREN statement

    _COLON  shift, and go to state 118


State 116

   34 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC _LBRACKET $@7 . whenPart otherwise _RBRACKET

    _WHEN  shift, and go to state 119

    whenPart  go to state 120
    when      go to state 121


State 117

   68 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 122


State 118

   43 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON . _PASO literal _RPAREN statement

    _PASO  shift, and go to state 123


State 119

   41 when: _WHEN . literal _ARROW statement

    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51

    literal  go to state 124


State 120

   34 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC _LBRACKET $@7 whenPart . otherwise _RBRACKET
   38 whenPart: whenPart . when finish_par

    _WHEN       shift, and go to state 119
    _OTHERWISE  shift, and go to state 125

    $default  reduce using rule 35 (otherwise)

    otherwise  go to state 126
    when       go to state 127


State 121

   37 whenPart: when . finish_par

    _FINISH  shift, and go to state 128

    $default  reduce using rule 39 (finish_par)

    finish_par  go to state 129


State 122

   68 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 68 (select_statement)


State 123

   43 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO . literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51

    literal  go to state 130


State 124

   41 when: _WHEN literal . _ARROW statement

    _ARROW  shift, and go to state 131


State 125

   36 otherwise: _OTHERWISE . _ARROW statement

    _ARROW  shift, and go to state 132


State 126

   34 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC _LBRACKET $@7 whenPart otherwise . _RBRACKET

    _RBRACKET  shift, and go to state 133


State 127

   38 whenPart: whenPart when . finish_par

    _FINISH  shift, and go to state 128

    $default  reduce using rule 39 (finish_par)

    finish_par  go to state 134


State 128

   40 finish_par: _FINISH . _SEMICOLON

    _SEMICOLON  shift, and go to state 135


State 129

   37 whenPart: when finish_par .

    $default  reduce using rule 37 (whenPart)


State 130

   43 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal . _RPAREN statement

    _RPAREN  shift, and go to state 136


State 131

   41 when: _WHEN literal _ARROW . statement

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _SELECT    shift, and go to state 30
    _PARA      shift, and go to state 31
    _CHECK     shift, and go to state 32

    statement             go to state 137
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    compound_statement    go to state 39
    assignment_statement  go to state 40
    function_call         go to state 41
    if_statement          go to state 42
    if_part               go to state 43
    return_statement      go to state 44
    select_statement      go to state 45


State 132

   36 otherwise: _OTHERWISE _ARROW . statement

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _SELECT    shift, and go to state 30
    _PARA      shift, and go to state 31
    _CHECK     shift, and go to state 32

    statement             go to state 138
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    compound_statement    go to state 39
    assignment_statement  go to state 40
    function_call         go to state 41
    if_statement          go to state 42
    if_part               go to state 43
    return_statement      go to state 44
    select_statement      go to state 45


State 133

   34 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC _LBRACKET $@7 whenPart otherwise _RBRACKET .

    $default  reduce using rule 34 (check_exp)


State 134

   38 whenPart: whenPart when finish_par .

    $default  reduce using rule 38 (whenPart)


State 135

   40 finish_par: _FINISH _SEMICOLON .

    $default  reduce using rule 40 (finish_par)


State 136

   43 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN . statement

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _SELECT    shift, and go to state 30
    _PARA      shift, and go to state 31
    _CHECK     shift, and go to state 32

    statement             go to state 139
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    compound_statement    go to state 39
    assignment_statement  go to state 40
    function_call         go to state 41
    if_statement          go to state 42
    if_part               go to state 43
    return_statement      go to state 44
    select_statement      go to state 45


State 137

   41 when: _WHEN literal _ARROW statement .

    $default  reduce using rule 41 (when)


State 138

   36 otherwise: _OTHERWISE _ARROW statement .

    $default  reduce using rule 36 (otherwise)


State 139

   43 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement .

    $default  reduce using rule 43 (para_statement)
