Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 body: _LBRACKET variable_list statement_list _RBRACKET

    9 variable_list: %empty
   10              | variable_list variable

   11 $@2: %empty

   12 variable: _TYPE $@2 var_poss _SEMICOLON

   13 var_poss: _ID
   14         | var_poss _COMMA _ID

   15 statement_list: %empty
   16               | statement_list statement

   17 statement: compound_statement
   18          | assignment_statement
   19          | if_statement
   20          | return_statement
   21          | select_statement
   22          | inc_statement

   23 inc_statement: _ID _INC_OP _SEMICOLON

   24 compound_statement: _LBRACKET statement_list _RBRACKET

   25 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   26 num_exp: exp
   27        | num_exp _AROP exp

   28 exp: literal
   29    | _ID
   30    | function_call
   31    | _LPAREN num_exp _RPAREN
   32    | _ID _INC_OP

   33 literal: _INT_NUMBER
   34        | _UINT_NUMBER

   35 $@3: %empty

   36 function_call: _ID $@3 _LPAREN argument _RPAREN

   37 argument: %empty
   38         | num_exp

   39 if_statement: if_part
   40             | if_part _ELSE statement

   41 if_part: _IF _LPAREN rel_exp _RPAREN statement

   42 rel_exp: num_exp _RELOP num_exp

   43 return_statement: _RETURN num_exp _SEMICOLON

   44 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   45 arg_select: _ID
   46           | arg_select _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 12
_IF (259) 41
_ELSE (260) 40
_RETURN (261) 43
_ID (262) 5 7 13 14 23 25 29 32 36 44 45 46
_INT_NUMBER (263) 33
_UINT_NUMBER (264) 34
_LPAREN (265) 5 31 36 41 44
_RPAREN (266) 5 31 36 41 44
_LBRACKET (267) 8 24
_RBRACKET (268) 8 24
_ASSIGN (269) 25
_SEMICOLON (270) 12 23 25 43 44
_AROP (271) 27
_RELOP (272) 42
_SELECT (273) 44
_FROM (274) 44
_WHERE (275) 44
_COMMA (276) 14 46
_INC_OP (277) 23 32
ONLY_IF (278)


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
program (25)
    on left: 1, on right: 0
function_list (26)
    on left: 2 3, on right: 1 3
function (27)
    on left: 5, on right: 2 3
$@1 (28)
    on left: 4, on right: 5
parameter (29)
    on left: 6 7, on right: 5
body (30)
    on left: 8, on right: 5
variable_list (31)
    on left: 9 10, on right: 8 10
variable (32)
    on left: 12, on right: 10
$@2 (33)
    on left: 11, on right: 12
var_poss (34)
    on left: 13 14, on right: 12 14
statement_list (35)
    on left: 15 16, on right: 8 16 24
statement (36)
    on left: 17 18 19 20 21 22, on right: 16 40 41
inc_statement (37)
    on left: 23, on right: 22
compound_statement (38)
    on left: 24, on right: 17
assignment_statement (39)
    on left: 25, on right: 18
num_exp (40)
    on left: 26 27, on right: 25 27 31 38 42 43
exp (41)
    on left: 28 29 30 31 32, on right: 26 27
literal (42)
    on left: 33 34, on right: 28
function_call (43)
    on left: 36, on right: 30
$@3 (44)
    on left: 35, on right: 36
argument (45)
    on left: 37 38, on right: 36
if_statement (46)
    on left: 39 40, on right: 19
if_part (47)
    on left: 41, on right: 39 40
rel_exp (48)
    on left: 42, on right: 41 44
return_statement (49)
    on left: 43, on right: 20
select_statement (50)
    on left: 44, on right: 21
arg_select (51)
    on left: 45 46, on right: 44 46


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    8 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 9 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    8 body: _LBRACKET variable_list . statement_list _RBRACKET
   10 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 15 (statement_list)

    variable        go to state 18
    statement_list  go to state 19


State 17

   12 variable: _TYPE . $@2 var_poss _SEMICOLON

    $default  reduce using rule 11 ($@2)

    $@2  go to state 20


State 18

   10 variable_list: variable_list variable .

    $default  reduce using rule 10 (variable_list)


State 19

    8 body: _LBRACKET variable_list statement_list . _RBRACKET
   16 statement_list: statement_list . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _RBRACKET  shift, and go to state 25
    _SELECT    shift, and go to state 26

    statement             go to state 27
    inc_statement         go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33
    select_statement      go to state 34


State 20

   12 variable: _TYPE $@2 . var_poss _SEMICOLON

    _ID  shift, and go to state 35

    var_poss  go to state 36


State 21

   41 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 37


State 22

   43 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 42
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 23

   23 inc_statement: _ID . _INC_OP _SEMICOLON
   25 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 46
    _INC_OP  shift, and go to state 47


State 24

   24 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 15 (statement_list)

    statement_list  go to state 48


State 25

    8 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 8 (body)


State 26

   44 select_statement: _SELECT . arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 49

    arg_select  go to state 50


State 27

   16 statement_list: statement_list statement .

    $default  reduce using rule 16 (statement_list)


State 28

   22 statement: inc_statement .

    $default  reduce using rule 22 (statement)


State 29

   17 statement: compound_statement .

    $default  reduce using rule 17 (statement)


State 30

   18 statement: assignment_statement .

    $default  reduce using rule 18 (statement)


State 31

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 32

   39 if_statement: if_part .
   40             | if_part . _ELSE statement

    _ELSE  shift, and go to state 51

    $default  reduce using rule 39 (if_statement)


State 33

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 34

   21 statement: select_statement .

    $default  reduce using rule 21 (statement)


State 35

   13 var_poss: _ID .

    $default  reduce using rule 13 (var_poss)


State 36

   12 variable: _TYPE $@2 var_poss . _SEMICOLON
   14 var_poss: var_poss . _COMMA _ID

    _SEMICOLON  shift, and go to state 52
    _COMMA      shift, and go to state 53


State 37

   41 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 54
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    rel_exp        go to state 55


State 38

   29 exp: _ID .
   32    | _ID . _INC_OP
   36 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _INC_OP  shift, and go to state 56

    _LPAREN   reduce using rule 35 ($@3)
    $default  reduce using rule 29 (exp)

    $@3  go to state 57


State 39

   33 literal: _INT_NUMBER .

    $default  reduce using rule 33 (literal)


State 40

   34 literal: _UINT_NUMBER .

    $default  reduce using rule 34 (literal)


State 41

   31 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 58
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 42

   27 num_exp: num_exp . _AROP exp
   43 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 59
    _AROP       shift, and go to state 60


State 43

   26 num_exp: exp .

    $default  reduce using rule 26 (num_exp)


State 44

   28 exp: literal .

    $default  reduce using rule 28 (exp)


State 45

   30 exp: function_call .

    $default  reduce using rule 30 (exp)


State 46

   25 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 61
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 47

   23 inc_statement: _ID _INC_OP . _SEMICOLON

    _SEMICOLON  shift, and go to state 62


State 48

   16 statement_list: statement_list . statement
   24 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _RBRACKET  shift, and go to state 63
    _SELECT    shift, and go to state 26

    statement             go to state 27
    inc_statement         go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33
    select_statement      go to state 34


State 49

   45 arg_select: _ID .

    $default  reduce using rule 45 (arg_select)


State 50

   44 select_statement: _SELECT arg_select . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON
   46 arg_select: arg_select . _COMMA _ID

    _FROM   shift, and go to state 64
    _COMMA  shift, and go to state 65


State 51

   40 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _SELECT    shift, and go to state 26

    statement             go to state 66
    inc_statement         go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33
    select_statement      go to state 34


State 52

   12 variable: _TYPE $@2 var_poss _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 53

   14 var_poss: var_poss _COMMA . _ID

    _ID  shift, and go to state 67


State 54

   27 num_exp: num_exp . _AROP exp
   42 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 60
    _RELOP  shift, and go to state 68


State 55

   41 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 69


State 56

   32 exp: _ID _INC_OP .

    $default  reduce using rule 32 (exp)


State 57

   36 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 70


State 58

   27 num_exp: num_exp . _AROP exp
   31 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 71
    _AROP    shift, and go to state 60


State 59

   43 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 43 (return_statement)


State 60

   27 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    exp            go to state 72
    literal        go to state 44
    function_call  go to state 45


State 61

   25 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   27 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 73
    _AROP       shift, and go to state 60


State 62

   23 inc_statement: _ID _INC_OP _SEMICOLON .

    $default  reduce using rule 23 (inc_statement)


State 63

   24 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 24 (compound_statement)


State 64

   44 select_statement: _SELECT arg_select _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 74


State 65

   46 arg_select: arg_select _COMMA . _ID

    _ID  shift, and go to state 75


State 66

   40 if_statement: if_part _ELSE statement .

    $default  reduce using rule 40 (if_statement)


State 67

   14 var_poss: var_poss _COMMA _ID .

    $default  reduce using rule 14 (var_poss)


State 68

   42 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 76
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45


State 69

   41 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _SELECT    shift, and go to state 26

    statement             go to state 77
    inc_statement         go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33
    select_statement      go to state 34


State 70

   36 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    $default  reduce using rule 37 (argument)

    num_exp        go to state 78
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    argument       go to state 79


State 71

   31 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 31 (exp)


State 72

   27 num_exp: num_exp _AROP exp .

    $default  reduce using rule 27 (num_exp)


State 73

   25 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 25 (assignment_statement)


State 74

   44 select_statement: _SELECT arg_select _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 80


State 75

   46 arg_select: arg_select _COMMA _ID .

    $default  reduce using rule 46 (arg_select)


State 76

   27 num_exp: num_exp . _AROP exp
   42 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 60

    $default  reduce using rule 42 (rel_exp)


State 77

   41 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 41 (if_part)


State 78

   27 num_exp: num_exp . _AROP exp
   38 argument: num_exp .

    _AROP  shift, and go to state 60

    $default  reduce using rule 38 (argument)


State 79

   36 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 81


State 80

   44 select_statement: _SELECT arg_select _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 82


State 81

   36 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 36 (function_call)


State 82

   44 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 38
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 41

    num_exp        go to state 54
    exp            go to state 43
    literal        go to state 44
    function_call  go to state 45
    rel_exp        go to state 83


State 83

   44 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 84


State 84

   44 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 85


State 85

   44 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 44 (select_statement)
