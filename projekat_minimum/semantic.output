Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 $@2: %empty

    9 $@3: %empty

   10 body: _LBRACKET $@2 variable_list statement_list $@3 _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 $@4: %empty

   14 variable: _TYPE $@4 var_poss _SEMICOLON

   15 var_poss: _ID
   16         | _ID _ASSIGN literal
   17         | var_poss _COMMA _ID
   18         | var_poss _COMMA _ID _ASSIGN literal

   19 statement_list: %empty
   20               | statement_list statement

   21 statement: compound_statement
   22          | assignment_statement
   23          | if_statement
   24          | return_statement
   25          | select_statement
   26          | inc_statement
   27          | para_statement

   28 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

   29 inc_statement: _ID _INC_OP _SEMICOLON

   30 compound_statement: _LBRACKET statement_list _RBRACKET

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   32 num_exp: exp
   33        | num_exp _AROP exp

   34 exp: literal
   35    | _ID
   36    | function_call
   37    | _LPAREN num_exp _RPAREN
   38    | _ID _INC_OP

   39 literal: _INT_NUMBER
   40        | _UINT_NUMBER

   41 $@5: %empty

   42 function_call: _ID $@5 _LPAREN argument _RPAREN

   43 argument: %empty
   44         | num_exp

   45 if_statement: if_part
   46             | if_part _ELSE statement

   47 if_part: _IF _LPAREN rel_exp _RPAREN statement

   48 rel_exp: num_exp _RELOP num_exp

   49 return_statement: _RETURN num_exp _SEMICOLON
   50                 | _RETURN _SEMICOLON

   51 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   52 arg_select: _ID
   53           | arg_select _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 14
_IF (259) 47
_ELSE (260) 46
_RETURN (261) 49 50
_ID (262) 5 7 15 16 17 18 28 29 31 35 38 42 51 52 53
_INT_NUMBER (263) 39
_UINT_NUMBER (264) 40
_LPAREN (265) 5 28 37 42 47 51
_RPAREN (266) 5 28 37 42 47 51
_LBRACKET (267) 10 30
_RBRACKET (268) 10 30
_ASSIGN (269) 16 18 28 31
_SEMICOLON (270) 14 29 31 49 50 51
_AROP (271) 33
_RELOP (272) 48
_SELECT (273) 51
_FROM (274) 51
_WHERE (275) 51
_COMMA (276) 17 18 53
_INC_OP (277) 29 38
_PARA (278) 28
_PASO (279) 28
_COLON (280) 28
ONLY_IF (281)


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
program (28)
    on left: 1, on right: 0
function_list (29)
    on left: 2 3, on right: 1 3
function (30)
    on left: 5, on right: 2 3
$@1 (31)
    on left: 4, on right: 5
parameter (32)
    on left: 6 7, on right: 5
body (33)
    on left: 10, on right: 5
$@2 (34)
    on left: 8, on right: 10
$@3 (35)
    on left: 9, on right: 10
variable_list (36)
    on left: 11 12, on right: 10 12
variable (37)
    on left: 14, on right: 12
$@4 (38)
    on left: 13, on right: 14
var_poss (39)
    on left: 15 16 17 18, on right: 14 17 18
statement_list (40)
    on left: 19 20, on right: 10 20 30
statement (41)
    on left: 21 22 23 24 25 26 27, on right: 20 28 46 47
para_statement (42)
    on left: 28, on right: 27
inc_statement (43)
    on left: 29, on right: 26
compound_statement (44)
    on left: 30, on right: 21
assignment_statement (45)
    on left: 31, on right: 22
num_exp (46)
    on left: 32 33, on right: 31 33 37 44 48 49
exp (47)
    on left: 34 35 36 37 38, on right: 32 33
literal (48)
    on left: 39 40, on right: 16 18 28 34
function_call (49)
    on left: 42, on right: 36
$@5 (50)
    on left: 41, on right: 42
argument (51)
    on left: 43 44, on right: 42
if_statement (52)
    on left: 45 46, on right: 23
if_part (53)
    on left: 47, on right: 45 46
rel_exp (54)
    on left: 48, on right: 47 51
return_statement (55)
    on left: 49 50, on right: 24
select_statement (56)
    on left: 51, on right: 25
arg_select (57)
    on left: 52 53, on right: 51 53


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

   10 body: _LBRACKET . $@2 variable_list statement_list $@3 _RBRACKET

    $default  reduce using rule 8 ($@2)

    $@2  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

   10 body: _LBRACKET $@2 . variable_list statement_list $@3 _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 17


State 17

   10 body: _LBRACKET $@2 variable_list . statement_list $@3 _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 18

    $default  reduce using rule 19 (statement_list)

    variable        go to state 19
    statement_list  go to state 20


State 18

   14 variable: _TYPE . $@4 var_poss _SEMICOLON

    $default  reduce using rule 13 ($@4)

    $@4  go to state 21


State 19

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 20

   10 body: _LBRACKET $@2 variable_list statement_list . $@3 _RBRACKET
   20 statement_list: statement_list . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _SELECT    shift, and go to state 26
    _PARA      shift, and go to state 27

    $default  reduce using rule 9 ($@3)

    $@3                   go to state 28
    statement             go to state 29
    para_statement        go to state 30
    inc_statement         go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35
    return_statement      go to state 36
    select_statement      go to state 37


State 21

   14 variable: _TYPE $@4 . var_poss _SEMICOLON

    _ID  shift, and go to state 38

    var_poss  go to state 39


State 22

   47 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 40


State 23

   49 return_statement: _RETURN . num_exp _SEMICOLON
   50                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44
    _SEMICOLON    shift, and go to state 45

    num_exp        go to state 46
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 24

   29 inc_statement: _ID . _INC_OP _SEMICOLON
   31 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 50
    _INC_OP  shift, and go to state 51


State 25

   30 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 19 (statement_list)

    statement_list  go to state 52


State 26

   51 select_statement: _SELECT . arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 53

    arg_select  go to state 54


State 27

   28 para_statement: _PARA . _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

    _LPAREN  shift, and go to state 55


State 28

   10 body: _LBRACKET $@2 variable_list statement_list $@3 . _RBRACKET

    _RBRACKET  shift, and go to state 56


State 29

   20 statement_list: statement_list statement .

    $default  reduce using rule 20 (statement_list)


State 30

   27 statement: para_statement .

    $default  reduce using rule 27 (statement)


State 31

   26 statement: inc_statement .

    $default  reduce using rule 26 (statement)


State 32

   21 statement: compound_statement .

    $default  reduce using rule 21 (statement)


State 33

   22 statement: assignment_statement .

    $default  reduce using rule 22 (statement)


State 34

   23 statement: if_statement .

    $default  reduce using rule 23 (statement)


State 35

   45 if_statement: if_part .
   46             | if_part . _ELSE statement

    _ELSE  shift, and go to state 57

    $default  reduce using rule 45 (if_statement)


State 36

   24 statement: return_statement .

    $default  reduce using rule 24 (statement)


State 37

   25 statement: select_statement .

    $default  reduce using rule 25 (statement)


State 38

   15 var_poss: _ID .
   16         | _ID . _ASSIGN literal

    _ASSIGN  shift, and go to state 58

    $default  reduce using rule 15 (var_poss)


State 39

   14 variable: _TYPE $@4 var_poss . _SEMICOLON
   17 var_poss: var_poss . _COMMA _ID
   18         | var_poss . _COMMA _ID _ASSIGN literal

    _SEMICOLON  shift, and go to state 59
    _COMMA      shift, and go to state 60


State 40

   47 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 61
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49
    rel_exp        go to state 62


State 41

   35 exp: _ID .
   38    | _ID . _INC_OP
   42 function_call: _ID . $@5 _LPAREN argument _RPAREN

    _INC_OP  shift, and go to state 63

    _LPAREN   reduce using rule 41 ($@5)
    $default  reduce using rule 35 (exp)

    $@5  go to state 64


State 42

   39 literal: _INT_NUMBER .

    $default  reduce using rule 39 (literal)


State 43

   40 literal: _UINT_NUMBER .

    $default  reduce using rule 40 (literal)


State 44

   37 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 65
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 45

   50 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 50 (return_statement)


State 46

   33 num_exp: num_exp . _AROP exp
   49 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 66
    _AROP       shift, and go to state 67


State 47

   32 num_exp: exp .

    $default  reduce using rule 32 (num_exp)


State 48

   34 exp: literal .

    $default  reduce using rule 34 (exp)


State 49

   36 exp: function_call .

    $default  reduce using rule 36 (exp)


State 50

   31 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 68
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 51

   29 inc_statement: _ID _INC_OP . _SEMICOLON

    _SEMICOLON  shift, and go to state 69


State 52

   20 statement_list: statement_list . statement
   30 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _RBRACKET  shift, and go to state 70
    _SELECT    shift, and go to state 26
    _PARA      shift, and go to state 27

    statement             go to state 29
    para_statement        go to state 30
    inc_statement         go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35
    return_statement      go to state 36
    select_statement      go to state 37


State 53

   52 arg_select: _ID .

    $default  reduce using rule 52 (arg_select)


State 54

   51 select_statement: _SELECT arg_select . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON
   53 arg_select: arg_select . _COMMA _ID

    _FROM   shift, and go to state 71
    _COMMA  shift, and go to state 72


State 55

   28 para_statement: _PARA _LPAREN . _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

    _ID  shift, and go to state 73


State 56

   10 body: _LBRACKET $@2 variable_list statement_list $@3 _RBRACKET .

    $default  reduce using rule 10 (body)


State 57

   46 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _SELECT    shift, and go to state 26
    _PARA      shift, and go to state 27

    statement             go to state 74
    para_statement        go to state 30
    inc_statement         go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35
    return_statement      go to state 36
    select_statement      go to state 37


State 58

   16 var_poss: _ID _ASSIGN . literal

    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43

    literal  go to state 75


State 59

   14 variable: _TYPE $@4 var_poss _SEMICOLON .

    $default  reduce using rule 14 (variable)


State 60

   17 var_poss: var_poss _COMMA . _ID
   18         | var_poss _COMMA . _ID _ASSIGN literal

    _ID  shift, and go to state 76


State 61

   33 num_exp: num_exp . _AROP exp
   48 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 67
    _RELOP  shift, and go to state 77


State 62

   47 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 78


State 63

   38 exp: _ID _INC_OP .

    $default  reduce using rule 38 (exp)


State 64

   42 function_call: _ID $@5 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 79


State 65

   33 num_exp: num_exp . _AROP exp
   37 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 80
    _AROP    shift, and go to state 67


State 66

   49 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 49 (return_statement)


State 67

   33 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    exp            go to state 81
    literal        go to state 48
    function_call  go to state 49


State 68

   31 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   33 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 82
    _AROP       shift, and go to state 67


State 69

   29 inc_statement: _ID _INC_OP _SEMICOLON .

    $default  reduce using rule 29 (inc_statement)


State 70

   30 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 30 (compound_statement)


State 71

   51 select_statement: _SELECT arg_select _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 83


State 72

   53 arg_select: arg_select _COMMA . _ID

    _ID  shift, and go to state 84


State 73

   28 para_statement: _PARA _LPAREN _ID . _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

    _ASSIGN  shift, and go to state 85


State 74

   46 if_statement: if_part _ELSE statement .

    $default  reduce using rule 46 (if_statement)


State 75

   16 var_poss: _ID _ASSIGN literal .

    $default  reduce using rule 16 (var_poss)


State 76

   17 var_poss: var_poss _COMMA _ID .
   18         | var_poss _COMMA _ID . _ASSIGN literal

    _ASSIGN  shift, and go to state 86

    $default  reduce using rule 17 (var_poss)


State 77

   48 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 87
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49


State 78

   47 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _SELECT    shift, and go to state 26
    _PARA      shift, and go to state 27

    statement             go to state 88
    para_statement        go to state 30
    inc_statement         go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35
    return_statement      go to state 36
    select_statement      go to state 37


State 79

   42 function_call: _ID $@5 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    $default  reduce using rule 43 (argument)

    num_exp        go to state 89
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49
    argument       go to state 90


State 80

   37 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 37 (exp)


State 81

   33 num_exp: num_exp _AROP exp .

    $default  reduce using rule 33 (num_exp)


State 82

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 31 (assignment_statement)


State 83

   51 select_statement: _SELECT arg_select _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 91


State 84

   53 arg_select: arg_select _COMMA _ID .

    $default  reduce using rule 53 (arg_select)


State 85

   28 para_statement: _PARA _LPAREN _ID _ASSIGN . literal _COLON literal _COLON _PASO literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43

    literal  go to state 92


State 86

   18 var_poss: var_poss _COMMA _ID _ASSIGN . literal

    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43

    literal  go to state 93


State 87

   33 num_exp: num_exp . _AROP exp
   48 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 67

    $default  reduce using rule 48 (rel_exp)


State 88

   47 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 47 (if_part)


State 89

   33 num_exp: num_exp . _AROP exp
   44 argument: num_exp .

    _AROP  shift, and go to state 67

    $default  reduce using rule 44 (argument)


State 90

   42 function_call: _ID $@5 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 94


State 91

   51 select_statement: _SELECT arg_select _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 95


State 92

   28 para_statement: _PARA _LPAREN _ID _ASSIGN literal . _COLON literal _COLON _PASO literal _RPAREN statement

    _COLON  shift, and go to state 96


State 93

   18 var_poss: var_poss _COMMA _ID _ASSIGN literal .

    $default  reduce using rule 18 (var_poss)


State 94

   42 function_call: _ID $@5 _LPAREN argument _RPAREN .

    $default  reduce using rule 42 (function_call)


State 95

   51 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 61
    exp            go to state 47
    literal        go to state 48
    function_call  go to state 49
    rel_exp        go to state 97


State 96

   28 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON . literal _COLON _PASO literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43

    literal  go to state 98


State 97

   51 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 99


State 98

   28 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal . _COLON _PASO literal _RPAREN statement

    _COLON  shift, and go to state 100


State 99

   51 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 101


State 100

   28 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON . _PASO literal _RPAREN statement

    _PASO  shift, and go to state 102


State 101

   51 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 51 (select_statement)


State 102

   28 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO . literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43

    literal  go to state 103


State 103

   28 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal . _RPAREN statement

    _RPAREN  shift, and go to state 104


State 104

   28 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN . statement

    _IF        shift, and go to state 22
    _RETURN    shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _SELECT    shift, and go to state 26
    _PARA      shift, and go to state 27

    statement             go to state 105
    para_statement        go to state 30
    inc_statement         go to state 31
    compound_statement    go to state 32
    assignment_statement  go to state 33
    if_statement          go to state 34
    if_part               go to state 35
    return_statement      go to state 36
    select_statement      go to state 37


State 105

   28 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement .

    $default  reduce using rule 28 (para_statement)
