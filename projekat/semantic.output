Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN body

    7 parameter: %empty
    8          | _TYPE _ID
    9          | parameter _COMMA _TYPE _ID

   10 $@3: %empty

   11 $@4: %empty

   12 body: _LBRACKET $@3 variable_list statement_list $@4 _RBRACKET

   13 variable_list: %empty
   14              | variable_list variable

   15 $@5: %empty

   16 variable: _TYPE $@5 var_poss _SEMICOLON

   17 var_poss: _ID
   18         | _ID _ASSIGN literal
   19         | var_poss _COMMA _ID
   20         | var_poss _COMMA _ID _ASSIGN literal

   21 statement_list: %empty
   22               | statement_list statement

   23 statement: compound_statement
   24          | assignment_statement
   25          | if_statement
   26          | return_statement
   27          | select_statement
   28          | inc_statement

   29 inc_statement: _ID inc_dec _SEMICOLON
   30              | inc_dec _ID _SEMICOLON

   31 inc_dec: _INC_OP
   32        | _DEC_OP

   33 compound_statement: _LBRACKET statement_list _RBRACKET

   34 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   35 num_exp: exp
   36        | num_exp _AROP exp

   37 exp: literal
   38    | _ID
   39    | function_call
   40    | _LPAREN num_exp _RPAREN
   41    | _ID inc_dec
   42    | inc_dec _ID

   43 literal: _INT_NUMBER
   44        | _UINT_NUMBER

   45 $@6: %empty

   46 $@7: %empty

   47 function_call: _ID $@6 _LPAREN $@7 argument _RPAREN

   48 argument: %empty
   49         | num_exp
   50         | argument _COMMA num_exp

   51 if_statement: if_part
   52             | if_part _ELSE statement

   53 if_part: _IF _LPAREN rel_exp _RPAREN statement

   54 rel_exp: num_exp _RELOP num_exp

   55 return_statement: _RETURN num_exp _SEMICOLON
   56                 | _RETURN _SEMICOLON

   57 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   58 arg_select: _ID
   59           | arg_select _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 6 8 9 16
_IF (259) 53
_ELSE (260) 52
_RETURN (261) 55 56
_ID (262) 6 8 9 17 18 19 20 29 30 34 38 41 42 47 57 58 59
_INT_NUMBER (263) 43
_UINT_NUMBER (264) 44
_LPAREN (265) 6 40 47 53 57
_RPAREN (266) 6 40 47 53 57
_LBRACKET (267) 12 33
_RBRACKET (268) 12 33
_ASSIGN (269) 18 20 34
_SEMICOLON (270) 16 29 30 34 55 56 57
_AROP (271) 36
_RELOP (272) 54
_SELECT (273) 57
_FROM (274) 57
_WHERE (275) 57
_COMMA (276) 9 19 20 50 59
_INC_OP (277) 31
_DEC_OP (278) 32
ONLY_IF (279)


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
program (26)
    on left: 1, on right: 0
function_list (27)
    on left: 2 3, on right: 1 3
function (28)
    on left: 6, on right: 2 3
$@1 (29)
    on left: 4, on right: 6
$@2 (30)
    on left: 5, on right: 6
parameter (31)
    on left: 7 8 9, on right: 6 9
body (32)
    on left: 12, on right: 6
$@3 (33)
    on left: 10, on right: 12
$@4 (34)
    on left: 11, on right: 12
variable_list (35)
    on left: 13 14, on right: 12 14
variable (36)
    on left: 16, on right: 14
$@5 (37)
    on left: 15, on right: 16
var_poss (38)
    on left: 17 18 19 20, on right: 16 19 20
statement_list (39)
    on left: 21 22, on right: 12 22 33
statement (40)
    on left: 23 24 25 26 27 28, on right: 22 52 53
inc_statement (41)
    on left: 29 30, on right: 28
inc_dec (42)
    on left: 31 32, on right: 29 30 41 42
compound_statement (43)
    on left: 33, on right: 23
assignment_statement (44)
    on left: 34, on right: 24
num_exp (45)
    on left: 35 36, on right: 34 36 40 49 50 54 55
exp (46)
    on left: 37 38 39 40 41 42, on right: 35 36
literal (47)
    on left: 43 44, on right: 18 20 37
function_call (48)
    on left: 47, on right: 39
$@6 (49)
    on left: 45, on right: 47
$@7 (50)
    on left: 46, on right: 47
argument (51)
    on left: 48 49 50, on right: 47 50
if_statement (52)
    on left: 51 52, on right: 25
if_part (53)
    on left: 53, on right: 51 52
rel_exp (54)
    on left: 54, on right: 53 57
return_statement (55)
    on left: 55 56, on right: 26
select_statement (56)
    on left: 57, on right: 27
arg_select (57)
    on left: 58 59, on right: 57 59


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    6 function: _TYPE . _ID $@1 _LPAREN $@2 parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: _TYPE _ID . $@1 _LPAREN $@2 parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: _TYPE _ID $@1 . _LPAREN $@2 parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    6 function: _TYPE _ID $@1 _LPAREN . $@2 parameter _RPAREN body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 10


State 10

    6 function: _TYPE _ID $@1 _LPAREN $@2 . parameter _RPAREN body

    _TYPE  shift, and go to state 11

    $default  reduce using rule 7 (parameter)

    parameter  go to state 12


State 11

    8 parameter: _TYPE . _ID

    _ID  shift, and go to state 13


State 12

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter . _RPAREN body
    9 parameter: parameter . _COMMA _TYPE _ID

    _RPAREN  shift, and go to state 14
    _COMMA   shift, and go to state 15


State 13

    8 parameter: _TYPE _ID .

    $default  reduce using rule 8 (parameter)


State 14

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 15

    9 parameter: parameter _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 18


State 16

   12 body: _LBRACKET . $@3 variable_list statement_list $@4 _RBRACKET

    $default  reduce using rule 10 ($@3)

    $@3  go to state 19


State 17

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN body .

    $default  reduce using rule 6 (function)


State 18

    9 parameter: parameter _COMMA _TYPE . _ID

    _ID  shift, and go to state 20


State 19

   12 body: _LBRACKET $@3 . variable_list statement_list $@4 _RBRACKET

    $default  reduce using rule 13 (variable_list)

    variable_list  go to state 21


State 20

    9 parameter: parameter _COMMA _TYPE _ID .

    $default  reduce using rule 9 (parameter)


State 21

   12 body: _LBRACKET $@3 variable_list . statement_list $@4 _RBRACKET
   14 variable_list: variable_list . variable

    _TYPE  shift, and go to state 22

    $default  reduce using rule 21 (statement_list)

    variable        go to state 23
    statement_list  go to state 24


State 22

   16 variable: _TYPE . $@5 var_poss _SEMICOLON

    $default  reduce using rule 15 ($@5)

    $@5  go to state 25


State 23

   14 variable_list: variable_list variable .

    $default  reduce using rule 14 (variable_list)


State 24

   12 body: _LBRACKET $@3 variable_list statement_list . $@4 _RBRACKET
   22 statement_list: statement_list . statement

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _SELECT    shift, and go to state 30
    _INC_OP    shift, and go to state 31
    _DEC_OP    shift, and go to state 32

    $default  reduce using rule 11 ($@4)

    $@4                   go to state 33
    statement             go to state 34
    inc_statement         go to state 35
    inc_dec               go to state 36
    compound_statement    go to state 37
    assignment_statement  go to state 38
    if_statement          go to state 39
    if_part               go to state 40
    return_statement      go to state 41
    select_statement      go to state 42


State 25

   16 variable: _TYPE $@5 . var_poss _SEMICOLON

    _ID  shift, and go to state 43

    var_poss  go to state 44


State 26

   53 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 45


State 27

   55 return_statement: _RETURN . num_exp _SEMICOLON
   56                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49
    _SEMICOLON    shift, and go to state 50
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 51
    num_exp        go to state 52
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55


State 28

   29 inc_statement: _ID . inc_dec _SEMICOLON
   34 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 56
    _INC_OP  shift, and go to state 31
    _DEC_OP  shift, and go to state 32

    inc_dec  go to state 57


State 29

   33 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 58


State 30

   57 select_statement: _SELECT . arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 59

    arg_select  go to state 60


State 31

   31 inc_dec: _INC_OP .

    $default  reduce using rule 31 (inc_dec)


State 32

   32 inc_dec: _DEC_OP .

    $default  reduce using rule 32 (inc_dec)


State 33

   12 body: _LBRACKET $@3 variable_list statement_list $@4 . _RBRACKET

    _RBRACKET  shift, and go to state 61


State 34

   22 statement_list: statement_list statement .

    $default  reduce using rule 22 (statement_list)


State 35

   28 statement: inc_statement .

    $default  reduce using rule 28 (statement)


State 36

   30 inc_statement: inc_dec . _ID _SEMICOLON

    _ID  shift, and go to state 62


State 37

   23 statement: compound_statement .

    $default  reduce using rule 23 (statement)


State 38

   24 statement: assignment_statement .

    $default  reduce using rule 24 (statement)


State 39

   25 statement: if_statement .

    $default  reduce using rule 25 (statement)


State 40

   51 if_statement: if_part .
   52             | if_part . _ELSE statement

    _ELSE  shift, and go to state 63

    $default  reduce using rule 51 (if_statement)


State 41

   26 statement: return_statement .

    $default  reduce using rule 26 (statement)


State 42

   27 statement: select_statement .

    $default  reduce using rule 27 (statement)


State 43

   17 var_poss: _ID .
   18         | _ID . _ASSIGN literal

    _ASSIGN  shift, and go to state 64

    $default  reduce using rule 17 (var_poss)


State 44

   16 variable: _TYPE $@5 var_poss . _SEMICOLON
   19 var_poss: var_poss . _COMMA _ID
   20         | var_poss . _COMMA _ID _ASSIGN literal

    _SEMICOLON  shift, and go to state 65
    _COMMA      shift, and go to state 66


State 45

   53 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 51
    num_exp        go to state 67
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55
    rel_exp        go to state 68


State 46

   38 exp: _ID .
   41    | _ID . inc_dec
   47 function_call: _ID . $@6 _LPAREN $@7 argument _RPAREN

    _INC_OP  shift, and go to state 31
    _DEC_OP  shift, and go to state 32

    _LPAREN   reduce using rule 45 ($@6)
    $default  reduce using rule 38 (exp)

    inc_dec  go to state 69
    $@6      go to state 70


State 47

   43 literal: _INT_NUMBER .

    $default  reduce using rule 43 (literal)


State 48

   44 literal: _UINT_NUMBER .

    $default  reduce using rule 44 (literal)


State 49

   40 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 51
    num_exp        go to state 71
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55


State 50

   56 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 56 (return_statement)


State 51

   42 exp: inc_dec . _ID

    _ID  shift, and go to state 72


State 52

   36 num_exp: num_exp . _AROP exp
   55 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 73
    _AROP       shift, and go to state 74


State 53

   35 num_exp: exp .

    $default  reduce using rule 35 (num_exp)


State 54

   37 exp: literal .

    $default  reduce using rule 37 (exp)


State 55

   39 exp: function_call .

    $default  reduce using rule 39 (exp)


State 56

   34 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 51
    num_exp        go to state 75
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55


State 57

   29 inc_statement: _ID inc_dec . _SEMICOLON

    _SEMICOLON  shift, and go to state 76


State 58

   22 statement_list: statement_list . statement
   33 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _RBRACKET  shift, and go to state 77
    _SELECT    shift, and go to state 30
    _INC_OP    shift, and go to state 31
    _DEC_OP    shift, and go to state 32

    statement             go to state 34
    inc_statement         go to state 35
    inc_dec               go to state 36
    compound_statement    go to state 37
    assignment_statement  go to state 38
    if_statement          go to state 39
    if_part               go to state 40
    return_statement      go to state 41
    select_statement      go to state 42


State 59

   58 arg_select: _ID .

    $default  reduce using rule 58 (arg_select)


State 60

   57 select_statement: _SELECT arg_select . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON
   59 arg_select: arg_select . _COMMA _ID

    _FROM   shift, and go to state 78
    _COMMA  shift, and go to state 79


State 61

   12 body: _LBRACKET $@3 variable_list statement_list $@4 _RBRACKET .

    $default  reduce using rule 12 (body)


State 62

   30 inc_statement: inc_dec _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 80


State 63

   52 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _SELECT    shift, and go to state 30
    _INC_OP    shift, and go to state 31
    _DEC_OP    shift, and go to state 32

    statement             go to state 81
    inc_statement         go to state 35
    inc_dec               go to state 36
    compound_statement    go to state 37
    assignment_statement  go to state 38
    if_statement          go to state 39
    if_part               go to state 40
    return_statement      go to state 41
    select_statement      go to state 42


State 64

   18 var_poss: _ID _ASSIGN . literal

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal  go to state 82


State 65

   16 variable: _TYPE $@5 var_poss _SEMICOLON .

    $default  reduce using rule 16 (variable)


State 66

   19 var_poss: var_poss _COMMA . _ID
   20         | var_poss _COMMA . _ID _ASSIGN literal

    _ID  shift, and go to state 83


State 67

   36 num_exp: num_exp . _AROP exp
   54 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 74
    _RELOP  shift, and go to state 84


State 68

   53 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 85


State 69

   41 exp: _ID inc_dec .

    $default  reduce using rule 41 (exp)


State 70

   47 function_call: _ID $@6 . _LPAREN $@7 argument _RPAREN

    _LPAREN  shift, and go to state 86


State 71

   36 num_exp: num_exp . _AROP exp
   40 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 87
    _AROP    shift, and go to state 74


State 72

   42 exp: inc_dec _ID .

    $default  reduce using rule 42 (exp)


State 73

   55 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 55 (return_statement)


State 74

   36 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 51
    exp            go to state 88
    literal        go to state 54
    function_call  go to state 55


State 75

   34 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   36 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 89
    _AROP       shift, and go to state 74


State 76

   29 inc_statement: _ID inc_dec _SEMICOLON .

    $default  reduce using rule 29 (inc_statement)


State 77

   33 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 33 (compound_statement)


State 78

   57 select_statement: _SELECT arg_select _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 90


State 79

   59 arg_select: arg_select _COMMA . _ID

    _ID  shift, and go to state 91


State 80

   30 inc_statement: inc_dec _ID _SEMICOLON .

    $default  reduce using rule 30 (inc_statement)


State 81

   52 if_statement: if_part _ELSE statement .

    $default  reduce using rule 52 (if_statement)


State 82

   18 var_poss: _ID _ASSIGN literal .

    $default  reduce using rule 18 (var_poss)


State 83

   19 var_poss: var_poss _COMMA _ID .
   20         | var_poss _COMMA _ID . _ASSIGN literal

    _ASSIGN  shift, and go to state 92

    $default  reduce using rule 19 (var_poss)


State 84

   54 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 51
    num_exp        go to state 93
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55


State 85

   53 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 26
    _RETURN    shift, and go to state 27
    _ID        shift, and go to state 28
    _LBRACKET  shift, and go to state 29
    _SELECT    shift, and go to state 30
    _INC_OP    shift, and go to state 31
    _DEC_OP    shift, and go to state 32

    statement             go to state 94
    inc_statement         go to state 35
    inc_dec               go to state 36
    compound_statement    go to state 37
    assignment_statement  go to state 38
    if_statement          go to state 39
    if_part               go to state 40
    return_statement      go to state 41
    select_statement      go to state 42


State 86

   47 function_call: _ID $@6 _LPAREN . $@7 argument _RPAREN

    $default  reduce using rule 46 ($@7)

    $@7  go to state 95


State 87

   40 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 40 (exp)


State 88

   36 num_exp: num_exp _AROP exp .

    $default  reduce using rule 36 (num_exp)


State 89

   34 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 34 (assignment_statement)


State 90

   57 select_statement: _SELECT arg_select _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 96


State 91

   59 arg_select: arg_select _COMMA _ID .

    $default  reduce using rule 59 (arg_select)


State 92

   20 var_poss: var_poss _COMMA _ID _ASSIGN . literal

    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48

    literal  go to state 97


State 93

   36 num_exp: num_exp . _AROP exp
   54 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 74

    $default  reduce using rule 54 (rel_exp)


State 94

   53 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 53 (if_part)


State 95

   47 function_call: _ID $@6 _LPAREN $@7 . argument _RPAREN

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    $default  reduce using rule 48 (argument)

    inc_dec        go to state 51
    num_exp        go to state 98
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55
    argument       go to state 99


State 96

   57 select_statement: _SELECT arg_select _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 100


State 97

   20 var_poss: var_poss _COMMA _ID _ASSIGN literal .

    $default  reduce using rule 20 (var_poss)


State 98

   36 num_exp: num_exp . _AROP exp
   49 argument: num_exp .

    _AROP  shift, and go to state 74

    $default  reduce using rule 49 (argument)


State 99

   47 function_call: _ID $@6 _LPAREN $@7 argument . _RPAREN
   50 argument: argument . _COMMA num_exp

    _RPAREN  shift, and go to state 101
    _COMMA   shift, and go to state 102


State 100

   57 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 51
    num_exp        go to state 67
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55
    rel_exp        go to state 103


State 101

   47 function_call: _ID $@6 _LPAREN $@7 argument _RPAREN .

    $default  reduce using rule 47 (function_call)


State 102

   50 argument: argument _COMMA . num_exp

    _ID           shift, and go to state 46
    _INT_NUMBER   shift, and go to state 47
    _UINT_NUMBER  shift, and go to state 48
    _LPAREN       shift, and go to state 49
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 51
    num_exp        go to state 104
    exp            go to state 53
    literal        go to state 54
    function_call  go to state 55


State 103

   57 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 105


State 104

   36 num_exp: num_exp . _AROP exp
   50 argument: argument _COMMA num_exp .

    _AROP  shift, and go to state 74

    $default  reduce using rule 50 (argument)


State 105

   57 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 106


State 106

   57 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 57 (select_statement)
