Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN body

    7 parameter: %empty
    8          | _TYPE _ID
    9          | parameter _COMMA _TYPE _ID

   10 body: _LBRACKET variable_list statement_list _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 $@3: %empty

   14 variable: _TYPE $@3 var_poss _SEMICOLON

   15 var_poss: _ID
   16         | var_poss _COMMA _ID

   17 statement_list: %empty
   18               | statement_list statement

   19 statement: compound_statement
   20          | assignment_statement
   21          | if_statement
   22          | return_statement
   23          | select_statement
   24          | inc_statement

   25 inc_statement: _ID inc_dec _SEMICOLON
   26              | inc_dec _ID _SEMICOLON

   27 inc_dec: _INC_OP
   28        | _DEC_OP

   29 compound_statement: _LBRACKET statement_list _RBRACKET

   30 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   31 num_exp: exp
   32        | num_exp _AROP exp

   33 exp: literal
   34    | _ID
   35    | function_call
   36    | _LPAREN num_exp _RPAREN
   37    | _ID inc_dec
   38    | inc_dec _ID

   39 literal: _INT_NUMBER
   40        | _UINT_NUMBER

   41 $@4: %empty

   42 $@5: %empty

   43 function_call: _ID $@4 _LPAREN $@5 argument _RPAREN

   44 argument: %empty
   45         | num_exp
   46         | argument _COMMA num_exp

   47 if_statement: if_part
   48             | if_part _ELSE statement

   49 if_part: _IF _LPAREN rel_exp _RPAREN statement

   50 rel_exp: num_exp _RELOP num_exp

   51 return_statement: _RETURN num_exp _SEMICOLON

   52 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   53 arg_select: _ID
   54           | arg_select _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 6 8 9 14
_IF (259) 49
_ELSE (260) 48
_RETURN (261) 51
_ID (262) 6 8 9 15 16 25 26 30 34 37 38 43 52 53 54
_INT_NUMBER (263) 39
_UINT_NUMBER (264) 40
_LPAREN (265) 6 36 43 49 52
_RPAREN (266) 6 36 43 49 52
_LBRACKET (267) 10 29
_RBRACKET (268) 10 29
_ASSIGN (269) 30
_SEMICOLON (270) 14 25 26 30 51 52
_AROP (271) 32
_RELOP (272) 50
_SELECT (273) 52
_FROM (274) 52
_WHERE (275) 52
_COMMA (276) 9 16 46 54
_INC_OP (277) 27
_DEC_OP (278) 28
ONLY_IF (279)


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
program (26)
    on left: 1, on right: 0
function_list (27)
    on left: 2 3, on right: 1 3
function (28)
    on left: 6, on right: 2 3
$@1 (29)
    on left: 4, on right: 6
$@2 (30)
    on left: 5, on right: 6
parameter (31)
    on left: 7 8 9, on right: 6 9
body (32)
    on left: 10, on right: 6
variable_list (33)
    on left: 11 12, on right: 10 12
variable (34)
    on left: 14, on right: 12
$@3 (35)
    on left: 13, on right: 14
var_poss (36)
    on left: 15 16, on right: 14 16
statement_list (37)
    on left: 17 18, on right: 10 18 29
statement (38)
    on left: 19 20 21 22 23 24, on right: 18 48 49
inc_statement (39)
    on left: 25 26, on right: 24
inc_dec (40)
    on left: 27 28, on right: 25 26 37 38
compound_statement (41)
    on left: 29, on right: 19
assignment_statement (42)
    on left: 30, on right: 20
num_exp (43)
    on left: 31 32, on right: 30 32 36 45 46 50 51
exp (44)
    on left: 33 34 35 36 37 38, on right: 31 32
literal (45)
    on left: 39 40, on right: 33
function_call (46)
    on left: 43, on right: 35
$@4 (47)
    on left: 41, on right: 43
$@5 (48)
    on left: 42, on right: 43
argument (49)
    on left: 44 45 46, on right: 43 46
if_statement (50)
    on left: 47 48, on right: 21
if_part (51)
    on left: 49, on right: 47 48
rel_exp (52)
    on left: 50, on right: 49 52
return_statement (53)
    on left: 51, on right: 22
select_statement (54)
    on left: 52, on right: 23
arg_select (55)
    on left: 53 54, on right: 52 54


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    6 function: _TYPE . _ID $@1 _LPAREN $@2 parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: _TYPE _ID . $@1 _LPAREN $@2 parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: _TYPE _ID $@1 . _LPAREN $@2 parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    6 function: _TYPE _ID $@1 _LPAREN . $@2 parameter _RPAREN body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 10


State 10

    6 function: _TYPE _ID $@1 _LPAREN $@2 . parameter _RPAREN body

    _TYPE  shift, and go to state 11

    $default  reduce using rule 7 (parameter)

    parameter  go to state 12


State 11

    8 parameter: _TYPE . _ID

    _ID  shift, and go to state 13


State 12

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter . _RPAREN body
    9 parameter: parameter . _COMMA _TYPE _ID

    _RPAREN  shift, and go to state 14
    _COMMA   shift, and go to state 15


State 13

    8 parameter: _TYPE _ID .

    $default  reduce using rule 8 (parameter)


State 14

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 15

    9 parameter: parameter _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 18


State 16

   10 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 19


State 17

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN body .

    $default  reduce using rule 6 (function)


State 18

    9 parameter: parameter _COMMA _TYPE . _ID

    _ID  shift, and go to state 20


State 19

   10 body: _LBRACKET variable_list . statement_list _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 21

    $default  reduce using rule 17 (statement_list)

    variable        go to state 22
    statement_list  go to state 23


State 20

    9 parameter: parameter _COMMA _TYPE _ID .

    $default  reduce using rule 9 (parameter)


State 21

   14 variable: _TYPE . $@3 var_poss _SEMICOLON

    $default  reduce using rule 13 ($@3)

    $@3  go to state 24


State 22

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 23

   10 body: _LBRACKET variable_list statement_list . _RBRACKET
   18 statement_list: statement_list . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _RBRACKET  shift, and go to state 29
    _SELECT    shift, and go to state 30
    _INC_OP    shift, and go to state 31
    _DEC_OP    shift, and go to state 32

    statement             go to state 33
    inc_statement         go to state 34
    inc_dec               go to state 35
    compound_statement    go to state 36
    assignment_statement  go to state 37
    if_statement          go to state 38
    if_part               go to state 39
    return_statement      go to state 40
    select_statement      go to state 41


State 24

   14 variable: _TYPE $@3 . var_poss _SEMICOLON

    _ID  shift, and go to state 42

    var_poss  go to state 43


State 25

   49 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 44


State 26

   51 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 49
    num_exp        go to state 50
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 27

   25 inc_statement: _ID . inc_dec _SEMICOLON
   30 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 54
    _INC_OP  shift, and go to state 31
    _DEC_OP  shift, and go to state 32

    inc_dec  go to state 55


State 28

   29 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 17 (statement_list)

    statement_list  go to state 56


State 29

   10 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 10 (body)


State 30

   52 select_statement: _SELECT . arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 57

    arg_select  go to state 58


State 31

   27 inc_dec: _INC_OP .

    $default  reduce using rule 27 (inc_dec)


State 32

   28 inc_dec: _DEC_OP .

    $default  reduce using rule 28 (inc_dec)


State 33

   18 statement_list: statement_list statement .

    $default  reduce using rule 18 (statement_list)


State 34

   24 statement: inc_statement .

    $default  reduce using rule 24 (statement)


State 35

   26 inc_statement: inc_dec . _ID _SEMICOLON

    _ID  shift, and go to state 59


State 36

   19 statement: compound_statement .

    $default  reduce using rule 19 (statement)


State 37

   20 statement: assignment_statement .

    $default  reduce using rule 20 (statement)


State 38

   21 statement: if_statement .

    $default  reduce using rule 21 (statement)


State 39

   47 if_statement: if_part .
   48             | if_part . _ELSE statement

    _ELSE  shift, and go to state 60

    $default  reduce using rule 47 (if_statement)


State 40

   22 statement: return_statement .

    $default  reduce using rule 22 (statement)


State 41

   23 statement: select_statement .

    $default  reduce using rule 23 (statement)


State 42

   15 var_poss: _ID .

    $default  reduce using rule 15 (var_poss)


State 43

   14 variable: _TYPE $@3 var_poss . _SEMICOLON
   16 var_poss: var_poss . _COMMA _ID

    _SEMICOLON  shift, and go to state 61
    _COMMA      shift, and go to state 62


State 44

   49 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 49
    num_exp        go to state 63
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    rel_exp        go to state 64


State 45

   34 exp: _ID .
   37    | _ID . inc_dec
   43 function_call: _ID . $@4 _LPAREN $@5 argument _RPAREN

    _INC_OP  shift, and go to state 31
    _DEC_OP  shift, and go to state 32

    _LPAREN   reduce using rule 41 ($@4)
    $default  reduce using rule 34 (exp)

    inc_dec  go to state 65
    $@4      go to state 66


State 46

   39 literal: _INT_NUMBER .

    $default  reduce using rule 39 (literal)


State 47

   40 literal: _UINT_NUMBER .

    $default  reduce using rule 40 (literal)


State 48

   36 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 49
    num_exp        go to state 67
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 49

   38 exp: inc_dec . _ID

    _ID  shift, and go to state 68


State 50

   32 num_exp: num_exp . _AROP exp
   51 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 69
    _AROP       shift, and go to state 70


State 51

   31 num_exp: exp .

    $default  reduce using rule 31 (num_exp)


State 52

   33 exp: literal .

    $default  reduce using rule 33 (exp)


State 53

   35 exp: function_call .

    $default  reduce using rule 35 (exp)


State 54

   30 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 49
    num_exp        go to state 71
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 55

   25 inc_statement: _ID inc_dec . _SEMICOLON

    _SEMICOLON  shift, and go to state 72


State 56

   18 statement_list: statement_list . statement
   29 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _RBRACKET  shift, and go to state 73
    _SELECT    shift, and go to state 30
    _INC_OP    shift, and go to state 31
    _DEC_OP    shift, and go to state 32

    statement             go to state 33
    inc_statement         go to state 34
    inc_dec               go to state 35
    compound_statement    go to state 36
    assignment_statement  go to state 37
    if_statement          go to state 38
    if_part               go to state 39
    return_statement      go to state 40
    select_statement      go to state 41


State 57

   53 arg_select: _ID .

    $default  reduce using rule 53 (arg_select)


State 58

   52 select_statement: _SELECT arg_select . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON
   54 arg_select: arg_select . _COMMA _ID

    _FROM   shift, and go to state 74
    _COMMA  shift, and go to state 75


State 59

   26 inc_statement: inc_dec _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 76


State 60

   48 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _SELECT    shift, and go to state 30
    _INC_OP    shift, and go to state 31
    _DEC_OP    shift, and go to state 32

    statement             go to state 77
    inc_statement         go to state 34
    inc_dec               go to state 35
    compound_statement    go to state 36
    assignment_statement  go to state 37
    if_statement          go to state 38
    if_part               go to state 39
    return_statement      go to state 40
    select_statement      go to state 41


State 61

   14 variable: _TYPE $@3 var_poss _SEMICOLON .

    $default  reduce using rule 14 (variable)


State 62

   16 var_poss: var_poss _COMMA . _ID

    _ID  shift, and go to state 78


State 63

   32 num_exp: num_exp . _AROP exp
   50 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 70
    _RELOP  shift, and go to state 79


State 64

   49 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 80


State 65

   37 exp: _ID inc_dec .

    $default  reduce using rule 37 (exp)


State 66

   43 function_call: _ID $@4 . _LPAREN $@5 argument _RPAREN

    _LPAREN  shift, and go to state 81


State 67

   32 num_exp: num_exp . _AROP exp
   36 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 82
    _AROP    shift, and go to state 70


State 68

   38 exp: inc_dec _ID .

    $default  reduce using rule 38 (exp)


State 69

   51 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 51 (return_statement)


State 70

   32 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 49
    exp            go to state 83
    literal        go to state 52
    function_call  go to state 53


State 71

   30 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   32 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 84
    _AROP       shift, and go to state 70


State 72

   25 inc_statement: _ID inc_dec _SEMICOLON .

    $default  reduce using rule 25 (inc_statement)


State 73

   29 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 29 (compound_statement)


State 74

   52 select_statement: _SELECT arg_select _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 85


State 75

   54 arg_select: arg_select _COMMA . _ID

    _ID  shift, and go to state 86


State 76

   26 inc_statement: inc_dec _ID _SEMICOLON .

    $default  reduce using rule 26 (inc_statement)


State 77

   48 if_statement: if_part _ELSE statement .

    $default  reduce using rule 48 (if_statement)


State 78

   16 var_poss: var_poss _COMMA _ID .

    $default  reduce using rule 16 (var_poss)


State 79

   50 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 49
    num_exp        go to state 87
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 80

   49 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 25
    _RETURN    shift, and go to state 26
    _ID        shift, and go to state 27
    _LBRACKET  shift, and go to state 28
    _SELECT    shift, and go to state 30
    _INC_OP    shift, and go to state 31
    _DEC_OP    shift, and go to state 32

    statement             go to state 88
    inc_statement         go to state 34
    inc_dec               go to state 35
    compound_statement    go to state 36
    assignment_statement  go to state 37
    if_statement          go to state 38
    if_part               go to state 39
    return_statement      go to state 40
    select_statement      go to state 41


State 81

   43 function_call: _ID $@4 _LPAREN . $@5 argument _RPAREN

    $default  reduce using rule 42 ($@5)

    $@5  go to state 89


State 82

   36 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 36 (exp)


State 83

   32 num_exp: num_exp _AROP exp .

    $default  reduce using rule 32 (num_exp)


State 84

   30 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 30 (assignment_statement)


State 85

   52 select_statement: _SELECT arg_select _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 90


State 86

   54 arg_select: arg_select _COMMA _ID .

    $default  reduce using rule 54 (arg_select)


State 87

   32 num_exp: num_exp . _AROP exp
   50 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 70

    $default  reduce using rule 50 (rel_exp)


State 88

   49 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 49 (if_part)


State 89

   43 function_call: _ID $@4 _LPAREN $@5 . argument _RPAREN

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    $default  reduce using rule 44 (argument)

    inc_dec        go to state 49
    num_exp        go to state 91
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    argument       go to state 92


State 90

   52 select_statement: _SELECT arg_select _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 93


State 91

   32 num_exp: num_exp . _AROP exp
   45 argument: num_exp .

    _AROP  shift, and go to state 70

    $default  reduce using rule 45 (argument)


State 92

   43 function_call: _ID $@4 _LPAREN $@5 argument . _RPAREN
   46 argument: argument . _COMMA num_exp

    _RPAREN  shift, and go to state 94
    _COMMA   shift, and go to state 95


State 93

   52 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 49
    num_exp        go to state 63
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53
    rel_exp        go to state 96


State 94

   43 function_call: _ID $@4 _LPAREN $@5 argument _RPAREN .

    $default  reduce using rule 43 (function_call)


State 95

   46 argument: argument _COMMA . num_exp

    _ID           shift, and go to state 45
    _INT_NUMBER   shift, and go to state 46
    _UINT_NUMBER  shift, and go to state 47
    _LPAREN       shift, and go to state 48
    _INC_OP       shift, and go to state 31
    _DEC_OP       shift, and go to state 32

    inc_dec        go to state 49
    num_exp        go to state 97
    exp            go to state 51
    literal        go to state 52
    function_call  go to state 53


State 96

   52 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 98


State 97

   32 num_exp: num_exp . _AROP exp
   46 argument: argument _COMMA num_exp .

    _AROP  shift, and go to state 70

    $default  reduce using rule 46 (argument)


State 98

   52 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 99


State 99

   52 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 52 (select_statement)
