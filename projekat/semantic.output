Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN body

    7 parameter: %empty
    8          | _TYPE _ID
    9          | parameter _COMMA _TYPE _ID

   10 $@3: %empty

   11 $@4: %empty

   12 body: _LBRACKET $@3 statement_list $@4 _RBRACKET

   13 $@5: %empty

   14 variable: _TYPE $@5 var_poss _SEMICOLON

   15 var_poss: _ID
   16         | _ID _ASSIGN num_exp
   17         | var_poss _COMMA _ID
   18         | var_poss _COMMA _ID _ASSIGN num_exp

   19 statement_list: %empty
   20               | statement_list statement

   21 statement: compound_statement
   22          | variable
   23          | assignment_statement
   24          | if_statement
   25          | return_statement
   26          | select_statement
   27          | inc_statement
   28          | para_statement
   29          | void_func
   30          | check_exp

   31 $@6: %empty

   32 $@7: %empty

   33 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC _LBRACKET $@7 whenPart otherwise _RBRACKET

   34 otherwise: %empty
   35          | _OTHERWISE _ARROW statement

   36 whenPart: when finish_par
   37         | whenPart when finish_par

   38 finish_par: %empty
   39           | _FINISH _SEMICOLON

   40 when: _WHEN literal _ARROW statement

   41 void_func: function_call _SEMICOLON

   42 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

   43 inc_statement: _ID inc_dec _SEMICOLON
   44              | inc_dec _ID _SEMICOLON

   45 inc_dec: _INC_OP
   46        | _DEC_OP

   47 $@8: %empty

   48 $@9: %empty

   49 compound_statement: _LBRACKET $@8 statement_list $@9 _RBRACKET

   50 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   51 num_exp: exp
   52        | num_exp _AROP exp

   53 exp: literal
   54    | _ID
   55    | function_call
   56    | _LPAREN num_exp _RPAREN
   57    | _ID inc_dec
   58    | inc_dec _ID

   59 literal: _INT_NUMBER
   60        | _UINT_NUMBER

   61 $@10: %empty

   62 $@11: %empty

   63 function_call: _ID $@10 _LPAREN $@11 argument _RPAREN

   64 argument: %empty
   65         | num_exp
   66         | argument _COMMA num_exp

   67 if_statement: if_part
   68             | if_part _ELSE statement

   69 if_part: _IF _LPAREN rel_exp _RPAREN statement

   70 rel_exp: num_exp _RELOP num_exp

   71 return_statement: _RETURN num_exp _SEMICOLON
   72                 | _RETURN _SEMICOLON

   73 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   74 arg_select: _ID
   75           | arg_select _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 6 8 9 14
_IF (259) 69
_ELSE (260) 68
_RETURN (261) 71 72
_ID (262) 6 8 9 15 16 17 18 33 42 43 44 50 54 57 58 63 73 74 75
_INT_NUMBER (263) 59
_UINT_NUMBER (264) 60
_LPAREN (265) 6 42 56 63 69 73
_RPAREN (266) 6 42 56 63 69 73
_LBRACKET (267) 12 33 49
_RBRACKET (268) 12 33 49
_ASSIGN (269) 16 18 42 50
_SEMICOLON (270) 14 39 41 43 44 50 71 72 73
_AROP (271) 52
_RELOP (272) 70
_SELECT (273) 73
_FROM (274) 73
_WHERE (275) 73
_COMMA (276) 9 17 18 66 75
_INC_OP (277) 45
_DEC_OP (278) 46
_PARA (279) 42
_PASO (280) 42
_COLON (281) 42
_CHECK (282) 33
_WHEN (283) 40
_FINISH (284) 39
_LSBRAC (285) 33
_RSBRAC (286) 33
_ARROW (287) 35 40
_OTHERWISE (288) 35
ONLY_IF (289)


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1, on right: 0
function_list (37)
    on left: 2 3, on right: 1 3
function (38)
    on left: 6, on right: 2 3
$@1 (39)
    on left: 4, on right: 6
$@2 (40)
    on left: 5, on right: 6
parameter (41)
    on left: 7 8 9, on right: 6 9
body (42)
    on left: 12, on right: 6
$@3 (43)
    on left: 10, on right: 12
$@4 (44)
    on left: 11, on right: 12
variable (45)
    on left: 14, on right: 22
$@5 (46)
    on left: 13, on right: 14
var_poss (47)
    on left: 15 16 17 18, on right: 14 17 18
statement_list (48)
    on left: 19 20, on right: 12 20 49
statement (49)
    on left: 21 22 23 24 25 26 27 28 29 30, on right: 20 35 40 42 68
    69
check_exp (50)
    on left: 33, on right: 30
$@6 (51)
    on left: 31, on right: 33
$@7 (52)
    on left: 32, on right: 33
otherwise (53)
    on left: 34 35, on right: 33
whenPart (54)
    on left: 36 37, on right: 33 37
finish_par (55)
    on left: 38 39, on right: 36 37
when (56)
    on left: 40, on right: 36 37
void_func (57)
    on left: 41, on right: 29
para_statement (58)
    on left: 42, on right: 28
inc_statement (59)
    on left: 43 44, on right: 27
inc_dec (60)
    on left: 45 46, on right: 43 44 57 58
compound_statement (61)
    on left: 49, on right: 21
$@8 (62)
    on left: 47, on right: 49
$@9 (63)
    on left: 48, on right: 49
assignment_statement (64)
    on left: 50, on right: 23
num_exp (65)
    on left: 51 52, on right: 16 18 50 52 56 65 66 70 71
exp (66)
    on left: 53 54 55 56 57 58, on right: 51 52
literal (67)
    on left: 59 60, on right: 40 42 53
function_call (68)
    on left: 63, on right: 41 55
$@10 (69)
    on left: 61, on right: 63
$@11 (70)
    on left: 62, on right: 63
argument (71)
    on left: 64 65 66, on right: 63 66
if_statement (72)
    on left: 67 68, on right: 24
if_part (73)
    on left: 69, on right: 67 68
rel_exp (74)
    on left: 70, on right: 69 73
return_statement (75)
    on left: 71 72, on right: 25
select_statement (76)
    on left: 73, on right: 26
arg_select (77)
    on left: 74 75, on right: 73 75


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    6 function: _TYPE . _ID $@1 _LPAREN $@2 parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: _TYPE _ID . $@1 _LPAREN $@2 parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: _TYPE _ID $@1 . _LPAREN $@2 parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    6 function: _TYPE _ID $@1 _LPAREN . $@2 parameter _RPAREN body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 10


State 10

    6 function: _TYPE _ID $@1 _LPAREN $@2 . parameter _RPAREN body

    _TYPE  shift, and go to state 11

    $default  reduce using rule 7 (parameter)

    parameter  go to state 12


State 11

    8 parameter: _TYPE . _ID

    _ID  shift, and go to state 13


State 12

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter . _RPAREN body
    9 parameter: parameter . _COMMA _TYPE _ID

    _RPAREN  shift, and go to state 14
    _COMMA   shift, and go to state 15


State 13

    8 parameter: _TYPE _ID .

    $default  reduce using rule 8 (parameter)


State 14

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 15

    9 parameter: parameter _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 18


State 16

   12 body: _LBRACKET . $@3 statement_list $@4 _RBRACKET

    $default  reduce using rule 10 ($@3)

    $@3  go to state 19


State 17

    6 function: _TYPE _ID $@1 _LPAREN $@2 parameter _RPAREN body .

    $default  reduce using rule 6 (function)


State 18

    9 parameter: parameter _COMMA _TYPE . _ID

    _ID  shift, and go to state 20


State 19

   12 body: _LBRACKET $@3 . statement_list $@4 _RBRACKET

    $default  reduce using rule 19 (statement_list)

    statement_list  go to state 21


State 20

    9 parameter: parameter _COMMA _TYPE _ID .

    $default  reduce using rule 9 (parameter)


State 21

   12 body: _LBRACKET $@3 statement_list . $@4 _RBRACKET
   20 statement_list: statement_list . statement

    _TYPE      shift, and go to state 22
    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _SELECT    shift, and go to state 27
    _INC_OP    shift, and go to state 28
    _DEC_OP    shift, and go to state 29
    _PARA      shift, and go to state 30
    _CHECK     shift, and go to state 31

    $default  reduce using rule 11 ($@4)

    $@4                   go to state 32
    variable              go to state 33
    statement             go to state 34
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    inc_dec               go to state 39
    compound_statement    go to state 40
    assignment_statement  go to state 41
    function_call         go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45
    select_statement      go to state 46


State 22

   14 variable: _TYPE . $@5 var_poss _SEMICOLON

    $default  reduce using rule 13 ($@5)

    $@5  go to state 47


State 23

   69 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 48


State 24

   71 return_statement: _RETURN . num_exp _SEMICOLON
   72                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52
    _SEMICOLON    shift, and go to state 53
    _INC_OP       shift, and go to state 28
    _DEC_OP       shift, and go to state 29

    inc_dec        go to state 54
    num_exp        go to state 55
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58


State 25

   43 inc_statement: _ID . inc_dec _SEMICOLON
   50 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   63 function_call: _ID . $@10 _LPAREN $@11 argument _RPAREN

    _ASSIGN  shift, and go to state 59
    _INC_OP  shift, and go to state 28
    _DEC_OP  shift, and go to state 29

    $default  reduce using rule 61 ($@10)

    inc_dec  go to state 60
    $@10     go to state 61


State 26

   49 compound_statement: _LBRACKET . $@8 statement_list $@9 _RBRACKET

    $default  reduce using rule 47 ($@8)

    $@8  go to state 62


State 27

   73 select_statement: _SELECT . arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 63

    arg_select  go to state 64


State 28

   45 inc_dec: _INC_OP .

    $default  reduce using rule 45 (inc_dec)


State 29

   46 inc_dec: _DEC_OP .

    $default  reduce using rule 46 (inc_dec)


State 30

   42 para_statement: _PARA . _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

    _LPAREN  shift, and go to state 65


State 31

   33 check_exp: _CHECK . _LSBRAC _ID $@6 _RSBRAC _LBRACKET $@7 whenPart otherwise _RBRACKET

    _LSBRAC  shift, and go to state 66


State 32

   12 body: _LBRACKET $@3 statement_list $@4 . _RBRACKET

    _RBRACKET  shift, and go to state 67


State 33

   22 statement: variable .

    $default  reduce using rule 22 (statement)


State 34

   20 statement_list: statement_list statement .

    $default  reduce using rule 20 (statement_list)


State 35

   30 statement: check_exp .

    $default  reduce using rule 30 (statement)


State 36

   29 statement: void_func .

    $default  reduce using rule 29 (statement)


State 37

   28 statement: para_statement .

    $default  reduce using rule 28 (statement)


State 38

   27 statement: inc_statement .

    $default  reduce using rule 27 (statement)


State 39

   44 inc_statement: inc_dec . _ID _SEMICOLON

    _ID  shift, and go to state 68


State 40

   21 statement: compound_statement .

    $default  reduce using rule 21 (statement)


State 41

   23 statement: assignment_statement .

    $default  reduce using rule 23 (statement)


State 42

   41 void_func: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 69


State 43

   24 statement: if_statement .

    $default  reduce using rule 24 (statement)


State 44

   67 if_statement: if_part .
   68             | if_part . _ELSE statement

    _ELSE  shift, and go to state 70

    $default  reduce using rule 67 (if_statement)


State 45

   25 statement: return_statement .

    $default  reduce using rule 25 (statement)


State 46

   26 statement: select_statement .

    $default  reduce using rule 26 (statement)


State 47

   14 variable: _TYPE $@5 . var_poss _SEMICOLON

    _ID  shift, and go to state 71

    var_poss  go to state 72


State 48

   69 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52
    _INC_OP       shift, and go to state 28
    _DEC_OP       shift, and go to state 29

    inc_dec        go to state 54
    num_exp        go to state 73
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58
    rel_exp        go to state 74


State 49

   54 exp: _ID .
   57    | _ID . inc_dec
   63 function_call: _ID . $@10 _LPAREN $@11 argument _RPAREN

    _INC_OP  shift, and go to state 28
    _DEC_OP  shift, and go to state 29

    _LPAREN   reduce using rule 61 ($@10)
    $default  reduce using rule 54 (exp)

    inc_dec  go to state 75
    $@10     go to state 61


State 50

   59 literal: _INT_NUMBER .

    $default  reduce using rule 59 (literal)


State 51

   60 literal: _UINT_NUMBER .

    $default  reduce using rule 60 (literal)


State 52

   56 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52
    _INC_OP       shift, and go to state 28
    _DEC_OP       shift, and go to state 29

    inc_dec        go to state 54
    num_exp        go to state 76
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58


State 53

   72 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 72 (return_statement)


State 54

   58 exp: inc_dec . _ID

    _ID  shift, and go to state 77


State 55

   52 num_exp: num_exp . _AROP exp
   71 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 78
    _AROP       shift, and go to state 79


State 56

   51 num_exp: exp .

    $default  reduce using rule 51 (num_exp)


State 57

   53 exp: literal .

    $default  reduce using rule 53 (exp)


State 58

   55 exp: function_call .

    $default  reduce using rule 55 (exp)


State 59

   50 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52
    _INC_OP       shift, and go to state 28
    _DEC_OP       shift, and go to state 29

    inc_dec        go to state 54
    num_exp        go to state 80
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58


State 60

   43 inc_statement: _ID inc_dec . _SEMICOLON

    _SEMICOLON  shift, and go to state 81


State 61

   63 function_call: _ID $@10 . _LPAREN $@11 argument _RPAREN

    _LPAREN  shift, and go to state 82


State 62

   49 compound_statement: _LBRACKET $@8 . statement_list $@9 _RBRACKET

    $default  reduce using rule 19 (statement_list)

    statement_list  go to state 83


State 63

   74 arg_select: _ID .

    $default  reduce using rule 74 (arg_select)


State 64

   73 select_statement: _SELECT arg_select . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON
   75 arg_select: arg_select . _COMMA _ID

    _FROM   shift, and go to state 84
    _COMMA  shift, and go to state 85


State 65

   42 para_statement: _PARA _LPAREN . _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

    _ID  shift, and go to state 86


State 66

   33 check_exp: _CHECK _LSBRAC . _ID $@6 _RSBRAC _LBRACKET $@7 whenPart otherwise _RBRACKET

    _ID  shift, and go to state 87


State 67

   12 body: _LBRACKET $@3 statement_list $@4 _RBRACKET .

    $default  reduce using rule 12 (body)


State 68

   44 inc_statement: inc_dec _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 88


State 69

   41 void_func: function_call _SEMICOLON .

    $default  reduce using rule 41 (void_func)


State 70

   68 if_statement: if_part _ELSE . statement

    _TYPE      shift, and go to state 22
    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _SELECT    shift, and go to state 27
    _INC_OP    shift, and go to state 28
    _DEC_OP    shift, and go to state 29
    _PARA      shift, and go to state 30
    _CHECK     shift, and go to state 31

    variable              go to state 33
    statement             go to state 89
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    inc_dec               go to state 39
    compound_statement    go to state 40
    assignment_statement  go to state 41
    function_call         go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45
    select_statement      go to state 46


State 71

   15 var_poss: _ID .
   16         | _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 90

    $default  reduce using rule 15 (var_poss)


State 72

   14 variable: _TYPE $@5 var_poss . _SEMICOLON
   17 var_poss: var_poss . _COMMA _ID
   18         | var_poss . _COMMA _ID _ASSIGN num_exp

    _SEMICOLON  shift, and go to state 91
    _COMMA      shift, and go to state 92


State 73

   52 num_exp: num_exp . _AROP exp
   70 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 79
    _RELOP  shift, and go to state 93


State 74

   69 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 94


State 75

   57 exp: _ID inc_dec .

    $default  reduce using rule 57 (exp)


State 76

   52 num_exp: num_exp . _AROP exp
   56 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 95
    _AROP    shift, and go to state 79


State 77

   58 exp: inc_dec _ID .

    $default  reduce using rule 58 (exp)


State 78

   71 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 71 (return_statement)


State 79

   52 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52
    _INC_OP       shift, and go to state 28
    _DEC_OP       shift, and go to state 29

    inc_dec        go to state 54
    exp            go to state 96
    literal        go to state 57
    function_call  go to state 58


State 80

   50 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   52 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 97
    _AROP       shift, and go to state 79


State 81

   43 inc_statement: _ID inc_dec _SEMICOLON .

    $default  reduce using rule 43 (inc_statement)


State 82

   63 function_call: _ID $@10 _LPAREN . $@11 argument _RPAREN

    $default  reduce using rule 62 ($@11)

    $@11  go to state 98


State 83

   20 statement_list: statement_list . statement
   49 compound_statement: _LBRACKET $@8 statement_list . $@9 _RBRACKET

    _TYPE      shift, and go to state 22
    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _SELECT    shift, and go to state 27
    _INC_OP    shift, and go to state 28
    _DEC_OP    shift, and go to state 29
    _PARA      shift, and go to state 30
    _CHECK     shift, and go to state 31

    $default  reduce using rule 48 ($@9)

    variable              go to state 33
    statement             go to state 34
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    inc_dec               go to state 39
    compound_statement    go to state 40
    $@9                   go to state 99
    assignment_statement  go to state 41
    function_call         go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45
    select_statement      go to state 46


State 84

   73 select_statement: _SELECT arg_select _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 100


State 85

   75 arg_select: arg_select _COMMA . _ID

    _ID  shift, and go to state 101


State 86

   42 para_statement: _PARA _LPAREN _ID . _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement

    _ASSIGN  shift, and go to state 102


State 87

   33 check_exp: _CHECK _LSBRAC _ID . $@6 _RSBRAC _LBRACKET $@7 whenPart otherwise _RBRACKET

    $default  reduce using rule 31 ($@6)

    $@6  go to state 103


State 88

   44 inc_statement: inc_dec _ID _SEMICOLON .

    $default  reduce using rule 44 (inc_statement)


State 89

   68 if_statement: if_part _ELSE statement .

    $default  reduce using rule 68 (if_statement)


State 90

   16 var_poss: _ID _ASSIGN . num_exp

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52
    _INC_OP       shift, and go to state 28
    _DEC_OP       shift, and go to state 29

    inc_dec        go to state 54
    num_exp        go to state 104
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58


State 91

   14 variable: _TYPE $@5 var_poss _SEMICOLON .

    $default  reduce using rule 14 (variable)


State 92

   17 var_poss: var_poss _COMMA . _ID
   18         | var_poss _COMMA . _ID _ASSIGN num_exp

    _ID  shift, and go to state 105


State 93

   70 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52
    _INC_OP       shift, and go to state 28
    _DEC_OP       shift, and go to state 29

    inc_dec        go to state 54
    num_exp        go to state 106
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58


State 94

   69 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _TYPE      shift, and go to state 22
    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _SELECT    shift, and go to state 27
    _INC_OP    shift, and go to state 28
    _DEC_OP    shift, and go to state 29
    _PARA      shift, and go to state 30
    _CHECK     shift, and go to state 31

    variable              go to state 33
    statement             go to state 107
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    inc_dec               go to state 39
    compound_statement    go to state 40
    assignment_statement  go to state 41
    function_call         go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45
    select_statement      go to state 46


State 95

   56 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 56 (exp)


State 96

   52 num_exp: num_exp _AROP exp .

    $default  reduce using rule 52 (num_exp)


State 97

   50 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 50 (assignment_statement)


State 98

   63 function_call: _ID $@10 _LPAREN $@11 . argument _RPAREN

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52
    _INC_OP       shift, and go to state 28
    _DEC_OP       shift, and go to state 29

    $default  reduce using rule 64 (argument)

    inc_dec        go to state 54
    num_exp        go to state 108
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58
    argument       go to state 109


State 99

   49 compound_statement: _LBRACKET $@8 statement_list $@9 . _RBRACKET

    _RBRACKET  shift, and go to state 110


State 100

   73 select_statement: _SELECT arg_select _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 111


State 101

   75 arg_select: arg_select _COMMA _ID .

    $default  reduce using rule 75 (arg_select)


State 102

   42 para_statement: _PARA _LPAREN _ID _ASSIGN . literal _COLON literal _COLON _PASO literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51

    literal  go to state 112


State 103

   33 check_exp: _CHECK _LSBRAC _ID $@6 . _RSBRAC _LBRACKET $@7 whenPart otherwise _RBRACKET

    _RSBRAC  shift, and go to state 113


State 104

   16 var_poss: _ID _ASSIGN num_exp .
   52 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 79

    $default  reduce using rule 16 (var_poss)


State 105

   17 var_poss: var_poss _COMMA _ID .
   18         | var_poss _COMMA _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 114

    $default  reduce using rule 17 (var_poss)


State 106

   52 num_exp: num_exp . _AROP exp
   70 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 79

    $default  reduce using rule 70 (rel_exp)


State 107

   69 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 69 (if_part)


State 108

   52 num_exp: num_exp . _AROP exp
   65 argument: num_exp .

    _AROP  shift, and go to state 79

    $default  reduce using rule 65 (argument)


State 109

   63 function_call: _ID $@10 _LPAREN $@11 argument . _RPAREN
   66 argument: argument . _COMMA num_exp

    _RPAREN  shift, and go to state 115
    _COMMA   shift, and go to state 116


State 110

   49 compound_statement: _LBRACKET $@8 statement_list $@9 _RBRACKET .

    $default  reduce using rule 49 (compound_statement)


State 111

   73 select_statement: _SELECT arg_select _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 117


State 112

   42 para_statement: _PARA _LPAREN _ID _ASSIGN literal . _COLON literal _COLON _PASO literal _RPAREN statement

    _COLON  shift, and go to state 118


State 113

   33 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC . _LBRACKET $@7 whenPart otherwise _RBRACKET

    _LBRACKET  shift, and go to state 119


State 114

   18 var_poss: var_poss _COMMA _ID _ASSIGN . num_exp

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52
    _INC_OP       shift, and go to state 28
    _DEC_OP       shift, and go to state 29

    inc_dec        go to state 54
    num_exp        go to state 120
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58


State 115

   63 function_call: _ID $@10 _LPAREN $@11 argument _RPAREN .

    $default  reduce using rule 63 (function_call)


State 116

   66 argument: argument _COMMA . num_exp

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52
    _INC_OP       shift, and go to state 28
    _DEC_OP       shift, and go to state 29

    inc_dec        go to state 54
    num_exp        go to state 121
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58


State 117

   73 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 49
    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51
    _LPAREN       shift, and go to state 52
    _INC_OP       shift, and go to state 28
    _DEC_OP       shift, and go to state 29

    inc_dec        go to state 54
    num_exp        go to state 73
    exp            go to state 56
    literal        go to state 57
    function_call  go to state 58
    rel_exp        go to state 122


State 118

   42 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON . literal _COLON _PASO literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51

    literal  go to state 123


State 119

   33 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC _LBRACKET . $@7 whenPart otherwise _RBRACKET

    $default  reduce using rule 32 ($@7)

    $@7  go to state 124


State 120

   18 var_poss: var_poss _COMMA _ID _ASSIGN num_exp .
   52 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 79

    $default  reduce using rule 18 (var_poss)


State 121

   52 num_exp: num_exp . _AROP exp
   66 argument: argument _COMMA num_exp .

    _AROP  shift, and go to state 79

    $default  reduce using rule 66 (argument)


State 122

   73 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 125


State 123

   42 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal . _COLON _PASO literal _RPAREN statement

    _COLON  shift, and go to state 126


State 124

   33 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC _LBRACKET $@7 . whenPart otherwise _RBRACKET

    _WHEN  shift, and go to state 127

    whenPart  go to state 128
    when      go to state 129


State 125

   73 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 130


State 126

   42 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON . _PASO literal _RPAREN statement

    _PASO  shift, and go to state 131


State 127

   40 when: _WHEN . literal _ARROW statement

    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51

    literal  go to state 132


State 128

   33 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC _LBRACKET $@7 whenPart . otherwise _RBRACKET
   37 whenPart: whenPart . when finish_par

    _WHEN       shift, and go to state 127
    _OTHERWISE  shift, and go to state 133

    $default  reduce using rule 34 (otherwise)

    otherwise  go to state 134
    when       go to state 135


State 129

   36 whenPart: when . finish_par

    _FINISH  shift, and go to state 136

    $default  reduce using rule 38 (finish_par)

    finish_par  go to state 137


State 130

   73 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 73 (select_statement)


State 131

   42 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO . literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 50
    _UINT_NUMBER  shift, and go to state 51

    literal  go to state 138


State 132

   40 when: _WHEN literal . _ARROW statement

    _ARROW  shift, and go to state 139


State 133

   35 otherwise: _OTHERWISE . _ARROW statement

    _ARROW  shift, and go to state 140


State 134

   33 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC _LBRACKET $@7 whenPart otherwise . _RBRACKET

    _RBRACKET  shift, and go to state 141


State 135

   37 whenPart: whenPart when . finish_par

    _FINISH  shift, and go to state 136

    $default  reduce using rule 38 (finish_par)

    finish_par  go to state 142


State 136

   39 finish_par: _FINISH . _SEMICOLON

    _SEMICOLON  shift, and go to state 143


State 137

   36 whenPart: when finish_par .

    $default  reduce using rule 36 (whenPart)


State 138

   42 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal . _RPAREN statement

    _RPAREN  shift, and go to state 144


State 139

   40 when: _WHEN literal _ARROW . statement

    _TYPE      shift, and go to state 22
    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _SELECT    shift, and go to state 27
    _INC_OP    shift, and go to state 28
    _DEC_OP    shift, and go to state 29
    _PARA      shift, and go to state 30
    _CHECK     shift, and go to state 31

    variable              go to state 33
    statement             go to state 145
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    inc_dec               go to state 39
    compound_statement    go to state 40
    assignment_statement  go to state 41
    function_call         go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45
    select_statement      go to state 46


State 140

   35 otherwise: _OTHERWISE _ARROW . statement

    _TYPE      shift, and go to state 22
    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _SELECT    shift, and go to state 27
    _INC_OP    shift, and go to state 28
    _DEC_OP    shift, and go to state 29
    _PARA      shift, and go to state 30
    _CHECK     shift, and go to state 31

    variable              go to state 33
    statement             go to state 146
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    inc_dec               go to state 39
    compound_statement    go to state 40
    assignment_statement  go to state 41
    function_call         go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45
    select_statement      go to state 46


State 141

   33 check_exp: _CHECK _LSBRAC _ID $@6 _RSBRAC _LBRACKET $@7 whenPart otherwise _RBRACKET .

    $default  reduce using rule 33 (check_exp)


State 142

   37 whenPart: whenPart when finish_par .

    $default  reduce using rule 37 (whenPart)


State 143

   39 finish_par: _FINISH _SEMICOLON .

    $default  reduce using rule 39 (finish_par)


State 144

   42 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN . statement

    _TYPE      shift, and go to state 22
    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _SELECT    shift, and go to state 27
    _INC_OP    shift, and go to state 28
    _DEC_OP    shift, and go to state 29
    _PARA      shift, and go to state 30
    _CHECK     shift, and go to state 31

    variable              go to state 33
    statement             go to state 147
    check_exp             go to state 35
    void_func             go to state 36
    para_statement        go to state 37
    inc_statement         go to state 38
    inc_dec               go to state 39
    compound_statement    go to state 40
    assignment_statement  go to state 41
    function_call         go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45
    select_statement      go to state 46


State 145

   40 when: _WHEN literal _ARROW statement .

    $default  reduce using rule 40 (when)


State 146

   35 otherwise: _OTHERWISE _ARROW statement .

    $default  reduce using rule 35 (otherwise)


State 147

   42 para_statement: _PARA _LPAREN _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN statement .

    $default  reduce using rule 42 (para_statement)
