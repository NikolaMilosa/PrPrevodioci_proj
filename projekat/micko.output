Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 glob_vars function_list

    3 glob_vars: %empty
    4          | glob_vars g_variable

    5 g_variable: _TYPE g_var_poss _SEMICOLON

    6 g_var_poss: _ID
    7           | g_var_poss _COMMA _ID

    8 function_list: function
    9              | function_list function

   10 $@2: %empty

   11 $@3: %empty

   12 $@4: %empty

   13 function: _TYPE _ID $@2 _LPAREN $@3 parameter $@4 _RPAREN func_end

   14 $@5: %empty

   15 func_end: $@5 body
   16         | _SEMICOLON

   17 parameter: %empty
   18          | func_with_par

   19 func_with_par: _TYPE _ID
   20              | func_with_par _COMMA _TYPE _ID

   21 $@6: %empty

   22 $@7: %empty

   23 $@8: %empty

   24 body: _LBRACKET $@6 variable_list $@7 statement_list $@8 _RBRACKET

   25 variable_list: %empty
   26              | variable_list variable

   27 $@9: %empty

   28 variable: _TYPE $@9 var_poss _SEMICOLON

   29 var_poss: _ID
   30         | _ID _ASSIGN num_exp
   31         | var_poss _COMMA _ID
   32         | var_poss _COMMA _ID _ASSIGN num_exp

   33 statement_list: %empty
   34               | statement_list statement

   35 statement: compound_statement
   36          | assignment_statement
   37          | if_statement
   38          | return_statement
   39          | select_statement
   40          | fulUn_statement
   41          | para_statement
   42          | void_func
   43          | check_exp

   44 $@10: %empty

   45 $@11: %empty

   46 check_exp: _CHECK _LSBRAC _ID $@10 _RSBRAC _LBRACKET $@11 whenPart otherwise _RBRACKET

   47 otherwise: %empty

   48 $@12: %empty

   49 otherwise: _OTHERWISE $@12 _ARROW statement

   50 whenPart: when finish_par
   51         | whenPart when finish_par

   52 finish_par: %empty
   53           | _FINISH _SEMICOLON

   54 $@13: %empty

   55 when: _WHEN literal $@13 _ARROW statement

   56 void_func: function_call _SEMICOLON

   57 @14: %empty

   58 $@15: %empty

   59 para_statement: _PARA _LPAREN @14 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@15 statement

   60 fulUn_statement: _ID _INC_OP _SEMICOLON
   61                | _INC_OP _ID _SEMICOLON
   62                | _ID _DEC_OP _SEMICOLON
   63                | _DEC_OP _ID _SEMICOLON

   64 compound_statement: _LBRACKET statement_list _RBRACKET

   65 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   66 num_exp: exp
   67        | num_exp _AROP exp

   68 exp: literal
   69    | _ID
   70    | function_call
   71    | _LPAREN num_exp _RPAREN
   72    | _ID _INC_OP
   73    | _ID _DEC_OP
   74    | _DEC_OP _ID
   75    | _INC_OP _ID

   76 $@16: %empty

   77 $@17: %empty

   78 exp: _LPAREN rel_exp _RPAREN _QMARK $@16 exp $@17 _COLON exp

   79 literal: _INT_NUMBER
   80        | _UINT_NUMBER

   81 $@18: %empty

   82 $@19: %empty

   83 function_call: _ID $@18 _LPAREN $@19 argument _RPAREN

   84 argument: %empty
   85         | has_args

   86 has_args: num_exp
   87         | has_args _COMMA num_exp

   88 if_statement: if_part
   89             | if_part _ELSE statement

   90 @20: %empty

   91 $@21: %empty

   92 if_part: _IF _LPAREN @20 rel_exp $@21 _RPAREN statement

   93 rel_exp: num_exp _RELOP num_exp

   94 return_statement: _RETURN num_exp _SEMICOLON
   95                 | _RETURN _SEMICOLON

   96 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   97 arg_select: _ID
   98           | arg_select _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 13 19 20 28
_IF (259) 92
_ELSE (260) 89
_RETURN (261) 94 95
_ID (262) 6 7 13 19 20 29 30 31 32 46 59 60 61 62 63 65 69 72 73 74
    75 83 96 97 98
_INT_NUMBER (263) 79
_UINT_NUMBER (264) 80
_LPAREN (265) 13 59 71 78 83 92 96
_RPAREN (266) 13 59 71 78 83 92 96
_LBRACKET (267) 24 46 64
_RBRACKET (268) 24 46 64
_ASSIGN (269) 30 32 59 65
_SEMICOLON (270) 5 16 28 53 56 60 61 62 63 65 94 95 96
_AROP (271) 67
_RELOP (272) 93
_SELECT (273) 96
_FROM (274) 96
_WHERE (275) 96
_COMMA (276) 7 20 31 32 87 98
_INC_OP (277) 60 61 72 75
_DEC_OP (278) 62 63 73 74
_PARA (279) 59
_PASO (280) 59
_COLON (281) 59 78
_CHECK (282) 46
_WHEN (283) 55
_FINISH (284) 53
_LSBRAC (285) 46
_RSBRAC (286) 46
_ARROW (287) 49 55
_OTHERWISE (288) 49
_QMARK (289) 78
ONLY_IF (290)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 2, on right: 0
$@1 (38)
    on left: 1, on right: 2
glob_vars (39)
    on left: 3 4, on right: 2 4
g_variable (40)
    on left: 5, on right: 4
g_var_poss (41)
    on left: 6 7, on right: 5 7
function_list (42)
    on left: 8 9, on right: 2 9
function (43)
    on left: 13, on right: 8 9
$@2 (44)
    on left: 10, on right: 13
$@3 (45)
    on left: 11, on right: 13
$@4 (46)
    on left: 12, on right: 13
func_end (47)
    on left: 15 16, on right: 13
$@5 (48)
    on left: 14, on right: 15
parameter (49)
    on left: 17 18, on right: 13
func_with_par (50)
    on left: 19 20, on right: 18 20
body (51)
    on left: 24, on right: 15
$@6 (52)
    on left: 21, on right: 24
$@7 (53)
    on left: 22, on right: 24
$@8 (54)
    on left: 23, on right: 24
variable_list (55)
    on left: 25 26, on right: 24 26
variable (56)
    on left: 28, on right: 26
$@9 (57)
    on left: 27, on right: 28
var_poss (58)
    on left: 29 30 31 32, on right: 28 31 32
statement_list (59)
    on left: 33 34, on right: 24 34 64
statement (60)
    on left: 35 36 37 38 39 40 41 42 43, on right: 34 49 55 59 89 92
check_exp (61)
    on left: 46, on right: 43
$@10 (62)
    on left: 44, on right: 46
$@11 (63)
    on left: 45, on right: 46
otherwise (64)
    on left: 47 49, on right: 46
$@12 (65)
    on left: 48, on right: 49
whenPart (66)
    on left: 50 51, on right: 46 51
finish_par (67)
    on left: 52 53, on right: 50 51
when (68)
    on left: 55, on right: 50 51
$@13 (69)
    on left: 54, on right: 55
void_func (70)
    on left: 56, on right: 42
para_statement (71)
    on left: 59, on right: 41
@14 (72)
    on left: 57, on right: 59
$@15 (73)
    on left: 58, on right: 59
fulUn_statement (74)
    on left: 60 61 62 63, on right: 40
compound_statement (75)
    on left: 64, on right: 35
assignment_statement (76)
    on left: 65, on right: 36
num_exp (77)
    on left: 66 67, on right: 30 32 65 67 71 86 87 93 94
exp (78)
    on left: 68 69 70 71 72 73 74 75 78, on right: 66 67 78
$@16 (79)
    on left: 76, on right: 78
$@17 (80)
    on left: 77, on right: 78
literal (81)
    on left: 79 80, on right: 55 59 68
function_call (82)
    on left: 83, on right: 56 70
$@18 (83)
    on left: 81, on right: 83
$@19 (84)
    on left: 82, on right: 83
argument (85)
    on left: 84 85, on right: 83
has_args (86)
    on left: 86 87, on right: 85 87
if_statement (87)
    on left: 88 89, on right: 37
if_part (88)
    on left: 92, on right: 88 89
@20 (89)
    on left: 90, on right: 92
$@21 (90)
    on left: 91, on right: 92
rel_exp (91)
    on left: 93, on right: 78 92 96
return_statement (92)
    on left: 94 95, on right: 38
select_statement (93)
    on left: 96, on right: 39
arg_select (94)
    on left: 97 98, on right: 96 98


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . glob_vars function_list

    $default  reduce using rule 3 (glob_vars)

    glob_vars  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 glob_vars . function_list
    4 glob_vars: glob_vars . g_variable

    _TYPE  shift, and go to state 5

    g_variable     go to state 6
    function_list  go to state 7
    function       go to state 8


State 5

    5 g_variable: _TYPE . g_var_poss _SEMICOLON
   13 function: _TYPE . _ID $@2 _LPAREN $@3 parameter $@4 _RPAREN func_end

    _ID  shift, and go to state 9

    g_var_poss  go to state 10


State 6

    4 glob_vars: glob_vars g_variable .

    $default  reduce using rule 4 (glob_vars)


State 7

    2 program: $@1 glob_vars function_list .
    9 function_list: function_list . function

    _TYPE  shift, and go to state 11

    $default  reduce using rule 2 (program)

    function  go to state 12


State 8

    8 function_list: function .

    $default  reduce using rule 8 (function_list)


State 9

    6 g_var_poss: _ID .
   13 function: _TYPE _ID . $@2 _LPAREN $@3 parameter $@4 _RPAREN func_end

    _LPAREN   reduce using rule 10 ($@2)
    $default  reduce using rule 6 (g_var_poss)

    $@2  go to state 13


State 10

    5 g_variable: _TYPE g_var_poss . _SEMICOLON
    7 g_var_poss: g_var_poss . _COMMA _ID

    _SEMICOLON  shift, and go to state 14
    _COMMA      shift, and go to state 15


State 11

   13 function: _TYPE . _ID $@2 _LPAREN $@3 parameter $@4 _RPAREN func_end

    _ID  shift, and go to state 16


State 12

    9 function_list: function_list function .

    $default  reduce using rule 9 (function_list)


State 13

   13 function: _TYPE _ID $@2 . _LPAREN $@3 parameter $@4 _RPAREN func_end

    _LPAREN  shift, and go to state 17


State 14

    5 g_variable: _TYPE g_var_poss _SEMICOLON .

    $default  reduce using rule 5 (g_variable)


State 15

    7 g_var_poss: g_var_poss _COMMA . _ID

    _ID  shift, and go to state 18


State 16

   13 function: _TYPE _ID . $@2 _LPAREN $@3 parameter $@4 _RPAREN func_end

    $default  reduce using rule 10 ($@2)

    $@2  go to state 13


State 17

   13 function: _TYPE _ID $@2 _LPAREN . $@3 parameter $@4 _RPAREN func_end

    $default  reduce using rule 11 ($@3)

    $@3  go to state 19


State 18

    7 g_var_poss: g_var_poss _COMMA _ID .

    $default  reduce using rule 7 (g_var_poss)


State 19

   13 function: _TYPE _ID $@2 _LPAREN $@3 . parameter $@4 _RPAREN func_end

    _TYPE  shift, and go to state 20

    $default  reduce using rule 17 (parameter)

    parameter      go to state 21
    func_with_par  go to state 22


State 20

   19 func_with_par: _TYPE . _ID

    _ID  shift, and go to state 23


State 21

   13 function: _TYPE _ID $@2 _LPAREN $@3 parameter . $@4 _RPAREN func_end

    $default  reduce using rule 12 ($@4)

    $@4  go to state 24


State 22

   18 parameter: func_with_par .
   20 func_with_par: func_with_par . _COMMA _TYPE _ID

    _COMMA  shift, and go to state 25

    $default  reduce using rule 18 (parameter)


State 23

   19 func_with_par: _TYPE _ID .

    $default  reduce using rule 19 (func_with_par)


State 24

   13 function: _TYPE _ID $@2 _LPAREN $@3 parameter $@4 . _RPAREN func_end

    _RPAREN  shift, and go to state 26


State 25

   20 func_with_par: func_with_par _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 27


State 26

   13 function: _TYPE _ID $@2 _LPAREN $@3 parameter $@4 _RPAREN . func_end

    _SEMICOLON  shift, and go to state 28

    $default  reduce using rule 14 ($@5)

    func_end  go to state 29
    $@5       go to state 30


State 27

   20 func_with_par: func_with_par _COMMA _TYPE . _ID

    _ID  shift, and go to state 31


State 28

   16 func_end: _SEMICOLON .

    $default  reduce using rule 16 (func_end)


State 29

   13 function: _TYPE _ID $@2 _LPAREN $@3 parameter $@4 _RPAREN func_end .

    $default  reduce using rule 13 (function)


State 30

   15 func_end: $@5 . body

    _LBRACKET  shift, and go to state 32

    body  go to state 33


State 31

   20 func_with_par: func_with_par _COMMA _TYPE _ID .

    $default  reduce using rule 20 (func_with_par)


State 32

   24 body: _LBRACKET . $@6 variable_list $@7 statement_list $@8 _RBRACKET

    $default  reduce using rule 21 ($@6)

    $@6  go to state 34


State 33

   15 func_end: $@5 body .

    $default  reduce using rule 15 (func_end)


State 34

   24 body: _LBRACKET $@6 . variable_list $@7 statement_list $@8 _RBRACKET

    $default  reduce using rule 25 (variable_list)

    variable_list  go to state 35


State 35

   24 body: _LBRACKET $@6 variable_list . $@7 statement_list $@8 _RBRACKET
   26 variable_list: variable_list . variable

    _TYPE  shift, and go to state 36

    $default  reduce using rule 22 ($@7)

    $@7       go to state 37
    variable  go to state 38


State 36

   28 variable: _TYPE . $@9 var_poss _SEMICOLON

    $default  reduce using rule 27 ($@9)

    $@9  go to state 39


State 37

   24 body: _LBRACKET $@6 variable_list $@7 . statement_list $@8 _RBRACKET

    $default  reduce using rule 33 (statement_list)

    statement_list  go to state 40


State 38

   26 variable_list: variable_list variable .

    $default  reduce using rule 26 (variable_list)


State 39

   28 variable: _TYPE $@9 . var_poss _SEMICOLON

    _ID  shift, and go to state 41

    var_poss  go to state 42


State 40

   24 body: _LBRACKET $@6 variable_list $@7 statement_list . $@8 _RBRACKET
   34 statement_list: statement_list . statement

    _IF        shift, and go to state 43
    _RETURN    shift, and go to state 44
    _ID        shift, and go to state 45
    _LBRACKET  shift, and go to state 46
    _SELECT    shift, and go to state 47
    _INC_OP    shift, and go to state 48
    _DEC_OP    shift, and go to state 49
    _PARA      shift, and go to state 50
    _CHECK     shift, and go to state 51

    $default  reduce using rule 23 ($@8)

    $@8                   go to state 52
    statement             go to state 53
    check_exp             go to state 54
    void_func             go to state 55
    para_statement        go to state 56
    fulUn_statement       go to state 57
    compound_statement    go to state 58
    assignment_statement  go to state 59
    function_call         go to state 60
    if_statement          go to state 61
    if_part               go to state 62
    return_statement      go to state 63
    select_statement      go to state 64


State 41

   29 var_poss: _ID .
   30         | _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 65

    $default  reduce using rule 29 (var_poss)


State 42

   28 variable: _TYPE $@9 var_poss . _SEMICOLON
   31 var_poss: var_poss . _COMMA _ID
   32         | var_poss . _COMMA _ID _ASSIGN num_exp

    _SEMICOLON  shift, and go to state 66
    _COMMA      shift, and go to state 67


State 43

   92 if_part: _IF . _LPAREN @20 rel_exp $@21 _RPAREN statement

    _LPAREN  shift, and go to state 68


State 44

   94 return_statement: _RETURN . num_exp _SEMICOLON
   95                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 69
    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71
    _LPAREN       shift, and go to state 72
    _SEMICOLON    shift, and go to state 73
    _INC_OP       shift, and go to state 74
    _DEC_OP       shift, and go to state 75

    num_exp        go to state 76
    exp            go to state 77
    literal        go to state 78
    function_call  go to state 79


State 45

   60 fulUn_statement: _ID . _INC_OP _SEMICOLON
   62                | _ID . _DEC_OP _SEMICOLON
   65 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   83 function_call: _ID . $@18 _LPAREN $@19 argument _RPAREN

    _ASSIGN  shift, and go to state 80
    _INC_OP  shift, and go to state 81
    _DEC_OP  shift, and go to state 82

    $default  reduce using rule 81 ($@18)

    $@18  go to state 83


State 46

   64 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 33 (statement_list)

    statement_list  go to state 84


State 47

   96 select_statement: _SELECT . arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 85

    arg_select  go to state 86


State 48

   61 fulUn_statement: _INC_OP . _ID _SEMICOLON

    _ID  shift, and go to state 87


State 49

   63 fulUn_statement: _DEC_OP . _ID _SEMICOLON

    _ID  shift, and go to state 88


State 50

   59 para_statement: _PARA . _LPAREN @14 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@15 statement

    _LPAREN  shift, and go to state 89


State 51

   46 check_exp: _CHECK . _LSBRAC _ID $@10 _RSBRAC _LBRACKET $@11 whenPart otherwise _RBRACKET

    _LSBRAC  shift, and go to state 90


State 52

   24 body: _LBRACKET $@6 variable_list $@7 statement_list $@8 . _RBRACKET

    _RBRACKET  shift, and go to state 91


State 53

   34 statement_list: statement_list statement .

    $default  reduce using rule 34 (statement_list)


State 54

   43 statement: check_exp .

    $default  reduce using rule 43 (statement)


State 55

   42 statement: void_func .

    $default  reduce using rule 42 (statement)


State 56

   41 statement: para_statement .

    $default  reduce using rule 41 (statement)


State 57

   40 statement: fulUn_statement .

    $default  reduce using rule 40 (statement)


State 58

   35 statement: compound_statement .

    $default  reduce using rule 35 (statement)


State 59

   36 statement: assignment_statement .

    $default  reduce using rule 36 (statement)


State 60

   56 void_func: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 92


State 61

   37 statement: if_statement .

    $default  reduce using rule 37 (statement)


State 62

   88 if_statement: if_part .
   89             | if_part . _ELSE statement

    _ELSE  shift, and go to state 93

    $default  reduce using rule 88 (if_statement)


State 63

   38 statement: return_statement .

    $default  reduce using rule 38 (statement)


State 64

   39 statement: select_statement .

    $default  reduce using rule 39 (statement)


State 65

   30 var_poss: _ID _ASSIGN . num_exp

    _ID           shift, and go to state 69
    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71
    _LPAREN       shift, and go to state 72
    _INC_OP       shift, and go to state 74
    _DEC_OP       shift, and go to state 75

    num_exp        go to state 94
    exp            go to state 77
    literal        go to state 78
    function_call  go to state 79


State 66

   28 variable: _TYPE $@9 var_poss _SEMICOLON .

    $default  reduce using rule 28 (variable)


State 67

   31 var_poss: var_poss _COMMA . _ID
   32         | var_poss _COMMA . _ID _ASSIGN num_exp

    _ID  shift, and go to state 95


State 68

   92 if_part: _IF _LPAREN . @20 rel_exp $@21 _RPAREN statement

    $default  reduce using rule 90 (@20)

    @20  go to state 96


State 69

   69 exp: _ID .
   72    | _ID . _INC_OP
   73    | _ID . _DEC_OP
   83 function_call: _ID . $@18 _LPAREN $@19 argument _RPAREN

    _INC_OP  shift, and go to state 97
    _DEC_OP  shift, and go to state 98

    _LPAREN   reduce using rule 81 ($@18)
    $default  reduce using rule 69 (exp)

    $@18  go to state 83


State 70

   79 literal: _INT_NUMBER .

    $default  reduce using rule 79 (literal)


State 71

   80 literal: _UINT_NUMBER .

    $default  reduce using rule 80 (literal)


State 72

   71 exp: _LPAREN . num_exp _RPAREN
   78    | _LPAREN . rel_exp _RPAREN _QMARK $@16 exp $@17 _COLON exp

    _ID           shift, and go to state 69
    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71
    _LPAREN       shift, and go to state 72
    _INC_OP       shift, and go to state 74
    _DEC_OP       shift, and go to state 75

    num_exp        go to state 99
    exp            go to state 77
    literal        go to state 78
    function_call  go to state 79
    rel_exp        go to state 100


State 73

   95 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 95 (return_statement)


State 74

   75 exp: _INC_OP . _ID

    _ID  shift, and go to state 101


State 75

   74 exp: _DEC_OP . _ID

    _ID  shift, and go to state 102


State 76

   67 num_exp: num_exp . _AROP exp
   94 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 103
    _AROP       shift, and go to state 104


State 77

   66 num_exp: exp .

    $default  reduce using rule 66 (num_exp)


State 78

   68 exp: literal .

    $default  reduce using rule 68 (exp)


State 79

   70 exp: function_call .

    $default  reduce using rule 70 (exp)


State 80

   65 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 69
    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71
    _LPAREN       shift, and go to state 72
    _INC_OP       shift, and go to state 74
    _DEC_OP       shift, and go to state 75

    num_exp        go to state 105
    exp            go to state 77
    literal        go to state 78
    function_call  go to state 79


State 81

   60 fulUn_statement: _ID _INC_OP . _SEMICOLON

    _SEMICOLON  shift, and go to state 106


State 82

   62 fulUn_statement: _ID _DEC_OP . _SEMICOLON

    _SEMICOLON  shift, and go to state 107


State 83

   83 function_call: _ID $@18 . _LPAREN $@19 argument _RPAREN

    _LPAREN  shift, and go to state 108


State 84

   34 statement_list: statement_list . statement
   64 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 43
    _RETURN    shift, and go to state 44
    _ID        shift, and go to state 45
    _LBRACKET  shift, and go to state 46
    _RBRACKET  shift, and go to state 109
    _SELECT    shift, and go to state 47
    _INC_OP    shift, and go to state 48
    _DEC_OP    shift, and go to state 49
    _PARA      shift, and go to state 50
    _CHECK     shift, and go to state 51

    statement             go to state 53
    check_exp             go to state 54
    void_func             go to state 55
    para_statement        go to state 56
    fulUn_statement       go to state 57
    compound_statement    go to state 58
    assignment_statement  go to state 59
    function_call         go to state 60
    if_statement          go to state 61
    if_part               go to state 62
    return_statement      go to state 63
    select_statement      go to state 64


State 85

   97 arg_select: _ID .

    $default  reduce using rule 97 (arg_select)


State 86

   96 select_statement: _SELECT arg_select . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON
   98 arg_select: arg_select . _COMMA _ID

    _FROM   shift, and go to state 110
    _COMMA  shift, and go to state 111


State 87

   61 fulUn_statement: _INC_OP _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 112


State 88

   63 fulUn_statement: _DEC_OP _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 113


State 89

   59 para_statement: _PARA _LPAREN . @14 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@15 statement

    $default  reduce using rule 57 (@14)

    @14  go to state 114


State 90

   46 check_exp: _CHECK _LSBRAC . _ID $@10 _RSBRAC _LBRACKET $@11 whenPart otherwise _RBRACKET

    _ID  shift, and go to state 115


State 91

   24 body: _LBRACKET $@6 variable_list $@7 statement_list $@8 _RBRACKET .

    $default  reduce using rule 24 (body)


State 92

   56 void_func: function_call _SEMICOLON .

    $default  reduce using rule 56 (void_func)


State 93

   89 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 43
    _RETURN    shift, and go to state 44
    _ID        shift, and go to state 45
    _LBRACKET  shift, and go to state 46
    _SELECT    shift, and go to state 47
    _INC_OP    shift, and go to state 48
    _DEC_OP    shift, and go to state 49
    _PARA      shift, and go to state 50
    _CHECK     shift, and go to state 51

    statement             go to state 116
    check_exp             go to state 54
    void_func             go to state 55
    para_statement        go to state 56
    fulUn_statement       go to state 57
    compound_statement    go to state 58
    assignment_statement  go to state 59
    function_call         go to state 60
    if_statement          go to state 61
    if_part               go to state 62
    return_statement      go to state 63
    select_statement      go to state 64


State 94

   30 var_poss: _ID _ASSIGN num_exp .
   67 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 104

    $default  reduce using rule 30 (var_poss)


State 95

   31 var_poss: var_poss _COMMA _ID .
   32         | var_poss _COMMA _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 117

    $default  reduce using rule 31 (var_poss)


State 96

   92 if_part: _IF _LPAREN @20 . rel_exp $@21 _RPAREN statement

    _ID           shift, and go to state 69
    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71
    _LPAREN       shift, and go to state 72
    _INC_OP       shift, and go to state 74
    _DEC_OP       shift, and go to state 75

    num_exp        go to state 118
    exp            go to state 77
    literal        go to state 78
    function_call  go to state 79
    rel_exp        go to state 119


State 97

   72 exp: _ID _INC_OP .

    $default  reduce using rule 72 (exp)


State 98

   73 exp: _ID _DEC_OP .

    $default  reduce using rule 73 (exp)


State 99

   67 num_exp: num_exp . _AROP exp
   71 exp: _LPAREN num_exp . _RPAREN
   93 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 120
    _AROP    shift, and go to state 104
    _RELOP   shift, and go to state 121


State 100

   78 exp: _LPAREN rel_exp . _RPAREN _QMARK $@16 exp $@17 _COLON exp

    _RPAREN  shift, and go to state 122


State 101

   75 exp: _INC_OP _ID .

    $default  reduce using rule 75 (exp)


State 102

   74 exp: _DEC_OP _ID .

    $default  reduce using rule 74 (exp)


State 103

   94 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 94 (return_statement)


State 104

   67 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 69
    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71
    _LPAREN       shift, and go to state 72
    _INC_OP       shift, and go to state 74
    _DEC_OP       shift, and go to state 75

    exp            go to state 123
    literal        go to state 78
    function_call  go to state 79


State 105

   65 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   67 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 124
    _AROP       shift, and go to state 104


State 106

   60 fulUn_statement: _ID _INC_OP _SEMICOLON .

    $default  reduce using rule 60 (fulUn_statement)


State 107

   62 fulUn_statement: _ID _DEC_OP _SEMICOLON .

    $default  reduce using rule 62 (fulUn_statement)


State 108

   83 function_call: _ID $@18 _LPAREN . $@19 argument _RPAREN

    $default  reduce using rule 82 ($@19)

    $@19  go to state 125


State 109

   64 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 64 (compound_statement)


State 110

   96 select_statement: _SELECT arg_select _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 126


State 111

   98 arg_select: arg_select _COMMA . _ID

    _ID  shift, and go to state 127


State 112

   61 fulUn_statement: _INC_OP _ID _SEMICOLON .

    $default  reduce using rule 61 (fulUn_statement)


State 113

   63 fulUn_statement: _DEC_OP _ID _SEMICOLON .

    $default  reduce using rule 63 (fulUn_statement)


State 114

   59 para_statement: _PARA _LPAREN @14 . _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@15 statement

    _ID  shift, and go to state 128


State 115

   46 check_exp: _CHECK _LSBRAC _ID . $@10 _RSBRAC _LBRACKET $@11 whenPart otherwise _RBRACKET

    $default  reduce using rule 44 ($@10)

    $@10  go to state 129


State 116

   89 if_statement: if_part _ELSE statement .

    $default  reduce using rule 89 (if_statement)


State 117

   32 var_poss: var_poss _COMMA _ID _ASSIGN . num_exp

    _ID           shift, and go to state 69
    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71
    _LPAREN       shift, and go to state 72
    _INC_OP       shift, and go to state 74
    _DEC_OP       shift, and go to state 75

    num_exp        go to state 130
    exp            go to state 77
    literal        go to state 78
    function_call  go to state 79


State 118

   67 num_exp: num_exp . _AROP exp
   93 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 104
    _RELOP  shift, and go to state 121


State 119

   92 if_part: _IF _LPAREN @20 rel_exp . $@21 _RPAREN statement

    $default  reduce using rule 91 ($@21)

    $@21  go to state 131


State 120

   71 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 71 (exp)


State 121

   93 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 69
    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71
    _LPAREN       shift, and go to state 72
    _INC_OP       shift, and go to state 74
    _DEC_OP       shift, and go to state 75

    num_exp        go to state 132
    exp            go to state 77
    literal        go to state 78
    function_call  go to state 79


State 122

   78 exp: _LPAREN rel_exp _RPAREN . _QMARK $@16 exp $@17 _COLON exp

    _QMARK  shift, and go to state 133


State 123

   67 num_exp: num_exp _AROP exp .

    $default  reduce using rule 67 (num_exp)


State 124

   65 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 65 (assignment_statement)


State 125

   83 function_call: _ID $@18 _LPAREN $@19 . argument _RPAREN

    _ID           shift, and go to state 69
    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71
    _LPAREN       shift, and go to state 72
    _INC_OP       shift, and go to state 74
    _DEC_OP       shift, and go to state 75

    $default  reduce using rule 84 (argument)

    num_exp        go to state 134
    exp            go to state 77
    literal        go to state 78
    function_call  go to state 79
    argument       go to state 135
    has_args       go to state 136


State 126

   96 select_statement: _SELECT arg_select _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 137


State 127

   98 arg_select: arg_select _COMMA _ID .

    $default  reduce using rule 98 (arg_select)


State 128

   59 para_statement: _PARA _LPAREN @14 _ID . _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@15 statement

    _ASSIGN  shift, and go to state 138


State 129

   46 check_exp: _CHECK _LSBRAC _ID $@10 . _RSBRAC _LBRACKET $@11 whenPart otherwise _RBRACKET

    _RSBRAC  shift, and go to state 139


State 130

   32 var_poss: var_poss _COMMA _ID _ASSIGN num_exp .
   67 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 104

    $default  reduce using rule 32 (var_poss)


State 131

   92 if_part: _IF _LPAREN @20 rel_exp $@21 . _RPAREN statement

    _RPAREN  shift, and go to state 140


State 132

   67 num_exp: num_exp . _AROP exp
   93 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 104

    $default  reduce using rule 93 (rel_exp)


State 133

   78 exp: _LPAREN rel_exp _RPAREN _QMARK . $@16 exp $@17 _COLON exp

    $default  reduce using rule 76 ($@16)

    $@16  go to state 141


State 134

   67 num_exp: num_exp . _AROP exp
   86 has_args: num_exp .

    _AROP  shift, and go to state 104

    $default  reduce using rule 86 (has_args)


State 135

   83 function_call: _ID $@18 _LPAREN $@19 argument . _RPAREN

    _RPAREN  shift, and go to state 142


State 136

   85 argument: has_args .
   87 has_args: has_args . _COMMA num_exp

    _COMMA  shift, and go to state 143

    $default  reduce using rule 85 (argument)


State 137

   96 select_statement: _SELECT arg_select _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 144


State 138

   59 para_statement: _PARA _LPAREN @14 _ID _ASSIGN . literal _COLON literal _COLON _PASO literal _RPAREN $@15 statement

    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71

    literal  go to state 145


State 139

   46 check_exp: _CHECK _LSBRAC _ID $@10 _RSBRAC . _LBRACKET $@11 whenPart otherwise _RBRACKET

    _LBRACKET  shift, and go to state 146


State 140

   92 if_part: _IF _LPAREN @20 rel_exp $@21 _RPAREN . statement

    _IF        shift, and go to state 43
    _RETURN    shift, and go to state 44
    _ID        shift, and go to state 45
    _LBRACKET  shift, and go to state 46
    _SELECT    shift, and go to state 47
    _INC_OP    shift, and go to state 48
    _DEC_OP    shift, and go to state 49
    _PARA      shift, and go to state 50
    _CHECK     shift, and go to state 51

    statement             go to state 147
    check_exp             go to state 54
    void_func             go to state 55
    para_statement        go to state 56
    fulUn_statement       go to state 57
    compound_statement    go to state 58
    assignment_statement  go to state 59
    function_call         go to state 60
    if_statement          go to state 61
    if_part               go to state 62
    return_statement      go to state 63
    select_statement      go to state 64


State 141

   78 exp: _LPAREN rel_exp _RPAREN _QMARK $@16 . exp $@17 _COLON exp

    _ID           shift, and go to state 69
    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71
    _LPAREN       shift, and go to state 72
    _INC_OP       shift, and go to state 74
    _DEC_OP       shift, and go to state 75

    exp            go to state 148
    literal        go to state 78
    function_call  go to state 79


State 142

   83 function_call: _ID $@18 _LPAREN $@19 argument _RPAREN .

    $default  reduce using rule 83 (function_call)


State 143

   87 has_args: has_args _COMMA . num_exp

    _ID           shift, and go to state 69
    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71
    _LPAREN       shift, and go to state 72
    _INC_OP       shift, and go to state 74
    _DEC_OP       shift, and go to state 75

    num_exp        go to state 149
    exp            go to state 77
    literal        go to state 78
    function_call  go to state 79


State 144

   96 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 69
    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71
    _LPAREN       shift, and go to state 72
    _INC_OP       shift, and go to state 74
    _DEC_OP       shift, and go to state 75

    num_exp        go to state 118
    exp            go to state 77
    literal        go to state 78
    function_call  go to state 79
    rel_exp        go to state 150


State 145

   59 para_statement: _PARA _LPAREN @14 _ID _ASSIGN literal . _COLON literal _COLON _PASO literal _RPAREN $@15 statement

    _COLON  shift, and go to state 151


State 146

   46 check_exp: _CHECK _LSBRAC _ID $@10 _RSBRAC _LBRACKET . $@11 whenPart otherwise _RBRACKET

    $default  reduce using rule 45 ($@11)

    $@11  go to state 152


State 147

   92 if_part: _IF _LPAREN @20 rel_exp $@21 _RPAREN statement .

    $default  reduce using rule 92 (if_part)


State 148

   78 exp: _LPAREN rel_exp _RPAREN _QMARK $@16 exp . $@17 _COLON exp

    $default  reduce using rule 77 ($@17)

    $@17  go to state 153


State 149

   67 num_exp: num_exp . _AROP exp
   87 has_args: has_args _COMMA num_exp .

    _AROP  shift, and go to state 104

    $default  reduce using rule 87 (has_args)


State 150

   96 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 154


State 151

   59 para_statement: _PARA _LPAREN @14 _ID _ASSIGN literal _COLON . literal _COLON _PASO literal _RPAREN $@15 statement

    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71

    literal  go to state 155


State 152

   46 check_exp: _CHECK _LSBRAC _ID $@10 _RSBRAC _LBRACKET $@11 . whenPart otherwise _RBRACKET

    _WHEN  shift, and go to state 156

    whenPart  go to state 157
    when      go to state 158


State 153

   78 exp: _LPAREN rel_exp _RPAREN _QMARK $@16 exp $@17 . _COLON exp

    _COLON  shift, and go to state 159


State 154

   96 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 160


State 155

   59 para_statement: _PARA _LPAREN @14 _ID _ASSIGN literal _COLON literal . _COLON _PASO literal _RPAREN $@15 statement

    _COLON  shift, and go to state 161


State 156

   55 when: _WHEN . literal $@13 _ARROW statement

    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71

    literal  go to state 162


State 157

   46 check_exp: _CHECK _LSBRAC _ID $@10 _RSBRAC _LBRACKET $@11 whenPart . otherwise _RBRACKET
   51 whenPart: whenPart . when finish_par

    _WHEN       shift, and go to state 156
    _OTHERWISE  shift, and go to state 163

    $default  reduce using rule 47 (otherwise)

    otherwise  go to state 164
    when       go to state 165


State 158

   50 whenPart: when . finish_par

    _FINISH  shift, and go to state 166

    $default  reduce using rule 52 (finish_par)

    finish_par  go to state 167


State 159

   78 exp: _LPAREN rel_exp _RPAREN _QMARK $@16 exp $@17 _COLON . exp

    _ID           shift, and go to state 69
    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71
    _LPAREN       shift, and go to state 72
    _INC_OP       shift, and go to state 74
    _DEC_OP       shift, and go to state 75

    exp            go to state 168
    literal        go to state 78
    function_call  go to state 79


State 160

   96 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 96 (select_statement)


State 161

   59 para_statement: _PARA _LPAREN @14 _ID _ASSIGN literal _COLON literal _COLON . _PASO literal _RPAREN $@15 statement

    _PASO  shift, and go to state 169


State 162

   55 when: _WHEN literal . $@13 _ARROW statement

    $default  reduce using rule 54 ($@13)

    $@13  go to state 170


State 163

   49 otherwise: _OTHERWISE . $@12 _ARROW statement

    $default  reduce using rule 48 ($@12)

    $@12  go to state 171


State 164

   46 check_exp: _CHECK _LSBRAC _ID $@10 _RSBRAC _LBRACKET $@11 whenPart otherwise . _RBRACKET

    _RBRACKET  shift, and go to state 172


State 165

   51 whenPart: whenPart when . finish_par

    _FINISH  shift, and go to state 166

    $default  reduce using rule 52 (finish_par)

    finish_par  go to state 173


State 166

   53 finish_par: _FINISH . _SEMICOLON

    _SEMICOLON  shift, and go to state 174


State 167

   50 whenPart: when finish_par .

    $default  reduce using rule 50 (whenPart)


State 168

   78 exp: _LPAREN rel_exp _RPAREN _QMARK $@16 exp $@17 _COLON exp .

    $default  reduce using rule 78 (exp)


State 169

   59 para_statement: _PARA _LPAREN @14 _ID _ASSIGN literal _COLON literal _COLON _PASO . literal _RPAREN $@15 statement

    _INT_NUMBER   shift, and go to state 70
    _UINT_NUMBER  shift, and go to state 71

    literal  go to state 175


State 170

   55 when: _WHEN literal $@13 . _ARROW statement

    _ARROW  shift, and go to state 176


State 171

   49 otherwise: _OTHERWISE $@12 . _ARROW statement

    _ARROW  shift, and go to state 177


State 172

   46 check_exp: _CHECK _LSBRAC _ID $@10 _RSBRAC _LBRACKET $@11 whenPart otherwise _RBRACKET .

    $default  reduce using rule 46 (check_exp)


State 173

   51 whenPart: whenPart when finish_par .

    $default  reduce using rule 51 (whenPart)


State 174

   53 finish_par: _FINISH _SEMICOLON .

    $default  reduce using rule 53 (finish_par)


State 175

   59 para_statement: _PARA _LPAREN @14 _ID _ASSIGN literal _COLON literal _COLON _PASO literal . _RPAREN $@15 statement

    _RPAREN  shift, and go to state 178


State 176

   55 when: _WHEN literal $@13 _ARROW . statement

    _IF        shift, and go to state 43
    _RETURN    shift, and go to state 44
    _ID        shift, and go to state 45
    _LBRACKET  shift, and go to state 46
    _SELECT    shift, and go to state 47
    _INC_OP    shift, and go to state 48
    _DEC_OP    shift, and go to state 49
    _PARA      shift, and go to state 50
    _CHECK     shift, and go to state 51

    statement             go to state 179
    check_exp             go to state 54
    void_func             go to state 55
    para_statement        go to state 56
    fulUn_statement       go to state 57
    compound_statement    go to state 58
    assignment_statement  go to state 59
    function_call         go to state 60
    if_statement          go to state 61
    if_part               go to state 62
    return_statement      go to state 63
    select_statement      go to state 64


State 177

   49 otherwise: _OTHERWISE $@12 _ARROW . statement

    _IF        shift, and go to state 43
    _RETURN    shift, and go to state 44
    _ID        shift, and go to state 45
    _LBRACKET  shift, and go to state 46
    _SELECT    shift, and go to state 47
    _INC_OP    shift, and go to state 48
    _DEC_OP    shift, and go to state 49
    _PARA      shift, and go to state 50
    _CHECK     shift, and go to state 51

    statement             go to state 180
    check_exp             go to state 54
    void_func             go to state 55
    para_statement        go to state 56
    fulUn_statement       go to state 57
    compound_statement    go to state 58
    assignment_statement  go to state 59
    function_call         go to state 60
    if_statement          go to state 61
    if_part               go to state 62
    return_statement      go to state 63
    select_statement      go to state 64


State 178

   59 para_statement: _PARA _LPAREN @14 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN . $@15 statement

    $default  reduce using rule 58 ($@15)

    $@15  go to state 181


State 179

   55 when: _WHEN literal $@13 _ARROW statement .

    $default  reduce using rule 55 (when)


State 180

   49 otherwise: _OTHERWISE $@12 _ARROW statement .

    $default  reduce using rule 49 (otherwise)


State 181

   59 para_statement: _PARA _LPAREN @14 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@15 . statement

    _IF        shift, and go to state 43
    _RETURN    shift, and go to state 44
    _ID        shift, and go to state 45
    _LBRACKET  shift, and go to state 46
    _SELECT    shift, and go to state 47
    _INC_OP    shift, and go to state 48
    _DEC_OP    shift, and go to state 49
    _PARA      shift, and go to state 50
    _CHECK     shift, and go to state 51

    statement             go to state 182
    check_exp             go to state 54
    void_func             go to state 55
    para_statement        go to state 56
    fulUn_statement       go to state 57
    compound_statement    go to state 58
    assignment_statement  go to state 59
    function_call         go to state 60
    if_statement          go to state 61
    if_part               go to state 62
    return_statement      go to state 63
    select_statement      go to state 64


State 182

   59 para_statement: _PARA _LPAREN @14 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@15 statement .

    $default  reduce using rule 59 (para_statement)
