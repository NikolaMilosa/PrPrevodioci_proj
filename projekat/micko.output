Grammar

    0 $accept: program $end

    1 program: glob_vars function_list

    2 glob_vars: %empty
    3          | glob_vars g_variable

    4 g_variable: _TYPE g_var_poss _SEMICOLON

    5 g_var_poss: _ID
    6           | g_var_poss _COMMA _ID

    7 function_list: function
    8              | function_list function

    9 $@1: %empty

   10 $@2: %empty

   11 $@3: %empty

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN func_end

   13 $@4: %empty

   14 func_end: $@4 body
   15         | _SEMICOLON

   16 parameter: %empty
   17          | func_with_par

   18 func_with_par: _TYPE _ID
   19              | func_with_par _COMMA _TYPE _ID

   20 $@5: %empty

   21 $@6: %empty

   22 $@7: %empty

   23 body: _LBRACKET $@5 variable_list $@6 statement_list $@7 _RBRACKET

   24 variable_list: %empty
   25              | variable_list variable

   26 $@8: %empty

   27 variable: _TYPE $@8 var_poss _SEMICOLON

   28 var_poss: _ID
   29         | _ID _ASSIGN num_exp
   30         | var_poss _COMMA _ID
   31         | var_poss _COMMA _ID _ASSIGN num_exp

   32 statement_list: %empty
   33               | statement_list statement

   34 statement: compound_statement
   35          | assignment_statement
   36          | if_statement
   37          | return_statement
   38          | select_statement
   39          | fulUn_statement
   40          | para_statement
   41          | void_func
   42          | check_exp

   43 $@9: %empty

   44 $@10: %empty

   45 check_exp: _CHECK _LSBRAC _ID $@9 _RSBRAC _LBRACKET $@10 whenPart otherwise _RBRACKET

   46 otherwise: %empty

   47 $@11: %empty

   48 otherwise: _OTHERWISE $@11 _ARROW statement

   49 whenPart: when finish_par
   50         | whenPart when finish_par

   51 finish_par: %empty
   52           | _FINISH _SEMICOLON

   53 $@12: %empty

   54 when: _WHEN literal $@12 _ARROW statement

   55 void_func: function_call _SEMICOLON

   56 @13: %empty

   57 $@14: %empty

   58 para_statement: _PARA _LPAREN @13 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@14 statement

   59 fulUn_statement: _ID _INC_OP _SEMICOLON
   60                | _INC_OP _ID _SEMICOLON
   61                | _ID _DEC_OP _SEMICOLON
   62                | _DEC_OP _ID _SEMICOLON

   63 compound_statement: _LBRACKET statement_list _RBRACKET

   64 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   65 num_exp: exp

   66 $@15: %empty

   67 num_exp: num_exp $@15 _AROP exp

   68 exp: literal
   69    | _ID
   70    | function_call
   71    | _LPAREN num_exp _RPAREN
   72    | _ID _INC_OP
   73    | _ID _DEC_OP
   74    | _DEC_OP _ID
   75    | _INC_OP _ID
   76    | _LPAREN exp _RELOP exp _RPAREN _QMARK exp _COLON exp

   77 literal: _INT_NUMBER
   78        | _UINT_NUMBER

   79 $@16: %empty

   80 $@17: %empty

   81 function_call: _ID $@16 _LPAREN $@17 argument _RPAREN

   82 argument: %empty
   83         | has_args

   84 has_args: num_exp
   85         | has_args _COMMA num_exp

   86 if_statement: if_part
   87             | if_part _ELSE statement

   88 @18: %empty

   89 $@19: %empty

   90 if_part: _IF _LPAREN @18 rel_exp $@19 _RPAREN statement

   91 rel_exp: num_exp _RELOP num_exp

   92 return_statement: _RETURN num_exp _SEMICOLON
   93                 | _RETURN _SEMICOLON

   94 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

   95 arg_select: _ID
   96           | arg_select _COMMA _ID


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 4 12 18 19 27
_IF (259) 90
_ELSE (260) 87
_RETURN (261) 92 93
_ID (262) 5 6 12 18 19 28 29 30 31 45 58 59 60 61 62 64 69 72 73 74
    75 81 94 95 96
_INT_NUMBER (263) 77
_UINT_NUMBER (264) 78
_LPAREN (265) 12 58 71 76 81 90 94
_RPAREN (266) 12 58 71 76 81 90 94
_LBRACKET (267) 23 45 63
_RBRACKET (268) 23 45 63
_ASSIGN (269) 29 31 58 64
_SEMICOLON (270) 4 15 27 52 55 59 60 61 62 64 92 93 94
_AROP (271) 67
_RELOP (272) 76 91
_SELECT (273) 94
_FROM (274) 94
_WHERE (275) 94
_COMMA (276) 6 19 30 31 85 96
_INC_OP (277) 59 60 72 75
_DEC_OP (278) 61 62 73 74
_PARA (279) 58
_PASO (280) 58
_COLON (281) 58 76
_CHECK (282) 45
_WHEN (283) 54
_FINISH (284) 52
_LSBRAC (285) 45
_RSBRAC (286) 45
_ARROW (287) 48 54
_OTHERWISE (288) 48
_QMARK (289) 76
ONLY_IF (290)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1, on right: 0
glob_vars (38)
    on left: 2 3, on right: 1 3
g_variable (39)
    on left: 4, on right: 3
g_var_poss (40)
    on left: 5 6, on right: 4 6
function_list (41)
    on left: 7 8, on right: 1 8
function (42)
    on left: 12, on right: 7 8
$@1 (43)
    on left: 9, on right: 12
$@2 (44)
    on left: 10, on right: 12
$@3 (45)
    on left: 11, on right: 12
func_end (46)
    on left: 14 15, on right: 12
$@4 (47)
    on left: 13, on right: 14
parameter (48)
    on left: 16 17, on right: 12
func_with_par (49)
    on left: 18 19, on right: 17 19
body (50)
    on left: 23, on right: 14
$@5 (51)
    on left: 20, on right: 23
$@6 (52)
    on left: 21, on right: 23
$@7 (53)
    on left: 22, on right: 23
variable_list (54)
    on left: 24 25, on right: 23 25
variable (55)
    on left: 27, on right: 25
$@8 (56)
    on left: 26, on right: 27
var_poss (57)
    on left: 28 29 30 31, on right: 27 30 31
statement_list (58)
    on left: 32 33, on right: 23 33 63
statement (59)
    on left: 34 35 36 37 38 39 40 41 42, on right: 33 48 54 58 87 90
check_exp (60)
    on left: 45, on right: 42
$@9 (61)
    on left: 43, on right: 45
$@10 (62)
    on left: 44, on right: 45
otherwise (63)
    on left: 46 48, on right: 45
$@11 (64)
    on left: 47, on right: 48
whenPart (65)
    on left: 49 50, on right: 45 50
finish_par (66)
    on left: 51 52, on right: 49 50
when (67)
    on left: 54, on right: 49 50
$@12 (68)
    on left: 53, on right: 54
void_func (69)
    on left: 55, on right: 41
para_statement (70)
    on left: 58, on right: 40
@13 (71)
    on left: 56, on right: 58
$@14 (72)
    on left: 57, on right: 58
fulUn_statement (73)
    on left: 59 60 61 62, on right: 39
compound_statement (74)
    on left: 63, on right: 34
assignment_statement (75)
    on left: 64, on right: 35
num_exp (76)
    on left: 65 67, on right: 29 31 64 67 71 84 85 91 92
$@15 (77)
    on left: 66, on right: 67
exp (78)
    on left: 68 69 70 71 72 73 74 75 76, on right: 65 67 76
literal (79)
    on left: 77 78, on right: 54 58 68
function_call (80)
    on left: 81, on right: 55 70
$@16 (81)
    on left: 79, on right: 81
$@17 (82)
    on left: 80, on right: 81
argument (83)
    on left: 82 83, on right: 81
has_args (84)
    on left: 84 85, on right: 83 85
if_statement (85)
    on left: 86 87, on right: 36
if_part (86)
    on left: 90, on right: 86 87
@18 (87)
    on left: 88, on right: 90
$@19 (88)
    on left: 89, on right: 90
rel_exp (89)
    on left: 91, on right: 90 94
return_statement (90)
    on left: 92 93, on right: 37
select_statement (91)
    on left: 94, on right: 38
arg_select (92)
    on left: 95 96, on right: 94 96


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (glob_vars)

    program    go to state 1
    glob_vars  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: glob_vars . function_list
    3 glob_vars: glob_vars . g_variable

    _TYPE  shift, and go to state 4

    g_variable     go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 g_variable: _TYPE . g_var_poss _SEMICOLON
   12 function: _TYPE . _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN func_end

    _ID  shift, and go to state 8

    g_var_poss  go to state 9


State 5

    3 glob_vars: glob_vars g_variable .

    $default  reduce using rule 3 (glob_vars)


State 6

    1 program: glob_vars function_list .
    8 function_list: function_list . function

    _TYPE  shift, and go to state 10

    $default  reduce using rule 1 (program)

    function  go to state 11


State 7

    7 function_list: function .

    $default  reduce using rule 7 (function_list)


State 8

    5 g_var_poss: _ID .
   12 function: _TYPE _ID . $@1 _LPAREN $@2 parameter $@3 _RPAREN func_end

    _LPAREN   reduce using rule 9 ($@1)
    $default  reduce using rule 5 (g_var_poss)

    $@1  go to state 12


State 9

    4 g_variable: _TYPE g_var_poss . _SEMICOLON
    6 g_var_poss: g_var_poss . _COMMA _ID

    _SEMICOLON  shift, and go to state 13
    _COMMA      shift, and go to state 14


State 10

   12 function: _TYPE . _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN func_end

    _ID  shift, and go to state 15


State 11

    8 function_list: function_list function .

    $default  reduce using rule 8 (function_list)


State 12

   12 function: _TYPE _ID $@1 . _LPAREN $@2 parameter $@3 _RPAREN func_end

    _LPAREN  shift, and go to state 16


State 13

    4 g_variable: _TYPE g_var_poss _SEMICOLON .

    $default  reduce using rule 4 (g_variable)


State 14

    6 g_var_poss: g_var_poss _COMMA . _ID

    _ID  shift, and go to state 17


State 15

   12 function: _TYPE _ID . $@1 _LPAREN $@2 parameter $@3 _RPAREN func_end

    $default  reduce using rule 9 ($@1)

    $@1  go to state 12


State 16

   12 function: _TYPE _ID $@1 _LPAREN . $@2 parameter $@3 _RPAREN func_end

    $default  reduce using rule 10 ($@2)

    $@2  go to state 18


State 17

    6 g_var_poss: g_var_poss _COMMA _ID .

    $default  reduce using rule 6 (g_var_poss)


State 18

   12 function: _TYPE _ID $@1 _LPAREN $@2 . parameter $@3 _RPAREN func_end

    _TYPE  shift, and go to state 19

    $default  reduce using rule 16 (parameter)

    parameter      go to state 20
    func_with_par  go to state 21


State 19

   18 func_with_par: _TYPE . _ID

    _ID  shift, and go to state 22


State 20

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter . $@3 _RPAREN func_end

    $default  reduce using rule 11 ($@3)

    $@3  go to state 23


State 21

   17 parameter: func_with_par .
   19 func_with_par: func_with_par . _COMMA _TYPE _ID

    _COMMA  shift, and go to state 24

    $default  reduce using rule 17 (parameter)


State 22

   18 func_with_par: _TYPE _ID .

    $default  reduce using rule 18 (func_with_par)


State 23

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter $@3 . _RPAREN func_end

    _RPAREN  shift, and go to state 25


State 24

   19 func_with_par: func_with_par _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 26


State 25

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN . func_end

    _SEMICOLON  shift, and go to state 27

    $default  reduce using rule 13 ($@4)

    func_end  go to state 28
    $@4       go to state 29


State 26

   19 func_with_par: func_with_par _COMMA _TYPE . _ID

    _ID  shift, and go to state 30


State 27

   15 func_end: _SEMICOLON .

    $default  reduce using rule 15 (func_end)


State 28

   12 function: _TYPE _ID $@1 _LPAREN $@2 parameter $@3 _RPAREN func_end .

    $default  reduce using rule 12 (function)


State 29

   14 func_end: $@4 . body

    _LBRACKET  shift, and go to state 31

    body  go to state 32


State 30

   19 func_with_par: func_with_par _COMMA _TYPE _ID .

    $default  reduce using rule 19 (func_with_par)


State 31

   23 body: _LBRACKET . $@5 variable_list $@6 statement_list $@7 _RBRACKET

    $default  reduce using rule 20 ($@5)

    $@5  go to state 33


State 32

   14 func_end: $@4 body .

    $default  reduce using rule 14 (func_end)


State 33

   23 body: _LBRACKET $@5 . variable_list $@6 statement_list $@7 _RBRACKET

    $default  reduce using rule 24 (variable_list)

    variable_list  go to state 34


State 34

   23 body: _LBRACKET $@5 variable_list . $@6 statement_list $@7 _RBRACKET
   25 variable_list: variable_list . variable

    _TYPE  shift, and go to state 35

    $default  reduce using rule 21 ($@6)

    $@6       go to state 36
    variable  go to state 37


State 35

   27 variable: _TYPE . $@8 var_poss _SEMICOLON

    $default  reduce using rule 26 ($@8)

    $@8  go to state 38


State 36

   23 body: _LBRACKET $@5 variable_list $@6 . statement_list $@7 _RBRACKET

    $default  reduce using rule 32 (statement_list)

    statement_list  go to state 39


State 37

   25 variable_list: variable_list variable .

    $default  reduce using rule 25 (variable_list)


State 38

   27 variable: _TYPE $@8 . var_poss _SEMICOLON

    _ID  shift, and go to state 40

    var_poss  go to state 41


State 39

   23 body: _LBRACKET $@5 variable_list $@6 statement_list . $@7 _RBRACKET
   33 statement_list: statement_list . statement

    _IF        shift, and go to state 42
    _RETURN    shift, and go to state 43
    _ID        shift, and go to state 44
    _LBRACKET  shift, and go to state 45
    _SELECT    shift, and go to state 46
    _INC_OP    shift, and go to state 47
    _DEC_OP    shift, and go to state 48
    _PARA      shift, and go to state 49
    _CHECK     shift, and go to state 50

    $default  reduce using rule 22 ($@7)

    $@7                   go to state 51
    statement             go to state 52
    check_exp             go to state 53
    void_func             go to state 54
    para_statement        go to state 55
    fulUn_statement       go to state 56
    compound_statement    go to state 57
    assignment_statement  go to state 58
    function_call         go to state 59
    if_statement          go to state 60
    if_part               go to state 61
    return_statement      go to state 62
    select_statement      go to state 63


State 40

   28 var_poss: _ID .
   29         | _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 64

    $default  reduce using rule 28 (var_poss)


State 41

   27 variable: _TYPE $@8 var_poss . _SEMICOLON
   30 var_poss: var_poss . _COMMA _ID
   31         | var_poss . _COMMA _ID _ASSIGN num_exp

    _SEMICOLON  shift, and go to state 65
    _COMMA      shift, and go to state 66


State 42

   90 if_part: _IF . _LPAREN @18 rel_exp $@19 _RPAREN statement

    _LPAREN  shift, and go to state 67


State 43

   92 return_statement: _RETURN . num_exp _SEMICOLON
   93                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _SEMICOLON    shift, and go to state 72
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    num_exp        go to state 75
    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78


State 44

   59 fulUn_statement: _ID . _INC_OP _SEMICOLON
   61                | _ID . _DEC_OP _SEMICOLON
   64 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   81 function_call: _ID . $@16 _LPAREN $@17 argument _RPAREN

    _ASSIGN  shift, and go to state 79
    _INC_OP  shift, and go to state 80
    _DEC_OP  shift, and go to state 81

    $default  reduce using rule 79 ($@16)

    $@16  go to state 82


State 45

   63 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 32 (statement_list)

    statement_list  go to state 83


State 46

   94 select_statement: _SELECT . arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 84

    arg_select  go to state 85


State 47

   60 fulUn_statement: _INC_OP . _ID _SEMICOLON

    _ID  shift, and go to state 86


State 48

   62 fulUn_statement: _DEC_OP . _ID _SEMICOLON

    _ID  shift, and go to state 87


State 49

   58 para_statement: _PARA . _LPAREN @13 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@14 statement

    _LPAREN  shift, and go to state 88


State 50

   45 check_exp: _CHECK . _LSBRAC _ID $@9 _RSBRAC _LBRACKET $@10 whenPart otherwise _RBRACKET

    _LSBRAC  shift, and go to state 89


State 51

   23 body: _LBRACKET $@5 variable_list $@6 statement_list $@7 . _RBRACKET

    _RBRACKET  shift, and go to state 90


State 52

   33 statement_list: statement_list statement .

    $default  reduce using rule 33 (statement_list)


State 53

   42 statement: check_exp .

    $default  reduce using rule 42 (statement)


State 54

   41 statement: void_func .

    $default  reduce using rule 41 (statement)


State 55

   40 statement: para_statement .

    $default  reduce using rule 40 (statement)


State 56

   39 statement: fulUn_statement .

    $default  reduce using rule 39 (statement)


State 57

   34 statement: compound_statement .

    $default  reduce using rule 34 (statement)


State 58

   35 statement: assignment_statement .

    $default  reduce using rule 35 (statement)


State 59

   55 void_func: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 91


State 60

   36 statement: if_statement .

    $default  reduce using rule 36 (statement)


State 61

   86 if_statement: if_part .
   87             | if_part . _ELSE statement

    _ELSE  shift, and go to state 92

    $default  reduce using rule 86 (if_statement)


State 62

   37 statement: return_statement .

    $default  reduce using rule 37 (statement)


State 63

   38 statement: select_statement .

    $default  reduce using rule 38 (statement)


State 64

   29 var_poss: _ID _ASSIGN . num_exp

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    num_exp        go to state 93
    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78


State 65

   27 variable: _TYPE $@8 var_poss _SEMICOLON .

    $default  reduce using rule 27 (variable)


State 66

   30 var_poss: var_poss _COMMA . _ID
   31         | var_poss _COMMA . _ID _ASSIGN num_exp

    _ID  shift, and go to state 94


State 67

   90 if_part: _IF _LPAREN . @18 rel_exp $@19 _RPAREN statement

    $default  reduce using rule 88 (@18)

    @18  go to state 95


State 68

   69 exp: _ID .
   72    | _ID . _INC_OP
   73    | _ID . _DEC_OP
   81 function_call: _ID . $@16 _LPAREN $@17 argument _RPAREN

    _INC_OP  shift, and go to state 96
    _DEC_OP  shift, and go to state 97

    _LPAREN   reduce using rule 79 ($@16)
    $default  reduce using rule 69 (exp)

    $@16  go to state 82


State 69

   77 literal: _INT_NUMBER .

    $default  reduce using rule 77 (literal)


State 70

   78 literal: _UINT_NUMBER .

    $default  reduce using rule 78 (literal)


State 71

   71 exp: _LPAREN . num_exp _RPAREN
   76    | _LPAREN . exp _RELOP exp _RPAREN _QMARK exp _COLON exp

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    num_exp        go to state 98
    exp            go to state 99
    literal        go to state 77
    function_call  go to state 78


State 72

   93 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 93 (return_statement)


State 73

   75 exp: _INC_OP . _ID

    _ID  shift, and go to state 100


State 74

   74 exp: _DEC_OP . _ID

    _ID  shift, and go to state 101


State 75

   67 num_exp: num_exp . $@15 _AROP exp
   92 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 102

    $default  reduce using rule 66 ($@15)

    $@15  go to state 103


State 76

   65 num_exp: exp .

    $default  reduce using rule 65 (num_exp)


State 77

   68 exp: literal .

    $default  reduce using rule 68 (exp)


State 78

   70 exp: function_call .

    $default  reduce using rule 70 (exp)


State 79

   64 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    num_exp        go to state 104
    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78


State 80

   59 fulUn_statement: _ID _INC_OP . _SEMICOLON

    _SEMICOLON  shift, and go to state 105


State 81

   61 fulUn_statement: _ID _DEC_OP . _SEMICOLON

    _SEMICOLON  shift, and go to state 106


State 82

   81 function_call: _ID $@16 . _LPAREN $@17 argument _RPAREN

    _LPAREN  shift, and go to state 107


State 83

   33 statement_list: statement_list . statement
   63 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 42
    _RETURN    shift, and go to state 43
    _ID        shift, and go to state 44
    _LBRACKET  shift, and go to state 45
    _RBRACKET  shift, and go to state 108
    _SELECT    shift, and go to state 46
    _INC_OP    shift, and go to state 47
    _DEC_OP    shift, and go to state 48
    _PARA      shift, and go to state 49
    _CHECK     shift, and go to state 50

    statement             go to state 52
    check_exp             go to state 53
    void_func             go to state 54
    para_statement        go to state 55
    fulUn_statement       go to state 56
    compound_statement    go to state 57
    assignment_statement  go to state 58
    function_call         go to state 59
    if_statement          go to state 60
    if_part               go to state 61
    return_statement      go to state 62
    select_statement      go to state 63


State 84

   95 arg_select: _ID .

    $default  reduce using rule 95 (arg_select)


State 85

   94 select_statement: _SELECT arg_select . _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON
   96 arg_select: arg_select . _COMMA _ID

    _FROM   shift, and go to state 109
    _COMMA  shift, and go to state 110


State 86

   60 fulUn_statement: _INC_OP _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 111


State 87

   62 fulUn_statement: _DEC_OP _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 112


State 88

   58 para_statement: _PARA _LPAREN . @13 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@14 statement

    $default  reduce using rule 56 (@13)

    @13  go to state 113


State 89

   45 check_exp: _CHECK _LSBRAC . _ID $@9 _RSBRAC _LBRACKET $@10 whenPart otherwise _RBRACKET

    _ID  shift, and go to state 114


State 90

   23 body: _LBRACKET $@5 variable_list $@6 statement_list $@7 _RBRACKET .

    $default  reduce using rule 23 (body)


State 91

   55 void_func: function_call _SEMICOLON .

    $default  reduce using rule 55 (void_func)


State 92

   87 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 42
    _RETURN    shift, and go to state 43
    _ID        shift, and go to state 44
    _LBRACKET  shift, and go to state 45
    _SELECT    shift, and go to state 46
    _INC_OP    shift, and go to state 47
    _DEC_OP    shift, and go to state 48
    _PARA      shift, and go to state 49
    _CHECK     shift, and go to state 50

    statement             go to state 115
    check_exp             go to state 53
    void_func             go to state 54
    para_statement        go to state 55
    fulUn_statement       go to state 56
    compound_statement    go to state 57
    assignment_statement  go to state 58
    function_call         go to state 59
    if_statement          go to state 60
    if_part               go to state 61
    return_statement      go to state 62
    select_statement      go to state 63


State 93

   29 var_poss: _ID _ASSIGN num_exp .
   67 num_exp: num_exp . $@15 _AROP exp

    _AROP     reduce using rule 66 ($@15)
    $default  reduce using rule 29 (var_poss)

    $@15  go to state 103


State 94

   30 var_poss: var_poss _COMMA _ID .
   31         | var_poss _COMMA _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 116

    $default  reduce using rule 30 (var_poss)


State 95

   90 if_part: _IF _LPAREN @18 . rel_exp $@19 _RPAREN statement

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    num_exp        go to state 117
    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78
    rel_exp        go to state 118


State 96

   72 exp: _ID _INC_OP .

    $default  reduce using rule 72 (exp)


State 97

   73 exp: _ID _DEC_OP .

    $default  reduce using rule 73 (exp)


State 98

   67 num_exp: num_exp . $@15 _AROP exp
   71 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 119

    $default  reduce using rule 66 ($@15)

    $@15  go to state 103


State 99

   65 num_exp: exp .
   76 exp: _LPAREN exp . _RELOP exp _RPAREN _QMARK exp _COLON exp

    _RELOP  shift, and go to state 120

    $default  reduce using rule 65 (num_exp)


State 100

   75 exp: _INC_OP _ID .

    $default  reduce using rule 75 (exp)


State 101

   74 exp: _DEC_OP _ID .

    $default  reduce using rule 74 (exp)


State 102

   92 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 92 (return_statement)


State 103

   67 num_exp: num_exp $@15 . _AROP exp

    _AROP  shift, and go to state 121


State 104

   64 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   67 num_exp: num_exp . $@15 _AROP exp

    _SEMICOLON  shift, and go to state 122

    $default  reduce using rule 66 ($@15)

    $@15  go to state 103


State 105

   59 fulUn_statement: _ID _INC_OP _SEMICOLON .

    $default  reduce using rule 59 (fulUn_statement)


State 106

   61 fulUn_statement: _ID _DEC_OP _SEMICOLON .

    $default  reduce using rule 61 (fulUn_statement)


State 107

   81 function_call: _ID $@16 _LPAREN . $@17 argument _RPAREN

    $default  reduce using rule 80 ($@17)

    $@17  go to state 123


State 108

   63 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 63 (compound_statement)


State 109

   94 select_statement: _SELECT arg_select _FROM . _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _ID  shift, and go to state 124


State 110

   96 arg_select: arg_select _COMMA . _ID

    _ID  shift, and go to state 125


State 111

   60 fulUn_statement: _INC_OP _ID _SEMICOLON .

    $default  reduce using rule 60 (fulUn_statement)


State 112

   62 fulUn_statement: _DEC_OP _ID _SEMICOLON .

    $default  reduce using rule 62 (fulUn_statement)


State 113

   58 para_statement: _PARA _LPAREN @13 . _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@14 statement

    _ID  shift, and go to state 126


State 114

   45 check_exp: _CHECK _LSBRAC _ID . $@9 _RSBRAC _LBRACKET $@10 whenPart otherwise _RBRACKET

    $default  reduce using rule 43 ($@9)

    $@9  go to state 127


State 115

   87 if_statement: if_part _ELSE statement .

    $default  reduce using rule 87 (if_statement)


State 116

   31 var_poss: var_poss _COMMA _ID _ASSIGN . num_exp

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    num_exp        go to state 128
    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78


State 117

   67 num_exp: num_exp . $@15 _AROP exp
   91 rel_exp: num_exp . _RELOP num_exp

    _RELOP  shift, and go to state 129

    $default  reduce using rule 66 ($@15)

    $@15  go to state 103


State 118

   90 if_part: _IF _LPAREN @18 rel_exp . $@19 _RPAREN statement

    $default  reduce using rule 89 ($@19)

    $@19  go to state 130


State 119

   71 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 71 (exp)


State 120

   76 exp: _LPAREN exp _RELOP . exp _RPAREN _QMARK exp _COLON exp

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    exp            go to state 131
    literal        go to state 77
    function_call  go to state 78


State 121

   67 num_exp: num_exp $@15 _AROP . exp

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    exp            go to state 132
    literal        go to state 77
    function_call  go to state 78


State 122

   64 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 64 (assignment_statement)


State 123

   81 function_call: _ID $@16 _LPAREN $@17 . argument _RPAREN

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    $default  reduce using rule 82 (argument)

    num_exp        go to state 133
    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78
    argument       go to state 134
    has_args       go to state 135


State 124

   94 select_statement: _SELECT arg_select _FROM _ID . _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON

    _WHERE  shift, and go to state 136


State 125

   96 arg_select: arg_select _COMMA _ID .

    $default  reduce using rule 96 (arg_select)


State 126

   58 para_statement: _PARA _LPAREN @13 _ID . _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@14 statement

    _ASSIGN  shift, and go to state 137


State 127

   45 check_exp: _CHECK _LSBRAC _ID $@9 . _RSBRAC _LBRACKET $@10 whenPart otherwise _RBRACKET

    _RSBRAC  shift, and go to state 138


State 128

   31 var_poss: var_poss _COMMA _ID _ASSIGN num_exp .
   67 num_exp: num_exp . $@15 _AROP exp

    _AROP     reduce using rule 66 ($@15)
    $default  reduce using rule 31 (var_poss)

    $@15  go to state 103


State 129

   91 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    num_exp        go to state 139
    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78


State 130

   90 if_part: _IF _LPAREN @18 rel_exp $@19 . _RPAREN statement

    _RPAREN  shift, and go to state 140


State 131

   76 exp: _LPAREN exp _RELOP exp . _RPAREN _QMARK exp _COLON exp

    _RPAREN  shift, and go to state 141


State 132

   67 num_exp: num_exp $@15 _AROP exp .

    $default  reduce using rule 67 (num_exp)


State 133

   67 num_exp: num_exp . $@15 _AROP exp
   84 has_args: num_exp .

    _AROP     reduce using rule 66 ($@15)
    $default  reduce using rule 84 (has_args)

    $@15  go to state 103


State 134

   81 function_call: _ID $@16 _LPAREN $@17 argument . _RPAREN

    _RPAREN  shift, and go to state 142


State 135

   83 argument: has_args .
   85 has_args: has_args . _COMMA num_exp

    _COMMA  shift, and go to state 143

    $default  reduce using rule 83 (argument)


State 136

   94 select_statement: _SELECT arg_select _FROM _ID _WHERE . _LPAREN rel_exp _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 144


State 137

   58 para_statement: _PARA _LPAREN @13 _ID _ASSIGN . literal _COLON literal _COLON _PASO literal _RPAREN $@14 statement

    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70

    literal  go to state 145


State 138

   45 check_exp: _CHECK _LSBRAC _ID $@9 _RSBRAC . _LBRACKET $@10 whenPart otherwise _RBRACKET

    _LBRACKET  shift, and go to state 146


State 139

   67 num_exp: num_exp . $@15 _AROP exp
   91 rel_exp: num_exp _RELOP num_exp .

    _RPAREN   reduce using rule 91 (rel_exp)
    $default  reduce using rule 66 ($@15)

    $@15  go to state 103


State 140

   90 if_part: _IF _LPAREN @18 rel_exp $@19 _RPAREN . statement

    _IF        shift, and go to state 42
    _RETURN    shift, and go to state 43
    _ID        shift, and go to state 44
    _LBRACKET  shift, and go to state 45
    _SELECT    shift, and go to state 46
    _INC_OP    shift, and go to state 47
    _DEC_OP    shift, and go to state 48
    _PARA      shift, and go to state 49
    _CHECK     shift, and go to state 50

    statement             go to state 147
    check_exp             go to state 53
    void_func             go to state 54
    para_statement        go to state 55
    fulUn_statement       go to state 56
    compound_statement    go to state 57
    assignment_statement  go to state 58
    function_call         go to state 59
    if_statement          go to state 60
    if_part               go to state 61
    return_statement      go to state 62
    select_statement      go to state 63


State 141

   76 exp: _LPAREN exp _RELOP exp _RPAREN . _QMARK exp _COLON exp

    _QMARK  shift, and go to state 148


State 142

   81 function_call: _ID $@16 _LPAREN $@17 argument _RPAREN .

    $default  reduce using rule 81 (function_call)


State 143

   85 has_args: has_args _COMMA . num_exp

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    num_exp        go to state 149
    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78


State 144

   94 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN . rel_exp _RPAREN _SEMICOLON

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    num_exp        go to state 117
    exp            go to state 76
    literal        go to state 77
    function_call  go to state 78
    rel_exp        go to state 150


State 145

   58 para_statement: _PARA _LPAREN @13 _ID _ASSIGN literal . _COLON literal _COLON _PASO literal _RPAREN $@14 statement

    _COLON  shift, and go to state 151


State 146

   45 check_exp: _CHECK _LSBRAC _ID $@9 _RSBRAC _LBRACKET . $@10 whenPart otherwise _RBRACKET

    $default  reduce using rule 44 ($@10)

    $@10  go to state 152


State 147

   90 if_part: _IF _LPAREN @18 rel_exp $@19 _RPAREN statement .

    $default  reduce using rule 90 (if_part)


State 148

   76 exp: _LPAREN exp _RELOP exp _RPAREN _QMARK . exp _COLON exp

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    exp            go to state 153
    literal        go to state 77
    function_call  go to state 78


State 149

   67 num_exp: num_exp . $@15 _AROP exp
   85 has_args: has_args _COMMA num_exp .

    _AROP     reduce using rule 66 ($@15)
    $default  reduce using rule 85 (has_args)

    $@15  go to state 103


State 150

   94 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 154


State 151

   58 para_statement: _PARA _LPAREN @13 _ID _ASSIGN literal _COLON . literal _COLON _PASO literal _RPAREN $@14 statement

    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70

    literal  go to state 155


State 152

   45 check_exp: _CHECK _LSBRAC _ID $@9 _RSBRAC _LBRACKET $@10 . whenPart otherwise _RBRACKET

    _WHEN  shift, and go to state 156

    whenPart  go to state 157
    when      go to state 158


State 153

   76 exp: _LPAREN exp _RELOP exp _RPAREN _QMARK exp . _COLON exp

    _COLON  shift, and go to state 159


State 154

   94 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 160


State 155

   58 para_statement: _PARA _LPAREN @13 _ID _ASSIGN literal _COLON literal . _COLON _PASO literal _RPAREN $@14 statement

    _COLON  shift, and go to state 161


State 156

   54 when: _WHEN . literal $@12 _ARROW statement

    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70

    literal  go to state 162


State 157

   45 check_exp: _CHECK _LSBRAC _ID $@9 _RSBRAC _LBRACKET $@10 whenPart . otherwise _RBRACKET
   50 whenPart: whenPart . when finish_par

    _WHEN       shift, and go to state 156
    _OTHERWISE  shift, and go to state 163

    $default  reduce using rule 46 (otherwise)

    otherwise  go to state 164
    when       go to state 165


State 158

   49 whenPart: when . finish_par

    _FINISH  shift, and go to state 166

    $default  reduce using rule 51 (finish_par)

    finish_par  go to state 167


State 159

   76 exp: _LPAREN exp _RELOP exp _RPAREN _QMARK exp _COLON . exp

    _ID           shift, and go to state 68
    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70
    _LPAREN       shift, and go to state 71
    _INC_OP       shift, and go to state 73
    _DEC_OP       shift, and go to state 74

    exp            go to state 168
    literal        go to state 77
    function_call  go to state 78


State 160

   94 select_statement: _SELECT arg_select _FROM _ID _WHERE _LPAREN rel_exp _RPAREN _SEMICOLON .

    $default  reduce using rule 94 (select_statement)


State 161

   58 para_statement: _PARA _LPAREN @13 _ID _ASSIGN literal _COLON literal _COLON . _PASO literal _RPAREN $@14 statement

    _PASO  shift, and go to state 169


State 162

   54 when: _WHEN literal . $@12 _ARROW statement

    $default  reduce using rule 53 ($@12)

    $@12  go to state 170


State 163

   48 otherwise: _OTHERWISE . $@11 _ARROW statement

    $default  reduce using rule 47 ($@11)

    $@11  go to state 171


State 164

   45 check_exp: _CHECK _LSBRAC _ID $@9 _RSBRAC _LBRACKET $@10 whenPart otherwise . _RBRACKET

    _RBRACKET  shift, and go to state 172


State 165

   50 whenPart: whenPart when . finish_par

    _FINISH  shift, and go to state 166

    $default  reduce using rule 51 (finish_par)

    finish_par  go to state 173


State 166

   52 finish_par: _FINISH . _SEMICOLON

    _SEMICOLON  shift, and go to state 174


State 167

   49 whenPart: when finish_par .

    $default  reduce using rule 49 (whenPart)


State 168

   76 exp: _LPAREN exp _RELOP exp _RPAREN _QMARK exp _COLON exp .

    $default  reduce using rule 76 (exp)


State 169

   58 para_statement: _PARA _LPAREN @13 _ID _ASSIGN literal _COLON literal _COLON _PASO . literal _RPAREN $@14 statement

    _INT_NUMBER   shift, and go to state 69
    _UINT_NUMBER  shift, and go to state 70

    literal  go to state 175


State 170

   54 when: _WHEN literal $@12 . _ARROW statement

    _ARROW  shift, and go to state 176


State 171

   48 otherwise: _OTHERWISE $@11 . _ARROW statement

    _ARROW  shift, and go to state 177


State 172

   45 check_exp: _CHECK _LSBRAC _ID $@9 _RSBRAC _LBRACKET $@10 whenPart otherwise _RBRACKET .

    $default  reduce using rule 45 (check_exp)


State 173

   50 whenPart: whenPart when finish_par .

    $default  reduce using rule 50 (whenPart)


State 174

   52 finish_par: _FINISH _SEMICOLON .

    $default  reduce using rule 52 (finish_par)


State 175

   58 para_statement: _PARA _LPAREN @13 _ID _ASSIGN literal _COLON literal _COLON _PASO literal . _RPAREN $@14 statement

    _RPAREN  shift, and go to state 178


State 176

   54 when: _WHEN literal $@12 _ARROW . statement

    _IF        shift, and go to state 42
    _RETURN    shift, and go to state 43
    _ID        shift, and go to state 44
    _LBRACKET  shift, and go to state 45
    _SELECT    shift, and go to state 46
    _INC_OP    shift, and go to state 47
    _DEC_OP    shift, and go to state 48
    _PARA      shift, and go to state 49
    _CHECK     shift, and go to state 50

    statement             go to state 179
    check_exp             go to state 53
    void_func             go to state 54
    para_statement        go to state 55
    fulUn_statement       go to state 56
    compound_statement    go to state 57
    assignment_statement  go to state 58
    function_call         go to state 59
    if_statement          go to state 60
    if_part               go to state 61
    return_statement      go to state 62
    select_statement      go to state 63


State 177

   48 otherwise: _OTHERWISE $@11 _ARROW . statement

    _IF        shift, and go to state 42
    _RETURN    shift, and go to state 43
    _ID        shift, and go to state 44
    _LBRACKET  shift, and go to state 45
    _SELECT    shift, and go to state 46
    _INC_OP    shift, and go to state 47
    _DEC_OP    shift, and go to state 48
    _PARA      shift, and go to state 49
    _CHECK     shift, and go to state 50

    statement             go to state 180
    check_exp             go to state 53
    void_func             go to state 54
    para_statement        go to state 55
    fulUn_statement       go to state 56
    compound_statement    go to state 57
    assignment_statement  go to state 58
    function_call         go to state 59
    if_statement          go to state 60
    if_part               go to state 61
    return_statement      go to state 62
    select_statement      go to state 63


State 178

   58 para_statement: _PARA _LPAREN @13 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN . $@14 statement

    $default  reduce using rule 57 ($@14)

    $@14  go to state 181


State 179

   54 when: _WHEN literal $@12 _ARROW statement .

    $default  reduce using rule 54 (when)


State 180

   48 otherwise: _OTHERWISE $@11 _ARROW statement .

    $default  reduce using rule 48 (otherwise)


State 181

   58 para_statement: _PARA _LPAREN @13 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@14 . statement

    _IF        shift, and go to state 42
    _RETURN    shift, and go to state 43
    _ID        shift, and go to state 44
    _LBRACKET  shift, and go to state 45
    _SELECT    shift, and go to state 46
    _INC_OP    shift, and go to state 47
    _DEC_OP    shift, and go to state 48
    _PARA      shift, and go to state 49
    _CHECK     shift, and go to state 50

    statement             go to state 182
    check_exp             go to state 53
    void_func             go to state 54
    para_statement        go to state 55
    fulUn_statement       go to state 56
    compound_statement    go to state 57
    assignment_statement  go to state 58
    function_call         go to state 59
    if_statement          go to state 60
    if_part               go to state 61
    return_statement      go to state 62
    select_statement      go to state 63


State 182

   58 para_statement: _PARA _LPAREN @13 _ID _ASSIGN literal _COLON literal _COLON _PASO literal _RPAREN $@14 statement .

    $default  reduce using rule 58 (para_statement)
